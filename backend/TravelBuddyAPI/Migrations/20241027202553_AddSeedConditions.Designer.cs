// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241027202553_AddSeedConditions")]
    partial class AddSeedConditions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dff5fe0b-e504-4198-98e6-ec495be75a39"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("8da1c2a5-1ad2-4cdf-b9cd-dad58adf7253"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("56307e31-c2a8-48f1-9171-c99ab95da976"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("8da1c2a5-1ad2-4cdf-b9cd-dad58adf7253")
                        },
                        new
                        {
                            Id = new Guid("22885fec-1232-4086-a8d3-2b48d9312aa9"),
                            Name = "art",
                            SuperCategoryId = new Guid("8da1c2a5-1ad2-4cdf-b9cd-dad58adf7253")
                        },
                        new
                        {
                            Id = new Guid("f2154466-39e6-45f8-96c3-67ba8affa188"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46"),
                            Name = "culture",
                            SuperCategoryId = new Guid("f2154466-39e6-45f8-96c3-67ba8affa188")
                        },
                        new
                        {
                            Id = new Guid("b42f0259-b8c2-4600-b25d-2259977d80d3"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46")
                        },
                        new
                        {
                            Id = new Guid("b6733ffc-422e-46e3-a873-2439efcb845c"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46")
                        },
                        new
                        {
                            Id = new Guid("32c4f57d-30b0-4fbc-9649-2c160090306c"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46")
                        },
                        new
                        {
                            Id = new Guid("3de622cc-6bc7-489c-96c6-c73de36ae5ef"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46")
                        },
                        new
                        {
                            Id = new Guid("73362aaa-8ad0-4025-9a2f-03da3174ba8d"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46")
                        },
                        new
                        {
                            Id = new Guid("1037a7fb-2606-475c-a850-9f7953a1a317"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46")
                        },
                        new
                        {
                            Id = new Guid("ad210df4-28be-47d8-95ad-a287824be123"),
                            Name = "museum",
                            SuperCategoryId = new Guid("b51d980e-6bb6-4766-a1cf-ef264d8e9e46")
                        },
                        new
                        {
                            Id = new Guid("a548aa27-ca1d-45a5-bf82-fbe398e19ca7"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("64543a4c-f471-4082-a879-0a9133af5774"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("a548aa27-ca1d-45a5-bf82-fbe398e19ca7")
                        },
                        new
                        {
                            Id = new Guid("448cd02b-71db-422f-8bdb-ae3ee87f7ca8"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("fa5620af-97f9-40df-8831-64a42c4f0a69"),
                            Name = "park",
                            SuperCategoryId = new Guid("448cd02b-71db-422f-8bdb-ae3ee87f7ca8")
                        },
                        new
                        {
                            Id = new Guid("e3a438c7-58e1-4ac8-8079-630764218e63"),
                            Name = "garden",
                            SuperCategoryId = new Guid("fa5620af-97f9-40df-8831-64a42c4f0a69")
                        },
                        new
                        {
                            Id = new Guid("998d112f-0440-48df-ba47-7e3159222b11"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("fa5620af-97f9-40df-8831-64a42c4f0a69")
                        },
                        new
                        {
                            Id = new Guid("b73fe26d-56c2-4a13-8994-544c29e5711f"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("11bf5c26-99b0-4399-a9b3-86660ce1b511"),
                            Name = "forest",
                            SuperCategoryId = new Guid("b73fe26d-56c2-4a13-8994-544c29e5711f")
                        },
                        new
                        {
                            Id = new Guid("8506d115-b73d-4ca4-945b-fa5c9916c02b"),
                            Name = "water",
                            SuperCategoryId = new Guid("b73fe26d-56c2-4a13-8994-544c29e5711f")
                        },
                        new
                        {
                            Id = new Guid("578b3eaa-2edd-4aab-bb47-8e6503c5e38e"),
                            Name = "spring",
                            SuperCategoryId = new Guid("8506d115-b73d-4ca4-945b-fa5c9916c02b")
                        },
                        new
                        {
                            Id = new Guid("84cd90ac-b1ab-4899-aedf-b144b7359f7b"),
                            Name = "reef",
                            SuperCategoryId = new Guid("8506d115-b73d-4ca4-945b-fa5c9916c02b")
                        },
                        new
                        {
                            Id = new Guid("3be5c01a-a509-4364-8032-2b49d0d69903"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("8506d115-b73d-4ca4-945b-fa5c9916c02b")
                        },
                        new
                        {
                            Id = new Guid("5c6cc61f-cba9-4919-b44d-4a90ba6aa0f9"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("8506d115-b73d-4ca4-945b-fa5c9916c02b")
                        },
                        new
                        {
                            Id = new Guid("1a9235ce-364e-412f-85b9-440439fc5d2f"),
                            Name = "sea",
                            SuperCategoryId = new Guid("8506d115-b73d-4ca4-945b-fa5c9916c02b")
                        },
                        new
                        {
                            Id = new Guid("a7379e1c-e1a4-45e7-b29c-ff869514fc88"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("b73fe26d-56c2-4a13-8994-544c29e5711f")
                        },
                        new
                        {
                            Id = new Guid("149a1c73-c213-49c1-92e1-9347ed06e8cd"),
                            Name = "peak",
                            SuperCategoryId = new Guid("a7379e1c-e1a4-45e7-b29c-ff869514fc88")
                        },
                        new
                        {
                            Id = new Guid("ccc217d8-421e-4028-b39e-bf5399daad40"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("a7379e1c-e1a4-45e7-b29c-ff869514fc88")
                        },
                        new
                        {
                            Id = new Guid("5a746f9a-97f2-420e-b913-390d6d53eb43"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("a7379e1c-e1a4-45e7-b29c-ff869514fc88")
                        },
                        new
                        {
                            Id = new Guid("66ef40ff-8aa4-44a9-849e-ed745741921a"),
                            Name = "rock",
                            SuperCategoryId = new Guid("a7379e1c-e1a4-45e7-b29c-ff869514fc88")
                        },
                        new
                        {
                            Id = new Guid("3d00c26b-d354-4c21-b42b-c91179c3ced1"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("a7379e1c-e1a4-45e7-b29c-ff869514fc88")
                        },
                        new
                        {
                            Id = new Guid("6d4f3b69-7528-45e5-8159-ac282029634f"),
                            Name = "sand",
                            SuperCategoryId = new Guid("b73fe26d-56c2-4a13-8994-544c29e5711f")
                        },
                        new
                        {
                            Id = new Guid("76cf31be-4131-4d35-b27e-0326a227b721"),
                            Name = "dune",
                            SuperCategoryId = new Guid("6d4f3b69-7528-45e5-8159-ac282029634f")
                        },
                        new
                        {
                            Id = new Guid("b94d478d-ad38-41f2-a559-40b256df27f3"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("7023a116-9d47-4adf-b651-d63c44f319b0"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("58c8998f-83b0-4acc-9719-1bd1184e3277"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("7023a116-9d47-4adf-b651-d63c44f319b0")
                        },
                        new
                        {
                            Id = new Guid("3672f4b5-108f-4234-83ab-b666d068ebfb"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("58c8998f-83b0-4acc-9719-1bd1184e3277")
                        },
                        new
                        {
                            Id = new Guid("a0116057-0dcc-4052-8cde-56ffa50686e7"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("58c8998f-83b0-4acc-9719-1bd1184e3277")
                        },
                        new
                        {
                            Id = new Guid("d2f85148-e220-42e3-a958-d81871656d1b"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("58c8998f-83b0-4acc-9719-1bd1184e3277")
                        },
                        new
                        {
                            Id = new Guid("751645b0-20df-448e-a01d-05fb5045c5b4"),
                            Name = "clock",
                            SuperCategoryId = new Guid("58c8998f-83b0-4acc-9719-1bd1184e3277")
                        },
                        new
                        {
                            Id = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef"),
                            Name = "sights",
                            SuperCategoryId = new Guid("7023a116-9d47-4adf-b651-d63c44f319b0")
                        },
                        new
                        {
                            Id = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("c341b743-d01b-4e73-9cbe-746b32b553a3"),
                            Name = "church",
                            SuperCategoryId = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8")
                        },
                        new
                        {
                            Id = new Guid("4050cce4-8f1b-42fb-926e-6789f78ae4cd"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8")
                        },
                        new
                        {
                            Id = new Guid("3b14a878-fb50-4b21-a2dd-25c8dc650a44"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8")
                        },
                        new
                        {
                            Id = new Guid("b6d346ba-fc12-46e6-a214-634f97ab8373"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8")
                        },
                        new
                        {
                            Id = new Guid("d79e5cf5-7b27-4bce-a889-7f1638e3fd84"),
                            Name = "temple",
                            SuperCategoryId = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8")
                        },
                        new
                        {
                            Id = new Guid("569a0591-88a0-4235-946e-c99507702858"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8")
                        },
                        new
                        {
                            Id = new Guid("59a7d9cd-e5b3-4180-8a35-65941c3f14ab"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("a0ad5b6a-8ed8-4570-b75d-a5eaeecb7ed8")
                        },
                        new
                        {
                            Id = new Guid("a6d7855e-7a57-4cfc-aa21-ca4ad9c4f405"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("7cc7986d-000f-4174-94db-4554a8988714"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("ece47e1f-5ed4-4db0-a7da-3328877d9596"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("ea0037cc-7727-4f09-b5bc-e9d880f96bdb"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("9f969318-57c5-4ec4-b828-8c6303c84198"),
                            Name = "tower",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("6129e68f-506e-4ce0-9c66-5948f799736e"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("f613ccf7-d3f8-41d6-a8a2-77f99d8204c1"),
                            Name = "fort",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("28a3c634-77ec-408b-8cb5-8fc4d366d2ca"),
                            Name = "castle",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("d56dde13-e990-41ce-8457-a4ac032ba946"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("8ea8a252-e6db-4c83-8f40-0c2b14f5eb04"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("c6a8cd14-5b6e-47c7-8978-dbb5d17019a3"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("d04b4480-5aa7-492d-9cf0-df0971b69f74"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("0332b7dc-3a70-4fce-8b23-51ba10d38cef")
                        },
                        new
                        {
                            Id = new Guid("92c83cad-4a23-4977-8494-44267006dcdb"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("0b7a24c8-2c3b-446a-9595-5e505d082005"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("ec0a742c-7df1-4f4d-a221-daccc25d2590"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("7bcfb77f-af6a-4e68-9d33-13ed69864e1f"),
                            Name = "ship",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("a1c03765-2620-412c-91cf-2afbdf7e1371"),
                            Name = "tank",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("af3d48ed-bd25-4fd0-91c1-3b11bf26bcf6"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("bf2da80c-90a6-466a-bb16-ce6b690a6aa6"),
                            Name = "monument",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("b6386d09-3006-44df-b16e-244860c2cca4"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("9c54df3e-e241-48ff-b407-2389bbf22069"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("dea6fe82-24de-46a3-98fe-9abd7947c22c"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("bfbd2f20-2103-43ca-9c98-5203d8e9f5c5"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("23efaf65-3cdf-487f-8df8-fb33d4349b0b")
                        },
                        new
                        {
                            Id = new Guid("00b2de05-2f15-41f4-b407-adb715749585"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("00b2de05-2f15-41f4-b407-adb715749585")
                        },
                        new
                        {
                            Id = new Guid("fc94a3af-ddf3-4be4-b3ed-57b7552c2ec0"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("fe48ae6f-50ce-4d50-810e-6d4778ddf6e4"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("1c1dd6ca-59ff-4e90-96a0-d1334cd84f17"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("92b8579a-afcd-4c4a-96a7-079ac6013918"),
                            Name = "islam",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("ea44073c-0a69-4552-87fd-1ccb217b879f"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("5eddcca5-9c86-4d6c-9e32-fa40a1d1b248"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("5e45c98c-c4e2-493e-9fa1-9ff4faf400d3"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("7206a4d5-523e-47c4-8343-25c0fd4636d9"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("f5ad28a2-5815-4d0b-a21e-ea4750f0e7b9")
                        },
                        new
                        {
                            Id = new Guid("8c673470-36a7-44ce-ab46-a42dd9afb99d"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("bf63b820-3c36-4e8c-888e-03c655b59da4"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("8c673470-36a7-44ce-ab46-a42dd9afb99d")
                        },
                        new
                        {
                            Id = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("cbfcc9b6-cb8a-4dbb-913c-e353198cbe3f"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("0d42c63e-dea0-45a5-aa3f-aeb76883b545"),
                            Name = "burger",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("8c22cc89-ad1f-43a5-88d9-b55f9b39c7b7"),
                            Name = "regional",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("5c6cc92a-67fc-4fd1-aada-0484d5733dcd"),
                            Name = "italian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("e5db128c-eac1-498b-ae32-46b761eda5a2"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("0d054345-c7a0-4fc2-8f75-1bc818796a93"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("09a2ab12-a7d9-47ce-b61a-d2f54648507c"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("ef00e12d-0bd2-461b-b124-b2df653dcf0f"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("fc7fc223-b38c-4534-9e10-b3fdc9268f22"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("697bf420-ae42-4026-a13a-4734d941cbb7"),
                            Name = "american",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("1e1b8675-a066-4a80-80f7-a7fcbad975fb"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("90a5ea42-eec8-4f4a-b5d3-90e5214456e8"),
                            Name = "indian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("ebcbd368-0407-455a-ba2c-2f97876157d4"),
                            Name = "asian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("fb2bf4f4-e43b-4b40-9877-b56b4c00f2cf"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("9e27e63d-2ea0-4c6c-8153-37eccf1c859c"),
                            Name = "french",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("f4001468-8649-4107-afd2-6696b4c87565"),
                            Name = "german",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("79d46fc8-cf3b-4b7e-9fc1-37e0334967cb"),
                            Name = "thai",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("300ccc89-2b4d-449c-9c81-ec85ee654454"),
                            Name = "greek",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("b1b988e5-f2bf-4f9b-ab77-7b58d814e9b5"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("53099d3e-c1fd-4f79-9f77-7e0cf827b3bb"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("e3496114-516a-480f-b60a-813fdcc2aec2"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("69687aa2-4bc3-4d13-9749-85201a47cf09"),
                            Name = "international",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("17577c4b-fcd3-4215-b8e2-9317dc25c881"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("19b4728a-46b6-45a8-b4aa-97004d12c655"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("ee6c0c89-0b9b-418b-9401-e478d0daad78"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("1166be37-075a-4b77-a331-579a86d18851"),
                            Name = "korean",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("9032c67c-a79e-44c8-8d83-87bd998bcbd9"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("85375812-b27e-43ce-b9fc-421cc0f00408"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("d5ba7a58-11b2-486f-9b4b-555c2cedbebb"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("dd75bc3f-0adf-473e-bfd6-9ddcdccde1d3"),
                            Name = "fish",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("14709392-179d-400a-989f-8f4cc0083753"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("dd83dff8-a7d1-4fa5-a307-0c2f3e693fcb"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("dff90a57-dce3-47e8-9f5e-16af70b8795e"),
                            Name = "friture",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("76155d9b-526e-4126-bcd4-71d7dbd8e929"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("0f603879-1942-4960-badc-1fca6e8c918f"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("5195b76d-35e4-480d-85f1-ac9c1cae3c4d"),
                            Name = "wings",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("678655b8-51ba-4703-a050-b84d9a3ba3e0"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("a9c9a73a-f8a3-40ce-98e0-3d7d91a8f449"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("389364d4-3eb0-4902-8fff-fe3703ccbc90"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("71ba74ba-266a-41ed-8dbe-0485095bc6e8"),
                            Name = "arab",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("5eca75ef-a0ff-4408-bfd8-098440215cc8"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("680140d5-0f20-486c-a277-0c92bd87c5ed"),
                            Name = "russian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("5ae76711-9a66-4d86-a1f2-875f9c2b8d5c"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("b77a75f0-161e-49f3-9fea-fb19e1e417e5"),
                            Name = "african",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("76e4f857-c1e9-4448-9a60-67cf35988206"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("f82a7d68-4de0-41dc-9c58-82ecaa6a8fc1"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("8b307360-5808-44b3-aec2-a8751a39dc8f"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("df08f58f-15a9-40a4-90a7-06eb9d038c0a"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("0e4c232e-cee3-4ce7-ad9f-f6eab2faa84b"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("30bd7f8d-f39a-475c-b05c-9c39ffca145e"),
                            Name = "curry",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("d6ca1e26-c446-4922-861e-f3199ad42032"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("cedc868a-ce0b-429f-9ed5-57cce7030872"),
                            Name = "persian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("c3070329-17ab-40bd-9228-7f72f1fe9450"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("411baf41-1281-47ed-883e-33516447e84b"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("7974e164-dc75-4678-a995-469fa54b20b0"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("61e59136-854a-4ebb-9cdf-f44de9d7480b"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("753e9247-1aa7-446b-aaaa-7d7b22f023b6"),
                            Name = "pita",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("878b7b58-8f87-4d78-a1bc-5ae83c3d533f"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("7b437e6a-2a3b-4c89-90a1-fc0f1aaca28c"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("1f404974-c8f0-43b0-bd92-26b201bf1fdc"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("168d6bd3-2510-4c01-b9eb-a042ecaca07c"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("64fa2799-bca2-4aff-9db7-3e27c03b5f37"),
                            Name = "irish",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("e2d69323-589b-44d1-bf24-9c812caaa709"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("41f8b2fc-b20a-4e3b-b191-e0099c5ae4cc"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("8db07efd-a7cb-4a5f-b31d-7e9dab4371c5"),
                            Name = "danish",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("c16b27ff-00cb-4416-90b7-68c94a79ba6f"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("964d93ee-854c-4b70-b01a-ecd6ea85caf6"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("b029a297-c7f7-41ed-bbab-1014a3191d50"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("a6327e1e-b004-40b1-8ddd-940cb512dde7"),
                            Name = "western",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("a00fe996-c406-48bf-87b8-31e0639607a4"),
                            Name = "european",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("365fc79b-b9df-46cb-8458-2c284e5ec605"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("81ed3e51-6698-4929-81e2-c07cf4f7c78a"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("89cb5c54-8f26-4f15-9a7f-7581c333c0bc"),
                            Name = "soup",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("265b0e55-786e-4ca6-b07c-54a66bf43ef9"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("94541087-f1f1-4c40-903f-56a48ef2ed28"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("2f552cd0-3376-472a-b7cd-bdd6b88ca306"),
                            Name = "czech",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("889613c4-8f94-4cb0-90bd-27087a093996"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("3734393e-9774-4564-8688-f39d64f319b5"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("77480564-5266-400e-b2e8-ed153f99fca7"),
                            Name = "malay",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("9760590b-bc1d-4782-8e18-00249b26efa1"),
                            Name = "chili",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("70c4e40e-21bf-4677-832b-0171642ffcb0"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("745682bd-0c37-4190-98fd-589c043f4c0f"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("5b0b19ad-5082-4937-a86b-b4f5ecd84a8e"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("3ef6721c-29d6-4a7d-a177-086ccc167003"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("1614134e-4c01-4c38-b2e3-65842aad5e93")
                        },
                        new
                        {
                            Id = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("fedec26e-47e3-40b2-b578-4368648145f0"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("a398cf72-8471-46cc-8461-a34d40b74727"),
                            Name = "burger",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("f2998f4b-dfff-475a-a4c8-8c2c613f3e0d"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("5fb3b7ef-1b02-4df9-b772-19f3cb609f2a"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("0d2f3897-aaf1-496e-82e0-555df9ccf824"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("16e70f0d-c641-4874-8eed-3111d1afe576"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("a721b8ea-caa2-472f-b585-96050e39340e"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("3d0b9e0c-2fc4-4d1d-9901-f8259df508b7"),
                            Name = "wings",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("c2c8251e-989f-4645-9b87-652d3064fd98"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("8c1ac72b-dd04-4790-8aec-2131a78266f9"),
                            Name = "pita",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("7885a602-30f5-465a-8b1c-ca496ba3900e"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("1bfb342b-147f-4e9b-8461-5d76c3245882"),
                            Name = "soup",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("fcee1c4b-4bee-4770-9f04-a22437ebef89"),
                            Name = "salad",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("4cc15771-9dc8-41b3-ad6f-3e703b244ead"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("8ca9439f-2500-46dc-8150-07b72d0f23c1")
                        },
                        new
                        {
                            Id = new Guid("3937beb9-321e-4706-99f3-9aa86662680e"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("2686d3fb-34a8-44e8-acd2-af05901aa9b3"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("03e8b91d-3db7-48a1-97c4-83f19c103e06"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("26e4ba36-2d88-4a76-ad9f-58f1e87a6763"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("835e3444-bd51-4d1d-b497-e9ee8e9fa25c"),
                            Name = "donut",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("d260034b-48f8-4553-945f-024f285ae95e"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("fcdb14af-d8f8-4622-b336-39272747a4c5"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("6c321dcb-0e02-419a-a838-89a5aaffa582"),
                            Name = "cake",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("9910bad1-b640-4a96-8783-0bc1226fb916"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("68a8e923-e38d-4be3-acba-da65b7759f3d"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("8d657bc1-f66f-497a-9837-bb030c54dd1a"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("b9661971-8f5b-4f1a-8593-64ef8f44f157"),
                            Name = "tea",
                            SuperCategoryId = new Guid("3937beb9-321e-4706-99f3-9aa86662680e")
                        },
                        new
                        {
                            Id = new Guid("2658e3ec-245a-4dc6-b3ec-ab974a5b84f3"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("7ba4c2dc-faf5-484a-a0c0-c97ae38ca04c"),
                            Name = "bar",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("9bceee4c-ed8e-4da4-b3fe-83d940fdf17c"),
                            Name = "pub",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("cf19bf29-5920-4e19-a49d-f32f5a261433"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("149c6b9f-4abc-45cb-842a-a0d250e7ac72"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        },
                        new
                        {
                            Id = new Guid("056e9649-e8bf-4647-8ffa-5ab458dff6cf"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("8366cda5-9a8a-46a8-bb57-3d8d7547509a")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae3713c3-782a-439d-b20c-4d2cc19cdef2"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("301ad21d-6929-4471-bb95-0c05365427a5"),
                            Name = "free",
                            SuperConditionId = new Guid("ae3713c3-782a-439d-b20c-4d2cc19cdef2")
                        },
                        new
                        {
                            Id = new Guid("17572550-2aeb-49ed-b367-30afcab9beeb"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("ae3713c3-782a-439d-b20c-4d2cc19cdef2")
                        },
                        new
                        {
                            Id = new Guid("d3c02091-6611-4b8a-86cd-ae3b2e2fe999"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("f8e7b458-1a1c-49fc-a648-5744121f7f08"),
                            Name = "yes",
                            SuperConditionId = new Guid("d3c02091-6611-4b8a-86cd-ae3b2e2fe999")
                        },
                        new
                        {
                            Id = new Guid("7faf3831-ac09-428a-ae2e-8119d214cf5b"),
                            Name = "limited",
                            SuperConditionId = new Guid("d3c02091-6611-4b8a-86cd-ae3b2e2fe999")
                        },
                        new
                        {
                            Id = new Guid("7e68db23-01a6-4659-94a2-306e2361f8e5"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("a636a91e-703a-4f56-9599-5cb1cd3486a0"),
                            Name = "yes",
                            SuperConditionId = new Guid("7e68db23-01a6-4659-94a2-306e2361f8e5")
                        },
                        new
                        {
                            Id = new Guid("eada02ae-7337-4e90-abcd-d3fbe03c51d2"),
                            Name = "leashed",
                            SuperConditionId = new Guid("7e68db23-01a6-4659-94a2-306e2361f8e5")
                        },
                        new
                        {
                            Id = new Guid("b7b005b8-54f5-4277-91ad-14d96a4a397d"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("6f59c41e-3ee1-43bc-ae51-c848344751be"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("179f7eec-692e-4f00-a5a2-6b244547ce77"),
                            Name = "yes",
                            SuperConditionId = new Guid("6f59c41e-3ee1-43bc-ae51-c848344751be")
                        },
                        new
                        {
                            Id = new Guid("c1afe1c4-5d9c-4d52-ba12-3f1b0584289e"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("6f59c41e-3ee1-43bc-ae51-c848344751be")
                        },
                        new
                        {
                            Id = new Guid("846db3d8-7f38-40dc-af92-6a948b4619c1"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("b6970b73-3f31-4d29-8cc7-3264863bf25c"),
                            Name = "customers",
                            SuperConditionId = new Guid("846db3d8-7f38-40dc-af92-6a948b4619c1")
                        },
                        new
                        {
                            Id = new Guid("152be6ac-c3e3-47bc-96a5-ab38b5f03d98"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("2f64cbb2-29e0-48f6-a6cc-017955cbc899"),
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("4ff236b8-188a-441b-9ce4-49e50c80daaf"),
                            Name = "no",
                            SuperConditionId = new Guid("2f64cbb2-29e0-48f6-a6cc-017955cbc899")
                        },
                        new
                        {
                            Id = new Guid("beaed7e8-2629-4bd3-bd09-911b2a7277b3"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("2f64cbb2-29e0-48f6-a6cc-017955cbc899")
                        },
                        new
                        {
                            Id = new Guid("e1e1cb09-704d-489e-a023-12f122568651"),
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("0ebfb38c-8e6a-4c2b-ad83-956974050a59"),
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("bf27ae06-a094-4ea8-8f02-8e8297e4dbdb"),
                            Name = "only",
                            SuperConditionId = new Guid("0ebfb38c-8e6a-4c2b-ad83-956974050a59")
                        },
                        new
                        {
                            Id = new Guid("5e50dc06-63b4-4f9a-bd72-5828f7162ab9"),
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("3bb0ee0a-4332-4341-be51-23de7bda7ce1"),
                            Name = "only",
                            SuperConditionId = new Guid("5e50dc06-63b4-4f9a-bd72-5828f7162ab9")
                        },
                        new
                        {
                            Id = new Guid("7ae24d35-483a-48e1-90fb-7f0500796193"),
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("41b46be9-8ba8-4c85-a1bc-2f9b86bdf558"),
                            Name = "only",
                            SuperConditionId = new Guid("7ae24d35-483a-48e1-90fb-7f0500796193")
                        },
                        new
                        {
                            Id = new Guid("dbe156b4-d48b-401e-985e-bac5dd72d25b"),
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("98148190-587b-420c-94d9-aebbf6fb701e"),
                            Name = "only",
                            SuperConditionId = new Guid("dbe156b4-d48b-401e-985e-bac5dd72d25b")
                        },
                        new
                        {
                            Id = new Guid("33ad948d-9e53-45ad-a305-c047a524a0f3"),
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("5ea177ba-e124-48eb-af63-e32fab652a74"),
                            Name = "only",
                            SuperConditionId = new Guid("33ad948d-9e53-45ad-a305-c047a524a0f3")
                        },
                        new
                        {
                            Id = new Guid("e78cb01d-058f-4084-878b-0ae5eac0e24d"),
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("aa21c0d7-986f-4d72-9726-dc213d2e50a5"),
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("b5f61415-0b99-4588-b134-5178afa94ca5"),
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("ce956180-59ed-422d-b742-adc5ab930ee3"),
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
