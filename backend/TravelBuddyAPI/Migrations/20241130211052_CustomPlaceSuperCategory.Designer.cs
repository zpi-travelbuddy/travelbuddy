// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241130211052_CustomPlaceSuperCategory")]
    partial class CustomPlaceSuperCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);

                    b.HasData(
                        new
                        {
                            PlaceCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c"),
                            ProviderPlaceId = new Guid("3067a13c-3fc6-4f54-b8f9-fdf3708fe862")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("6cbe51c8-b6ec-4cb9-bab5-c0c2ace614cc"),
                            ProviderPlaceId = new Guid("3067a13c-3fc6-4f54-b8f9-fdf3708fe862")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2"),
                            ProviderPlaceId = new Guid("3067a13c-3fc6-4f54-b8f9-fdf3708fe862")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("43bf63d3-df23-4571-8ce3-35de53333f36"),
                            ProviderPlaceId = new Guid("3067a13c-3fc6-4f54-b8f9-fdf3708fe862")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c"),
                            ProviderPlaceId = new Guid("fc5de17c-301d-4979-877f-3df10a1fe85d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19"),
                            ProviderPlaceId = new Guid("fc5de17c-301d-4979-877f-3df10a1fe85d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2"),
                            ProviderPlaceId = new Guid("fc5de17c-301d-4979-877f-3df10a1fe85d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c"),
                            ProviderPlaceId = new Guid("63e7e4d0-0df6-4a9a-90ed-b189ef17ad4c")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19"),
                            ProviderPlaceId = new Guid("63e7e4d0-0df6-4a9a-90ed-b189ef17ad4c")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2"),
                            ProviderPlaceId = new Guid("63e7e4d0-0df6-4a9a-90ed-b189ef17ad4c")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c"),
                            ProviderPlaceId = new Guid("58c722d1-e949-46da-b96d-53ad1471a267")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19"),
                            ProviderPlaceId = new Guid("58c722d1-e949-46da-b96d-53ad1471a267")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2"),
                            ProviderPlaceId = new Guid("58c722d1-e949-46da-b96d-53ad1471a267")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c"),
                            ProviderPlaceId = new Guid("9d5afa3b-a53a-4f75-a7c2-edad974300f5")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19"),
                            ProviderPlaceId = new Guid("9d5afa3b-a53a-4f75-a7c2-edad974300f5")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2"),
                            ProviderPlaceId = new Guid("9d5afa3b-a53a-4f75-a7c2-edad974300f5")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60"),
                            ProviderPlaceId = new Guid("98d6d51c-b267-4f7d-a17b-1207b9fa8be1")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee"),
                            ProviderPlaceId = new Guid("98d6d51c-b267-4f7d-a17b-1207b9fa8be1")
                        });
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("55f5ff99-63e7-4fcc-8528-af8ad7ba1590"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("22c3085d-b5be-4db9-8785-f1ab15e928fd"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("faa84185-2488-4912-a291-1bebc8e90afd"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("22c3085d-b5be-4db9-8785-f1ab15e928fd")
                        },
                        new
                        {
                            Id = new Guid("14fcbd7a-b19d-44ac-a672-ec2d1130c227"),
                            Name = "art",
                            SuperCategoryId = new Guid("22c3085d-b5be-4db9-8785-f1ab15e928fd")
                        },
                        new
                        {
                            Id = new Guid("ef95161f-c9b7-4ea5-a08b-b01459be9036"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("b75212a6-a059-4553-8403-a89e34daa4a6"),
                            Name = "culture",
                            SuperCategoryId = new Guid("ef95161f-c9b7-4ea5-a08b-b01459be9036")
                        },
                        new
                        {
                            Id = new Guid("f407e425-2be8-4f56-9564-1eb63ac79b00"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("b75212a6-a059-4553-8403-a89e34daa4a6")
                        },
                        new
                        {
                            Id = new Guid("1ef54f42-2317-4362-b65b-cdabc62086be"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("b75212a6-a059-4553-8403-a89e34daa4a6")
                        },
                        new
                        {
                            Id = new Guid("2e717989-d7a2-4726-852b-37ba01195fcb"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("b75212a6-a059-4553-8403-a89e34daa4a6")
                        },
                        new
                        {
                            Id = new Guid("67e09c91-0d1a-42c9-afa2-20aa4328f754"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("ef95161f-c9b7-4ea5-a08b-b01459be9036")
                        },
                        new
                        {
                            Id = new Guid("f8bd61fd-497f-41f7-9ca3-70147aa1e688"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("ef95161f-c9b7-4ea5-a08b-b01459be9036")
                        },
                        new
                        {
                            Id = new Guid("d8c9cdf7-c0bb-4b7f-9b23-1772f38b3761"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("ef95161f-c9b7-4ea5-a08b-b01459be9036")
                        },
                        new
                        {
                            Id = new Guid("18692bae-11d3-4265-a23f-73ce189d49c3"),
                            Name = "museum",
                            SuperCategoryId = new Guid("ef95161f-c9b7-4ea5-a08b-b01459be9036")
                        },
                        new
                        {
                            Id = new Guid("00b6228d-e67d-440b-848f-5dc3170e583d"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("91588fa3-1311-4be1-a89c-8ab4e85e70e8"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("00b6228d-e67d-440b-848f-5dc3170e583d")
                        },
                        new
                        {
                            Id = new Guid("f0d9c445-701d-42ae-836b-58da2240a9ed"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("164d2f2d-7ccd-4907-b81b-8b53604fdf9a"),
                            Name = "park",
                            SuperCategoryId = new Guid("f0d9c445-701d-42ae-836b-58da2240a9ed")
                        },
                        new
                        {
                            Id = new Guid("15fdc42c-ddaf-406b-84bb-54f674f9e60d"),
                            Name = "garden",
                            SuperCategoryId = new Guid("164d2f2d-7ccd-4907-b81b-8b53604fdf9a")
                        },
                        new
                        {
                            Id = new Guid("8edcef82-ee28-43f2-854d-c73659750802"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("164d2f2d-7ccd-4907-b81b-8b53604fdf9a")
                        },
                        new
                        {
                            Id = new Guid("291fcc5a-3153-48aa-9e01-abda5f73bd0a"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("cf92afc5-6290-4569-aaaa-040f7113ea4c"),
                            Name = "forest",
                            SuperCategoryId = new Guid("291fcc5a-3153-48aa-9e01-abda5f73bd0a")
                        },
                        new
                        {
                            Id = new Guid("6ab97aef-9312-405d-a9af-b0d097bdf601"),
                            Name = "water",
                            SuperCategoryId = new Guid("291fcc5a-3153-48aa-9e01-abda5f73bd0a")
                        },
                        new
                        {
                            Id = new Guid("0131122d-e874-4df9-9f72-af8fb472283e"),
                            Name = "spring",
                            SuperCategoryId = new Guid("6ab97aef-9312-405d-a9af-b0d097bdf601")
                        },
                        new
                        {
                            Id = new Guid("39129d2f-07ae-419c-8974-b7c2a42a7ab0"),
                            Name = "reef",
                            SuperCategoryId = new Guid("6ab97aef-9312-405d-a9af-b0d097bdf601")
                        },
                        new
                        {
                            Id = new Guid("f0748fbc-0bc2-41c4-acdf-2c292b325745"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("6ab97aef-9312-405d-a9af-b0d097bdf601")
                        },
                        new
                        {
                            Id = new Guid("539c2992-3d6a-4a08-9478-63fbe1ba8a69"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("6ab97aef-9312-405d-a9af-b0d097bdf601")
                        },
                        new
                        {
                            Id = new Guid("fe345ac9-059f-43fc-afac-29b90910f5c8"),
                            Name = "sea",
                            SuperCategoryId = new Guid("6ab97aef-9312-405d-a9af-b0d097bdf601")
                        },
                        new
                        {
                            Id = new Guid("13c6d752-c68d-4282-ae8c-b319765628cf"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("291fcc5a-3153-48aa-9e01-abda5f73bd0a")
                        },
                        new
                        {
                            Id = new Guid("5988c0ca-defe-47d9-8433-f132ee59d790"),
                            Name = "peak",
                            SuperCategoryId = new Guid("13c6d752-c68d-4282-ae8c-b319765628cf")
                        },
                        new
                        {
                            Id = new Guid("37426ebe-4f3f-4d02-940e-8a88500453f7"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("13c6d752-c68d-4282-ae8c-b319765628cf")
                        },
                        new
                        {
                            Id = new Guid("6854b66c-62fb-44a6-b68e-1190a38ebcc9"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("13c6d752-c68d-4282-ae8c-b319765628cf")
                        },
                        new
                        {
                            Id = new Guid("d686bf0b-b93d-4c08-b1ed-a9a4cb391633"),
                            Name = "rock",
                            SuperCategoryId = new Guid("13c6d752-c68d-4282-ae8c-b319765628cf")
                        },
                        new
                        {
                            Id = new Guid("0631cc0b-27bd-47a7-aeab-6de40601fa7d"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("13c6d752-c68d-4282-ae8c-b319765628cf")
                        },
                        new
                        {
                            Id = new Guid("b8838c2a-d183-4243-957b-da6ef2ff8b36"),
                            Name = "sand",
                            SuperCategoryId = new Guid("291fcc5a-3153-48aa-9e01-abda5f73bd0a")
                        },
                        new
                        {
                            Id = new Guid("b6b9644a-68be-477a-ab57-cd5d1a7f9b4b"),
                            Name = "dune",
                            SuperCategoryId = new Guid("b8838c2a-d183-4243-957b-da6ef2ff8b36")
                        },
                        new
                        {
                            Id = new Guid("26c97874-03ed-4844-9f67-75ec60c79ebb"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("6cbe51c8-b6ec-4cb9-bab5-c0c2ace614cc"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2")
                        },
                        new
                        {
                            Id = new Guid("25452696-50e4-4659-8ca7-afbc0c4819ae"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("6cbe51c8-b6ec-4cb9-bab5-c0c2ace614cc")
                        },
                        new
                        {
                            Id = new Guid("2a4bd5e8-e02f-4d69-bab3-735706cdbb0d"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("6cbe51c8-b6ec-4cb9-bab5-c0c2ace614cc")
                        },
                        new
                        {
                            Id = new Guid("191343d4-32be-47e1-8525-2c35d602a42c"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("6cbe51c8-b6ec-4cb9-bab5-c0c2ace614cc")
                        },
                        new
                        {
                            Id = new Guid("6b988a93-d7d6-47aa-87ee-1dd3c4b8dfb3"),
                            Name = "clock",
                            SuperCategoryId = new Guid("6cbe51c8-b6ec-4cb9-bab5-c0c2ace614cc")
                        },
                        new
                        {
                            Id = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c"),
                            Name = "sights",
                            SuperCategoryId = new Guid("1545d2bc-c070-4c87-9b46-a2976cf027c2")
                        },
                        new
                        {
                            Id = new Guid("c87650af-8992-4709-adff-b110f157f5f9"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("d959f4a0-4242-43f8-ab7c-e7cc4da087d4"),
                            Name = "church",
                            SuperCategoryId = new Guid("c87650af-8992-4709-adff-b110f157f5f9")
                        },
                        new
                        {
                            Id = new Guid("8ddf1b53-3f15-4f99-9a14-c47407923e4e"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("c87650af-8992-4709-adff-b110f157f5f9")
                        },
                        new
                        {
                            Id = new Guid("bc629495-680b-4450-abb5-03d78811deb1"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("c87650af-8992-4709-adff-b110f157f5f9")
                        },
                        new
                        {
                            Id = new Guid("5c6564cf-0b80-45c9-b796-42e38c193cdd"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("c87650af-8992-4709-adff-b110f157f5f9")
                        },
                        new
                        {
                            Id = new Guid("10669821-1181-480b-b627-a3453114791f"),
                            Name = "temple",
                            SuperCategoryId = new Guid("c87650af-8992-4709-adff-b110f157f5f9")
                        },
                        new
                        {
                            Id = new Guid("444a5912-9820-4b67-a578-038de7a8bcaa"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("c87650af-8992-4709-adff-b110f157f5f9")
                        },
                        new
                        {
                            Id = new Guid("eceda60a-e4e3-4220-b3ce-9a44ce7667fb"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("c87650af-8992-4709-adff-b110f157f5f9")
                        },
                        new
                        {
                            Id = new Guid("8e533cdb-02ca-47e5-a4c4-9323b6e98b18"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("dfa87bf7-2200-453d-9932-c41dd0bc5c28"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("3fdf1331-2b52-46b7-b3d2-611c1b1ed9dc"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("a4ac6643-9021-4321-a308-f283695233df"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("a7079493-c5c3-4ddb-be08-e7f188a7e91f"),
                            Name = "tower",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("8a72f4ae-fbfa-4612-a7ae-87f67381c654"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("2133ad9b-58e3-4efd-8a8f-5481d5ed03f0"),
                            Name = "fort",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("9ddc8f93-ec7f-4101-a496-e65f26a5060e"),
                            Name = "castle",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("43bf63d3-df23-4571-8ce3-35de53333f36"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("b52a28af-bb3a-47b7-a325-d2be186ad544"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("43450095-6bc2-4de0-bf13-2a2cd744dc18"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("34553340-3b25-4fd8-bdbb-114d8f822df6"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("4fec6ef1-7dd2-4df7-ae88-c5cefd803f6c")
                        },
                        new
                        {
                            Id = new Guid("e94b2ad4-5f91-440c-9788-2d3ee6c17f39"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("5a2ebebd-06ec-4174-93c6-d753558eac39"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("a0897c84-1bce-4f0c-a43c-d646179d5831"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("eb4255cf-5ead-4eb5-b4e7-4995bbfedb79"),
                            Name = "ship",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("147fac0e-8859-40bb-babe-dde21f4d03f9"),
                            Name = "tank",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("e6c01e49-fdea-4408-88cd-324cfb70f356"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("0bf1ad5b-b853-4eda-beb4-a07a12435eb7"),
                            Name = "monument",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("3fa784db-0273-4fad-b275-df81fdeb74d6"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("5fe4a937-73cc-4e9f-996a-04a22a0c0ad8"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("a377d24d-1c2a-4f9a-a6d0-7264baea1cb0"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("fa165082-5df1-4a5c-9cfd-7c712bda4d7c"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("b9e8d7b0-5228-4d7e-9b40-917463625c19")
                        },
                        new
                        {
                            Id = new Guid("b41ee60a-507c-4354-9e88-8b50470a05bb"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("b41ee60a-507c-4354-9e88-8b50470a05bb")
                        },
                        new
                        {
                            Id = new Guid("fa0e873b-26d3-4d80-beec-51d9818e40a8"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("d22e801f-fe44-425e-a43b-e2cadeec1e85"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("42b3196e-adb2-4ec5-ba4d-23829bb1dd87"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("75c488b3-2c29-42b3-a460-4f33e71d0f15"),
                            Name = "islam",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("6734ad56-ac96-49f8-a090-ae7a1c8469d4"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("a298ebbd-e85a-42cb-b7b8-527a73b3a8e4"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("187fa5c6-5cac-462e-bf6c-2176495f2871"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("0dd45102-0316-4fce-aa15-20aa4206da77"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("54a19e56-8ba5-4fa8-81be-41b952a6ff32")
                        },
                        new
                        {
                            Id = new Guid("fe66bc9d-d8f6-4574-ae7c-2ba362ecbaf6"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("28018c6f-9d72-4047-81bc-3c09e64db6e2"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("fe66bc9d-d8f6-4574-ae7c-2ba362ecbaf6")
                        },
                        new
                        {
                            Id = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("3438d907-8f3f-48a4-b319-3d415d8a200e"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("6461ccde-fd2c-46f5-9d53-1f95cb2db490"),
                            Name = "burger",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("46bb7125-e5ca-4980-9da5-df7245e207f7"),
                            Name = "regional",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("393daf5e-b6c0-4739-bc31-306ecc254042"),
                            Name = "italian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("c35a34d7-fdb5-4a29-9db2-513d714e6f57"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("19f31f48-e0d9-49c7-bd31-8c661016f423"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("2c1be0f3-2e87-4588-a9bf-221cfc9e6011"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("c858d628-2d96-4e52-8bc5-552949a32487"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("f941eabf-a023-485e-9733-36c4dd4e27ce"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("514a5546-1e42-4a6f-a491-a87c6cd41843"),
                            Name = "american",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("ef3ca710-cded-4678-8b34-01a9787dc78e"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("83041add-8fd1-4158-bf11-f37df3cca394"),
                            Name = "indian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("da2bf7dc-7d81-4419-bb08-811502efcfc6"),
                            Name = "asian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("c3ea27ca-0222-4837-8eb5-972d5c11d515"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("9916e690-1cad-4afa-8cd3-a610f63e4033"),
                            Name = "french",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("e61975ad-4773-499c-b9a5-76101538160c"),
                            Name = "german",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("cd91d1cd-f677-4bae-89c0-fbeebe474497"),
                            Name = "thai",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("b3de7d04-9587-4995-b8bd-182a968d7625"),
                            Name = "greek",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("8313fd49-57eb-407f-9ac0-a9459e4384f1"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("5dfb0922-2455-482b-b217-fd262a079c3e"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("98f66dd8-4ff1-4d72-987d-1500ff66829b"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("30ee26b3-1088-4deb-83de-295b78ba29ed"),
                            Name = "international",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("17d839a7-75ed-48ae-82a9-55c6fa03fb6e"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("085ef255-93de-4482-bbe4-72147703110f"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3f45d199-0d2d-4467-881f-4ad4bb2c08c0"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7ac763c7-e853-4122-a643-f5377cb4987c"),
                            Name = "korean",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7ec4c708-ca51-4609-88c3-81257c063b1a"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("1aca4cec-edfb-4bd5-9333-9aa2609d059c"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("183dc2db-019e-4756-94f8-63f0184f6316"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("6b886de8-8de4-44f1-8186-20601b2b59b0"),
                            Name = "fish",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("535189c3-26b2-4290-90ab-b935d2c84290"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("71e4aa08-3734-4b14-9865-b7a12d2005ad"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3e638393-c7db-4d9c-a054-46cebbe91815"),
                            Name = "friture",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("de4b2c55-a133-4cc4-9b14-ee7119b1d6bb"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("1249a529-7aa4-464e-bd6c-a19b6a057481"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7ad8f8d7-c5ea-4e03-be9a-e129f3c896e8"),
                            Name = "wings",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3334992c-a9ff-4170-ad64-38d26880974d"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("bda4b672-6f4d-4a17-b30e-a145e054a3c8"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3dd87d67-55d4-42ab-9048-30a3d255d221"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("106b19c8-2da4-4bc6-812c-705d8d0eac55"),
                            Name = "arab",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("4c087b0e-75a3-40dd-bd7f-e58fb7216257"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("83360ad5-b8b0-4d0b-b676-0d40e2904ef5"),
                            Name = "russian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("cfa8ae18-b998-4c7c-9c1f-81cb4fc794d7"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3366fb59-5df4-4530-a8fc-8190da2673b0"),
                            Name = "african",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("ca84f8de-36e8-4335-b03e-eb98a52396f2"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("f0b1e3f2-25b2-451d-8124-2def540ea8a0"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("23a5aa9f-8d6b-48a9-bae7-4677b6dcac6f"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("208f762b-32d7-4287-aed9-f18ecda5cf67"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("a2546407-3f21-499c-924a-94c3d1344150"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7b8f3ca4-d179-459b-8204-8fd8a0e3b1e3"),
                            Name = "curry",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("00e193d2-14c9-407e-b575-2134ad99efe7"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("4fc8ab65-5138-4f8f-9bba-291ee9a6f550"),
                            Name = "persian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("eee9c0b4-0552-4644-8501-9ce7d2f272ac"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7117fdac-5f40-44c7-84da-4d06e9c13eff"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("0b783048-a5f5-4db3-b28c-9db8fd6e6444"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("a249ffc6-1545-415f-a1ec-34b57d715e1e"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("133190f4-8ea9-4489-b548-4e3dc8f93464"),
                            Name = "pita",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7b5fcba5-cde6-4555-ad78-e4e2ef3cdc64"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("2763ef8b-78ec-46c0-a59d-52bfc18aa0f7"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3933aa5b-3854-47c8-a9e5-88c4bc4dd4b9"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("80d4349c-e81c-4919-a19c-7bb856414518"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("e4ce66e1-ad65-4791-9d23-d2c20b8086fc"),
                            Name = "irish",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("00d9bdf6-b7b9-4a8a-8a08-6d81ae85af53"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7af8a4c0-af3d-499a-bdef-fffa1a1c7576"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7830decf-3752-45aa-b042-c994136a2f84"),
                            Name = "danish",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("c0de38c5-1ee9-4d78-89cf-026540474c20"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("6293ccb0-1af5-4e30-b60c-45eb360ed9f9"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3176ebbf-4cf9-4aea-b672-560d59c8482a"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("341ad91f-0ec9-4897-b19b-8985b41fe96f"),
                            Name = "western",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("d7e21842-a7a7-4e16-b0cf-04090476807e"),
                            Name = "european",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("3ab339fc-e605-4632-9841-d0dd7e551b5c"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("9e9dc8b7-0d52-465d-920f-33f80f04106a"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("1db41cf7-4402-4d78-a4aa-b95aafece9a4"),
                            Name = "soup",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("5e0cb6e3-84ad-46ba-ac59-b67bd08b0308"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("28f1f349-e2fc-4095-8e7e-50a6fa522dc7"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("55f0a6b0-a135-48a3-8412-25c94ed9a14a"),
                            Name = "czech",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("d757309f-1fc6-4bef-9683-a13f030708f0"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("8ff5aa09-f0e9-42e8-9572-2bb313c513a3"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("17785aba-f0e6-4a96-932f-e972674ebacd"),
                            Name = "malay",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("7bd633c4-51b9-49bc-828e-311f3eb9bf8e"),
                            Name = "chili",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("297fbc19-8cd2-4544-8b30-1e0377111180"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("9b995067-cdae-4e90-ba9d-c830def7887d"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("84aa321a-5235-440b-97fe-77f848a9c9c6"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("ddc2de75-6ff6-4666-8fbf-8d4aca61d233"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("fe78a698-6029-4df8-a545-9c1c03a0bd60")
                        },
                        new
                        {
                            Id = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("a49dc8f7-514b-4dbd-a615-ad4690c7b452"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("5e0403dc-e674-4889-b1df-42c9e00a9d6e"),
                            Name = "burger",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("4891ae67-46d6-426c-8e2f-14eb6af84bb3"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("f98b4f22-6b4f-449a-8fdb-73da0eaebb72"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("83bbc5f3-397e-45d8-99ac-10bb11f26fb5"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("94ea4a66-5007-4f7d-b2b8-b173fd4f8bc2"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("64328d8d-8024-4724-bc13-257acf2cd000"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("dabae47e-d940-474d-ab0e-658ec0102a2a"),
                            Name = "wings",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("37592fa1-615f-4704-b83d-cfda2770b86b"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("4cb758f1-3042-4925-95fd-c8637d664279"),
                            Name = "pita",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("b0a69a36-dbc9-40bf-8607-f107f8166b23"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("32de783e-fbe2-4e84-a037-390a2915e9c3"),
                            Name = "soup",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("aa627818-2cd6-49bf-aeeb-256d70278b1c"),
                            Name = "salad",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("4413face-c6ae-404b-940b-fccb8a1b6915"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("eccb7e0d-d11c-4c25-83cc-1019a6604906")
                        },
                        new
                        {
                            Id = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("8c002a3e-4646-4640-9eac-f6efa2448d06"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("3565da33-b56c-4264-843b-568e6436b4d8"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("8fddb782-2e5e-4cc3-a2e0-4d1259962f08"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("432918c6-9d56-44de-98fb-b330444b9c74"),
                            Name = "donut",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("3d7daae2-88c1-43da-9353-af0ad6321efd"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("ea4cf50f-79e7-4f64-a2cb-f289396fdd23"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("09642cdb-932d-4d9c-b047-b33eb287175b"),
                            Name = "cake",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("bc87ad51-9ff1-46ff-b128-4e710fd237e6"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("7c721bbf-202a-4b6a-8ba0-c2738cef8d66"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("cec38027-25b5-4544-a8fe-705443f8626c"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("7990c59b-4c66-40dc-b38d-615216c40110"),
                            Name = "tea",
                            SuperCategoryId = new Guid("e56e3a6b-dddf-4735-af6b-d277909faadf")
                        },
                        new
                        {
                            Id = new Guid("0fc6790e-8d0d-42b9-a7e2-ea6e3f831d6a"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("e17b4a65-a917-4b62-8097-390f4a34b27f"),
                            Name = "bar",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("f8c167b7-c600-48bd-a43f-975fda164f0a"),
                            Name = "pub",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("c1fc2dd6-f667-4100-b749-9d625ac0cc7c"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("8ea5b5e0-a5d7-4a22-9f76-ab544800c5ce"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        },
                        new
                        {
                            Id = new Guid("a5cadef9-e1b4-4b1b-9499-edaf12f73c36"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("9f430c3d-36b0-4cbe-8bd5-75b719498fee")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("46a9c2db-f085-4761-a97f-6f4c7e0d0eea"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("a31d30e9-b017-4042-852c-a4274ca8a3a0"),
                            Name = "free",
                            SuperConditionId = new Guid("46a9c2db-f085-4761-a97f-6f4c7e0d0eea")
                        },
                        new
                        {
                            Id = new Guid("9527ea95-ffa4-4c40-a527-62f873ecc2ba"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("46a9c2db-f085-4761-a97f-6f4c7e0d0eea")
                        },
                        new
                        {
                            Id = new Guid("56119b40-7708-40cc-a06b-477b005d66b5"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("412d7b20-4216-4973-b1f1-2b61bd6c77cc"),
                            Name = "yes",
                            SuperConditionId = new Guid("56119b40-7708-40cc-a06b-477b005d66b5")
                        },
                        new
                        {
                            Id = new Guid("46ffa52a-8451-4da3-8028-9c2dc037d093"),
                            Name = "limited",
                            SuperConditionId = new Guid("56119b40-7708-40cc-a06b-477b005d66b5")
                        },
                        new
                        {
                            Id = new Guid("deae5af1-d8e7-47c8-90fb-9037abfe3f89"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("ef8af46b-dd21-4324-a48e-3654abe431a0"),
                            Name = "yes",
                            SuperConditionId = new Guid("deae5af1-d8e7-47c8-90fb-9037abfe3f89")
                        },
                        new
                        {
                            Id = new Guid("46c1eee6-7dac-48f0-91d1-94964b8cd509"),
                            Name = "leashed",
                            SuperConditionId = new Guid("deae5af1-d8e7-47c8-90fb-9037abfe3f89")
                        },
                        new
                        {
                            Id = new Guid("8d714d69-5dbd-4114-8bb1-6f75d27cb25e"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("ffff8b7b-4c57-4805-a95f-c5c057b7bdc9"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("7b302472-f9a9-4d2c-aac6-0d39fb56bb19"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("ffff8b7b-4c57-4805-a95f-c5c057b7bdc9")
                        },
                        new
                        {
                            Id = new Guid("48064116-c8c0-4920-90cf-f0c7598e7368"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("ffff8b7b-4c57-4805-a95f-c5c057b7bdc9")
                        },
                        new
                        {
                            Id = new Guid("e956e6bd-e674-4255-9195-6f848c43c5b3"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("e74ce553-36c8-4a6d-82ab-b5dc254608e0"),
                            Name = "customers",
                            SuperConditionId = new Guid("e956e6bd-e674-4255-9195-6f848c43c5b3")
                        },
                        new
                        {
                            Id = new Guid("ef829a87-549d-44c7-b795-37b61d68762d"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("e08c68aa-27e0-4e94-b308-373fb30bedf8"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("8e08d9bd-0372-468c-8020-15731b7cd475"),
                            Name = "no",
                            SuperConditionId = new Guid("e08c68aa-27e0-4e94-b308-373fb30bedf8")
                        },
                        new
                        {
                            Id = new Guid("3a0a1078-ed2b-4dde-9d04-94edb69e59e5"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("e08c68aa-27e0-4e94-b308-373fb30bedf8")
                        },
                        new
                        {
                            Id = new Guid("aedca339-7b16-421d-b78e-36c04b808518"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("55ec329c-b1f2-4191-a726-ef905f28754f"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("199c807e-d118-4647-a34a-3adbe13cc3d0"),
                            Name = "only",
                            SuperConditionId = new Guid("55ec329c-b1f2-4191-a726-ef905f28754f")
                        },
                        new
                        {
                            Id = new Guid("fdc15b6d-11c9-431e-b201-023451b34750"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("907f6738-1152-4372-aac2-520351afd07e"),
                            Name = "only",
                            SuperConditionId = new Guid("fdc15b6d-11c9-431e-b201-023451b34750")
                        },
                        new
                        {
                            Id = new Guid("31716622-5c3b-44a4-9278-962a01a8de8b"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("65748b72-1473-4eef-b578-74364ac007dc"),
                            Name = "only",
                            SuperConditionId = new Guid("31716622-5c3b-44a4-9278-962a01a8de8b")
                        },
                        new
                        {
                            Id = new Guid("ab592b49-ce76-4a9e-8263-e8e2f93f09c6"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("eb8d40ec-8cca-46fe-8481-bcaed307e420"),
                            Name = "only",
                            SuperConditionId = new Guid("ab592b49-ce76-4a9e-8263-e8e2f93f09c6")
                        },
                        new
                        {
                            Id = new Guid("be2dc24c-960f-4b01-977e-37f80bba6908"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("3a18b709-78a0-4c95-9a2f-248be7eef6b9"),
                            Name = "only",
                            SuperConditionId = new Guid("be2dc24c-960f-4b01-977e-37f80bba6908")
                        },
                        new
                        {
                            Id = new Guid("f67648c8-ae88-46bf-abfe-3ee534bd5611"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("0de25ef6-f22d-4b65-a972-840ee1a28f74"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("dc14c310-400f-46da-9d7d-df9552e7daaf"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("97d98de1-90d3-474e-90ba-22dd9f6401c4"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0efbe14d-3f2f-44db-9b48-69048988f1c6"),
                            FromTripPointId = new Guid("593c297f-002e-4942-be3a-c2f9c415b67f"),
                            Mode = 0,
                            ToTripPointId = new Guid("971c9677-9c6b-4b72-b924-ffdd1f872571"),
                            TransferTime = new TimeSpan(0, 0, 4, 21, 0),
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("6c5a1d87-17b9-4384-ac91-74d607cd80b2"),
                            FromTripPointId = new Guid("971c9677-9c6b-4b72-b924-ffdd1f872571"),
                            Mode = 1,
                            ToTripPointId = new Guid("03367549-27e6-48b3-b69d-d5f81ca70617"),
                            TransferTime = new TimeSpan(0, 0, 0, 55, 0),
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("714604d1-f059-41ad-a31b-ec809da4e63d"),
                            FromTripPointId = new Guid("03367549-27e6-48b3-b69d-d5f81ca70617"),
                            ToTripPointId = new Guid("897fea91-b4af-4b9a-af2a-0b22f376c00d"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("a5ebe2e6-71b3-446c-9359-b3939e153223"),
                            FromTripPointId = new Guid("3e76039d-5779-4998-859d-f8395ab987fd"),
                            Mode = 2,
                            ToTripPointId = new Guid("428fae3d-0b4f-4f72-85f2-fa84b6bd279c"),
                            TransferTime = new TimeSpan(0, 0, 3, 13, 0),
                            TripDayId = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef")
                        },
                        new
                        {
                            Id = new Guid("0f2eeb1b-9968-417d-8174-0e3a305efb9a"),
                            FromTripPointId = new Guid("428fae3d-0b4f-4f72-85f2-fa84b6bd279c"),
                            Mode = 3,
                            ToTripPointId = new Guid("2a1b7c8c-b5cf-4b77-b19e-a9bf59be9ba4"),
                            TransferTime = new TimeSpan(0, 0, 8, 18, 0),
                            TripDayId = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef")
                        },
                        new
                        {
                            Id = new Guid("7da94f86-6900-4a66-b5bc-17c07d475698"),
                            FromTripPointId = new Guid("2a1b7c8c-b5cf-4b77-b19e-a9bf59be9ba4"),
                            Mode = 3,
                            ToTripPointId = new Guid("61e07c30-5814-4dfe-abc5-40fa78fc6f75"),
                            TransferTime = new TimeSpan(0, 0, 13, 30, 0),
                            TripDayId = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef")
                        },
                        new
                        {
                            Id = new Guid("90810e3c-8530-49c5-ae77-0897f1c4e589"),
                            FromTripPointId = new Guid("f00f6c09-c0ff-43e8-99a5-850feeb40255"),
                            Mode = 0,
                            ToTripPointId = new Guid("ecc4ffe6-924c-4cea-ac02-1a12dcc95689"),
                            TransferTime = new TimeSpan(0, 0, 4, 21, 0),
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("5a789fc8-67e8-4912-bf43-cbd1dc840c8c"),
                            FromTripPointId = new Guid("ecc4ffe6-924c-4cea-ac02-1a12dcc95689"),
                            Mode = 1,
                            ToTripPointId = new Guid("7dc2bf83-8545-4f81-b618-9d91a9d33350"),
                            TransferTime = new TimeSpan(0, 0, 0, 55, 0),
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("65850a86-f448-481d-aaf9-15d7e6510df3"),
                            FromTripPointId = new Guid("7dc2bf83-8545-4f81-b618-9d91a9d33350"),
                            ToTripPointId = new Guid("9b8dc0c3-2ac1-47f9-b493-f709cef20fd9"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("6d8defed-fc99-442e-8e72-f16e128ea916"),
                            FromTripPointId = new Guid("c1d3bc85-1b60-454d-a93f-d3b257059d45"),
                            Mode = 2,
                            ToTripPointId = new Guid("23db1f83-c4b5-4b73-bc68-85f3f0cbc91a"),
                            TransferTime = new TimeSpan(0, 0, 3, 13, 0),
                            TripDayId = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34")
                        },
                        new
                        {
                            Id = new Guid("6ad5d965-d31b-4873-8ea2-52f3e5c0f481"),
                            FromTripPointId = new Guid("23db1f83-c4b5-4b73-bc68-85f3f0cbc91a"),
                            Mode = 3,
                            ToTripPointId = new Guid("1d75b012-508c-47fa-aa2f-c35c248a61ae"),
                            TransferTime = new TimeSpan(0, 0, 8, 18, 0),
                            TripDayId = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34")
                        },
                        new
                        {
                            Id = new Guid("bc67147f-b878-44bb-b3cc-c781ef0cf442"),
                            FromTripPointId = new Guid("1d75b012-508c-47fa-aa2f-c35c248a61ae"),
                            Mode = 3,
                            ToTripPointId = new Guid("59a9002c-0bce-4a16-8124-4d7385094c14"),
                            TransferTime = new TimeSpan(0, 0, 13, 30, 0),
                            TripDayId = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("426e0553-799c-43fe-a668-7600ebb7c9d0"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("68fc918d-615e-411b-8f59-4b2533b1c53b"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        },
                        new
                        {
                            Id = new Guid("25a4cf25-731b-4f94-af4c-d448ab989db1"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("68fc918d-615e-411b-8f59-4b2533b1c53b"),
                            EndDate = new DateOnly(2024, 11, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 11, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("426e0553-799c-43fe-a668-7600ebb7c9d0")
                        },
                        new
                        {
                            Id = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("426e0553-799c-43fe-a668-7600ebb7c9d0")
                        },
                        new
                        {
                            Id = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573"),
                            Date = new DateOnly(2024, 11, 20),
                            TripId = new Guid("25a4cf25-731b-4f94-af4c-d448ab989db1")
                        },
                        new
                        {
                            Id = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34"),
                            Date = new DateOnly(2024, 11, 21),
                            TripId = new Guid("25a4cf25-731b-4f94-af4c-d448ab989db1")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5b812b87-946c-4e1a-8335-32f1609dcce3"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("3067a13c-3fc6-4f54-b8f9-fdf3708fe862"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("593c297f-002e-4942-be3a-c2f9c415b67f"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("fc5de17c-301d-4979-877f-3df10a1fe85d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("971c9677-9c6b-4b72-b924-ffdd1f872571"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("63e7e4d0-0df6-4a9a-90ed-b189ef17ad4c"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("03367549-27e6-48b3-b69d-d5f81ca70617"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("f2d5d61f-c8bc-483c-9bda-2a6de1180f29"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("897fea91-b4af-4b9a-af2a-0b22f376c00d"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("50d6aad9-c787-47d0-ae6e-dc26b54ec0e0"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("6dedad7d-c0b8-425a-97b0-6ded8f31909b")
                        },
                        new
                        {
                            Id = new Guid("3e76039d-5779-4998-859d-f8395ab987fd"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("58c722d1-e949-46da-b96d-53ad1471a267"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef")
                        },
                        new
                        {
                            Id = new Guid("428fae3d-0b4f-4f72-85f2-fa84b6bd279c"),
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("9d5afa3b-a53a-4f75-a7c2-edad974300f5"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef")
                        },
                        new
                        {
                            Id = new Guid("2a1b7c8c-b5cf-4b77-b19e-a9bf59be9ba4"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("98d6d51c-b267-4f7d-a17b-1207b9fa8be1"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef")
                        },
                        new
                        {
                            Id = new Guid("61e07c30-5814-4dfe-abc5-40fa78fc6f75"),
                            EndTime = new TimeOnly(17, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Parowóz TKi3-120",
                            PlaceId = new Guid("48bed669-b6a2-46ca-9458-4eaf33133df9"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(16, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("140bcd9a-2ba3-4553-a2b3-8cdc902f93ef")
                        },
                        new
                        {
                            Id = new Guid("ccad8497-73a8-4acc-82f6-e6f92edb8d77"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("3067a13c-3fc6-4f54-b8f9-fdf3708fe862"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("f00f6c09-c0ff-43e8-99a5-850feeb40255"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("fc5de17c-301d-4979-877f-3df10a1fe85d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("ecc4ffe6-924c-4cea-ac02-1a12dcc95689"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("63e7e4d0-0df6-4a9a-90ed-b189ef17ad4c"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 1,
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("7dc2bf83-8545-4f81-b618-9d91a9d33350"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("93daf3b8-9969-4ea3-a55e-4d9a35bb67d1"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 1,
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("9b8dc0c3-2ac1-47f9-b493-f709cef20fd9"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("cc50dff7-2544-4153-9690-73cccf962283"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 4,
                            TripDayId = new Guid("4ab977ea-6dca-4a7a-a45f-0559f3e4d573")
                        },
                        new
                        {
                            Id = new Guid("c1d3bc85-1b60-454d-a93f-d3b257059d45"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("58c722d1-e949-46da-b96d-53ad1471a267"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 1,
                            TripDayId = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34")
                        },
                        new
                        {
                            Id = new Guid("23db1f83-c4b5-4b73-bc68-85f3f0cbc91a"),
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("9d5afa3b-a53a-4f75-a7c2-edad974300f5"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34")
                        },
                        new
                        {
                            Id = new Guid("1d75b012-508c-47fa-aa2f-c35c248a61ae"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("98d6d51c-b267-4f7d-a17b-1207b9fa8be1"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34")
                        },
                        new
                        {
                            Id = new Guid("59a9002c-0bce-4a16-8124-4d7385094c14"),
                            EndTime = new TimeOnly(17, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Parowóz TKi3-120",
                            PlaceId = new Guid("5f1514e5-26cd-4cef-b646-52023b748d2d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(16, 30, 0),
                            Status = 1,
                            TripDayId = new Guid("57f2e685-8c3f-4dd6-879e-6e7a25a92b34")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCostPerPerson")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid?>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique()
                        .HasFilter("[TripPointId] IS NOT NULL");

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("SuperCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f2d5d61f-c8bc-483c-9bda-2a6de1180f29"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.711806m,
                            Longitude = 17.721194m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("50d6aad9-c787-47d0-ae6e-dc26b54ec0e0"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        },
                        new
                        {
                            Id = new Guid("48bed669-b6a2-46ca-9458-4eaf33133df9"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6514858m,
                            Longitude = 17.810879178559084m,
                            Name = "Parowóz TKi3-120"
                        },
                        new
                        {
                            Id = new Guid("93daf3b8-9969-4ea3-a55e-4d9a35bb67d1"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.711806m,
                            Longitude = 17.721194m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("cc50dff7-2544-4153-9690-73cccf962283"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        },
                        new
                        {
                            Id = new Guid("5f1514e5-26cd-4cef-b646-52023b748d2d"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6514858m,
                            Longitude = 17.810879178559084m,
                            Name = "Parowóz TKi3-120"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68fc918d-615e-411b-8f59-4b2533b1c53b"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("3067a13c-3fc6-4f54-b8f9-fdf3708fe862"),
                            Name = "Kaplica loretańska",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("fc5de17c-301d-4979-877f-3df10a1fe85d"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("63e7e4d0-0df6-4a9a-90ed-b189ef17ad4c"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("58c722d1-e949-46da-b96d-53ad1471a267"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("9d5afa3b-a53a-4f75-a7c2-edad974300f5"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("98d6d51c-b267-4f7d-a17b-1207b9fa8be1"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId");

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany()
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
