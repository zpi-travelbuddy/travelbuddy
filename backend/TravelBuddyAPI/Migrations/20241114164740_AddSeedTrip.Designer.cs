// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241114164740_AddSeedTrip")]
    partial class AddSeedTrip
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7184231-695b-40ac-82fe-43511e1b179b"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("91c1dbeb-f0cf-49f1-a7d4-4fc6d0593cdf"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("8e103174-7644-4ad6-b220-c34ffaabca69"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("91c1dbeb-f0cf-49f1-a7d4-4fc6d0593cdf")
                        },
                        new
                        {
                            Id = new Guid("24a67b88-0418-4ad1-8363-77ec26dfe535"),
                            Name = "art",
                            SuperCategoryId = new Guid("91c1dbeb-f0cf-49f1-a7d4-4fc6d0593cdf")
                        },
                        new
                        {
                            Id = new Guid("63899fba-ec34-4123-88c4-579892251555"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("92dafa85-6f90-4f32-a529-b1714224122b"),
                            Name = "culture",
                            SuperCategoryId = new Guid("63899fba-ec34-4123-88c4-579892251555")
                        },
                        new
                        {
                            Id = new Guid("92c3bdde-b289-45c3-9082-793f64574e13"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("92dafa85-6f90-4f32-a529-b1714224122b")
                        },
                        new
                        {
                            Id = new Guid("d79eb070-2da7-4f55-bac1-ab059050b49d"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("92dafa85-6f90-4f32-a529-b1714224122b")
                        },
                        new
                        {
                            Id = new Guid("ba117bfb-00e0-4d05-b26d-9cabea0ccba2"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("92dafa85-6f90-4f32-a529-b1714224122b")
                        },
                        new
                        {
                            Id = new Guid("57cb816c-d5cb-49a4-88ad-f5eef734d0f2"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("63899fba-ec34-4123-88c4-579892251555")
                        },
                        new
                        {
                            Id = new Guid("12acdc53-f8b3-48c8-aadb-06232b4543f3"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("63899fba-ec34-4123-88c4-579892251555")
                        },
                        new
                        {
                            Id = new Guid("45752d46-3748-4f8f-a41b-b2eb8fc53449"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("63899fba-ec34-4123-88c4-579892251555")
                        },
                        new
                        {
                            Id = new Guid("5c8007d5-5215-49a0-b385-aa9f36a965ff"),
                            Name = "museum",
                            SuperCategoryId = new Guid("63899fba-ec34-4123-88c4-579892251555")
                        },
                        new
                        {
                            Id = new Guid("0a30019e-628c-4328-8874-12e3fa50045d"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("c2996ddb-f227-42b9-903d-771aba8ef62f"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("0a30019e-628c-4328-8874-12e3fa50045d")
                        },
                        new
                        {
                            Id = new Guid("9da95645-68f8-45d7-8be2-f38d2b6d0348"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("167ad2d5-5bec-4040-a68b-017e74526273"),
                            Name = "park",
                            SuperCategoryId = new Guid("9da95645-68f8-45d7-8be2-f38d2b6d0348")
                        },
                        new
                        {
                            Id = new Guid("056357f2-4b54-4b32-ba67-87f1d1899562"),
                            Name = "garden",
                            SuperCategoryId = new Guid("167ad2d5-5bec-4040-a68b-017e74526273")
                        },
                        new
                        {
                            Id = new Guid("5169fc80-f7ba-446b-95cb-10434cc32318"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("167ad2d5-5bec-4040-a68b-017e74526273")
                        },
                        new
                        {
                            Id = new Guid("2004fa18-f5b7-4f71-be41-eaba8881f9de"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("67c9d2a9-6f0c-4d97-8ebf-e2591afa541f"),
                            Name = "forest",
                            SuperCategoryId = new Guid("2004fa18-f5b7-4f71-be41-eaba8881f9de")
                        },
                        new
                        {
                            Id = new Guid("c0fd103d-e26c-4856-a675-5511ddf86e85"),
                            Name = "water",
                            SuperCategoryId = new Guid("2004fa18-f5b7-4f71-be41-eaba8881f9de")
                        },
                        new
                        {
                            Id = new Guid("c21ab759-a1a5-419a-999a-7db15aeafd55"),
                            Name = "spring",
                            SuperCategoryId = new Guid("c0fd103d-e26c-4856-a675-5511ddf86e85")
                        },
                        new
                        {
                            Id = new Guid("e32f8794-08b3-4c2a-988a-73ccbcd2c289"),
                            Name = "reef",
                            SuperCategoryId = new Guid("c0fd103d-e26c-4856-a675-5511ddf86e85")
                        },
                        new
                        {
                            Id = new Guid("a28c3243-19a2-44d1-9986-a17520f8d2d6"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("c0fd103d-e26c-4856-a675-5511ddf86e85")
                        },
                        new
                        {
                            Id = new Guid("f79a053e-381f-42a8-9234-2c6094443fad"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("c0fd103d-e26c-4856-a675-5511ddf86e85")
                        },
                        new
                        {
                            Id = new Guid("e62c1d58-343d-4b42-9718-3482c9331183"),
                            Name = "sea",
                            SuperCategoryId = new Guid("c0fd103d-e26c-4856-a675-5511ddf86e85")
                        },
                        new
                        {
                            Id = new Guid("55bfce52-03f6-4d15-a3ef-d3eee4a858d5"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("2004fa18-f5b7-4f71-be41-eaba8881f9de")
                        },
                        new
                        {
                            Id = new Guid("0d687aad-1286-4e2e-bc1c-0f7faafb7a44"),
                            Name = "peak",
                            SuperCategoryId = new Guid("55bfce52-03f6-4d15-a3ef-d3eee4a858d5")
                        },
                        new
                        {
                            Id = new Guid("4e0deb9e-99e8-49e0-8af2-7547662e809a"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("55bfce52-03f6-4d15-a3ef-d3eee4a858d5")
                        },
                        new
                        {
                            Id = new Guid("e234c74e-de84-4133-8c86-6ab22ebc7f62"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("55bfce52-03f6-4d15-a3ef-d3eee4a858d5")
                        },
                        new
                        {
                            Id = new Guid("436783a9-ac12-4ddd-95ca-f3c74bd4c2ad"),
                            Name = "rock",
                            SuperCategoryId = new Guid("55bfce52-03f6-4d15-a3ef-d3eee4a858d5")
                        },
                        new
                        {
                            Id = new Guid("e2d1b373-e17b-4d1a-b5fd-e4d95cd6b361"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("55bfce52-03f6-4d15-a3ef-d3eee4a858d5")
                        },
                        new
                        {
                            Id = new Guid("794323a6-25a4-4b54-970b-c5b575212149"),
                            Name = "sand",
                            SuperCategoryId = new Guid("2004fa18-f5b7-4f71-be41-eaba8881f9de")
                        },
                        new
                        {
                            Id = new Guid("62ef851d-2391-452b-8e8e-a6cd80e167e3"),
                            Name = "dune",
                            SuperCategoryId = new Guid("794323a6-25a4-4b54-970b-c5b575212149")
                        },
                        new
                        {
                            Id = new Guid("4f0ca7b7-c815-4cc8-a446-b8634d372d84"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("12f979f4-1007-4343-9666-b0fabe30c95c"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("5a7c5460-aed9-43e3-b04f-05003bedffea"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("12f979f4-1007-4343-9666-b0fabe30c95c")
                        },
                        new
                        {
                            Id = new Guid("fe653060-a485-40dc-b824-ffcbdce0fe5b"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("5a7c5460-aed9-43e3-b04f-05003bedffea")
                        },
                        new
                        {
                            Id = new Guid("ce0bb645-869f-4554-bd8b-82686647cb0e"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("5a7c5460-aed9-43e3-b04f-05003bedffea")
                        },
                        new
                        {
                            Id = new Guid("f7390428-8078-4b34-b97f-3279df63c797"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("5a7c5460-aed9-43e3-b04f-05003bedffea")
                        },
                        new
                        {
                            Id = new Guid("1673f8bc-a50a-4f93-b95c-269ea73b3091"),
                            Name = "clock",
                            SuperCategoryId = new Guid("5a7c5460-aed9-43e3-b04f-05003bedffea")
                        },
                        new
                        {
                            Id = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f"),
                            Name = "sights",
                            SuperCategoryId = new Guid("12f979f4-1007-4343-9666-b0fabe30c95c")
                        },
                        new
                        {
                            Id = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("8bdeb856-b0bb-4e5d-a620-236075275527"),
                            Name = "church",
                            SuperCategoryId = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b")
                        },
                        new
                        {
                            Id = new Guid("904a68e3-17f7-47cb-b1a3-0c4e648a472d"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b")
                        },
                        new
                        {
                            Id = new Guid("7abacad7-8da5-4071-b741-f645d217e882"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b")
                        },
                        new
                        {
                            Id = new Guid("381a8309-04c0-4109-b75b-3ad2f256049b"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b")
                        },
                        new
                        {
                            Id = new Guid("183e0e4e-89b6-418b-9a22-3db211ea924a"),
                            Name = "temple",
                            SuperCategoryId = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b")
                        },
                        new
                        {
                            Id = new Guid("86767a13-be53-4f9f-bcf3-b6d82c430233"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b")
                        },
                        new
                        {
                            Id = new Guid("0e506a5c-7e8e-40e9-971d-7b50ec8d2587"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("534db4d8-a1d9-48b4-aabe-f21c835e895b")
                        },
                        new
                        {
                            Id = new Guid("d886bf7b-59c4-46cd-b676-e60a8457b759"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("6aecc95b-7252-4374-b0d9-046c2cfe42b0"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("fd726488-59bc-492a-9599-4cbf163b4434"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("b01198de-c6eb-46dd-ad59-07193544c1db"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("87acce08-cd33-49ea-8755-efa6c1e92b0c"),
                            Name = "tower",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("b236078e-53ce-4bfb-b6fb-a12d48f2bf0f"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("a896b707-625a-4bbf-a29f-fdc233597d09"),
                            Name = "fort",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("3cd45832-e603-47a3-a2bd-d0df998dbcf3"),
                            Name = "castle",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("13ac9759-9375-4531-addc-fa87eb3843eb"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("e2594374-7fa0-4b8d-bb40-6b9b0c7ca800"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("a622a85d-9a09-44e2-8d64-ca1854920897"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("0c6a8a4e-2389-4fe7-b11e-fd0da4233a88"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("fce249e6-a0cb-4e30-8c0a-93fa6489832f")
                        },
                        new
                        {
                            Id = new Guid("7c4a8d67-237d-42c1-aeea-a4abaed007f4"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("8b6758bc-e6d3-4b55-91ac-0130e7b59188"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("94d0c099-9c9c-40ef-9d50-97c34dd79b0e"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("890464e6-84f6-4aa1-8bd7-412587a35f5b"),
                            Name = "ship",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("05140d6d-f955-4f38-8f28-b37ee79fd550"),
                            Name = "tank",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("b86017f4-e29b-4cf8-a3e8-2ea6d8ceba10"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("34a50009-db71-4e87-9b11-e38a36cf6e5a"),
                            Name = "monument",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("30491a69-7228-4a85-a46c-51663b683107"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("c1131c36-68a9-4b53-a8f0-b2219b05fdcc"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("dda8fe4e-d300-42cd-8ab7-d013f1c99f6f"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("568437cc-af9b-476a-a86a-14eeb48efd08"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("e6ee7f08-f0d0-4176-b529-4f3fe6c4ac4f")
                        },
                        new
                        {
                            Id = new Guid("9838fdd0-5443-40e6-923f-9dd103a64467"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("9838fdd0-5443-40e6-923f-9dd103a64467")
                        },
                        new
                        {
                            Id = new Guid("c16690d9-4c1c-4258-856a-2eb8b8d88551"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("ba338d98-35e1-4f31-a9bf-22ac4f8dd5bc"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("eb738546-7ea1-4bad-b7b3-38cbf9ec5ec5"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("558846d3-d697-40d3-bfbb-5e7dadb4e82b"),
                            Name = "islam",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("0f9c7a66-a1a6-4ca7-8871-fa696681d240"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("d3cd99ad-99f3-4cd4-90fa-dd9fa01847a8"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("f9fcc784-e735-4747-afcb-bddbaef3a028"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("7db083a3-44f0-4b15-a7c7-ada5d563cf9f"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("a078292d-38aa-4bb7-ac81-a4c54264d2f3")
                        },
                        new
                        {
                            Id = new Guid("91c051a1-d9f7-45e2-8aa7-3afbc03d4075"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("69da653f-b010-474d-813d-527ed4e0bacc"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("91c051a1-d9f7-45e2-8aa7-3afbc03d4075")
                        },
                        new
                        {
                            Id = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("38cb39c6-820c-44b4-bbf5-7fe42183a1c3"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("4ffeb2e5-4723-4ac0-984b-eb042a7b2019"),
                            Name = "burger",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("5fa23012-77c9-449e-b943-e3f3ffb6cdb1"),
                            Name = "regional",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("68fa3b80-70d6-40e3-a53f-2e2a01c68c68"),
                            Name = "italian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("6517692f-5784-4671-88ed-0988cf790fce"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("e11ed471-898b-453b-b281-4c769f057d1e"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("c8843185-bb5f-428f-b7eb-8f9dbe8222e0"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("63e79b7c-fcd9-4a4b-8e6a-5ffe8b40ff15"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("a9d95f5e-c75e-4e5f-85a4-b6da2172b6dd"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("18fa3aac-8512-4f92-9d29-4fdf853dea72"),
                            Name = "american",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("48132e33-ec33-4ee8-a04e-f7a0e12cb64c"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("e8948f86-d5b7-4177-b06e-a5427557eb85"),
                            Name = "indian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("f10ca1fb-72a7-476f-973e-9e1aeded4fad"),
                            Name = "asian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("b6c07201-ccf3-45a7-a0ea-4d837d8ff8fb"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("005d79f8-6419-461a-882c-055a4d6d0a21"),
                            Name = "french",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("b22123e6-b754-4913-9f26-64ce314f0f33"),
                            Name = "german",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("2d82fb59-b46a-4d81-954f-e7b25b78c50c"),
                            Name = "thai",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("bc26de8d-2998-499b-a7ac-d6195a7a3d9e"),
                            Name = "greek",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("cea12712-a7ab-4ebd-adae-627a6311b0ad"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("9cecc1b6-f3e6-4438-b3f0-94be326f7867"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("29f019c8-d0c6-40ba-b1cc-16e33e82b823"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("f2cb05f9-83da-4d10-a84c-991ff6fe4c6d"),
                            Name = "international",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("002a18cc-d054-4022-9390-e5bf0d75ad3c"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("dcee7284-5349-4d64-b844-80fdb69f88f1"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("37246629-2112-415a-94b1-ceb5b70ba3d2"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("8809f5f9-0e3f-440d-9291-79b9d0a8b79e"),
                            Name = "korean",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("d6defbb8-e819-48b9-a6db-1cde348a5e8f"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("e90f85f1-90e1-4f08-82a3-122931e67283"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("61e4057c-05ba-4fb2-8dbf-8e7c986c6743"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("84bf18d5-1a3b-48ff-bd49-b5ae9ba30908"),
                            Name = "fish",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("f1fb1722-be50-4fae-9198-9b7859d3740c"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("0c1b23bc-7351-4e7a-a7bc-b85dad6c45b5"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("e9e77015-ce89-4edd-9a3b-81026a1372be"),
                            Name = "friture",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("b1b775a6-f38d-4531-bc1d-dede952b2405"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("47b4b273-abc2-4028-8e4a-790ac586347d"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("c32f1694-9180-4f56-9599-faab2ab13ff9"),
                            Name = "wings",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("97bbbbd0-d951-4df6-a104-0599b0452677"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("4c9bcdbf-f5cf-47b5-8bdc-45c25c6b621d"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("7d24ba57-bfcb-488b-8f9c-8b50b7944912"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("794b2281-adb2-470a-8cc9-ca2349d3687d"),
                            Name = "arab",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("0eaeb17e-0ed5-405c-b33e-39016ab07f06"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("bf5c6145-68ee-4b8f-8a5a-dbc27dcb1e70"),
                            Name = "russian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("2be63b24-4deb-4d22-9b94-fbc2acdfc359"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("cd766360-d3ec-493a-b432-2af182183d0b"),
                            Name = "african",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("98c11d77-960f-4c11-864e-8b5cc1cb692e"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("9c337fdb-1e58-4c8b-806c-b1a52859b4b6"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("b625a2bf-40c2-47d4-b4e6-ec856f0f472d"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("a79785c8-7d5b-4f27-9bb3-5f06a0a0e0f5"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("d470fd59-2af7-42a3-b76c-c0ab87acae75"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("ffb7c71a-af33-4f89-b3c3-f9df36b9c745"),
                            Name = "curry",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("67ad4b36-3c89-4dc4-bb28-c08fc075183b"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("1c816f2c-8357-462b-8813-4ecb63af40a5"),
                            Name = "persian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("760782c1-29d0-4b7f-8a7f-4252f31824d0"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("6b1fe494-87d6-41ac-99cb-3565f8ed9a51"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("bc52e586-0f80-4178-9077-881f1a84399a"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("40429c73-54e5-4a18-a878-30f0dbbfd6ee"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("61875091-23e2-4c84-86f7-e6ea168f45fa"),
                            Name = "pita",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("0d008ec9-bcb5-4eb1-8c54-c6fe0422438f"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("2b31fc27-0817-4238-bd53-cc4380038d32"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("27229d45-f81d-4ecf-8991-fedf509cb38e"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("8f958939-1894-434e-a955-304602338472"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("37516ddd-dad0-497b-a678-cc61c2cca204"),
                            Name = "irish",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("888afa6b-fab9-4898-a476-6d77c9a68c98"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("e6b96290-a290-4872-95da-ef823df74ac2"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("4303c1d2-7d0f-4c19-a4de-80a0088fdba6"),
                            Name = "danish",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("0a0ee8cc-c713-4f28-b587-1cc2051e3a4a"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("b659eecc-47e9-4e33-88d5-d0a92924451f"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("ee804ba5-71be-4dd9-abef-176c102274e8"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("d10c396d-4f20-4a91-acb7-fe0a2881668e"),
                            Name = "western",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("72db5811-b093-49d0-9558-6adf81930882"),
                            Name = "european",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("c0949a51-2e21-491f-a31f-f77a4abd58aa"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("7265707e-c10b-47fe-8579-07bff70faa6c"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("5d665c8f-a256-4dc8-b7e9-cbccb318be0b"),
                            Name = "soup",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("6a638494-3b7a-452d-90da-4deab3acbe1d"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("c562368d-6b3a-41d2-8b2a-d6918b2083ca"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("8e2c79ee-b79a-4e20-8b51-929b73ee62eb"),
                            Name = "czech",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("abba0483-28b3-4408-8bae-4904d270afc6"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("3673e71e-5280-407e-9780-10682d7751a2"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("0ce07898-674b-4b67-a185-24470a7f2a9b"),
                            Name = "malay",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("ea9ead40-aaa0-4d0b-a043-9f7bcd84095c"),
                            Name = "chili",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("918ba289-3ca7-46c9-92c3-38ccae01b6c2"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("56eb2d4d-539e-4c6d-99e2-f76104074182"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("d53c441b-4f8b-4c49-bfe5-87c757e067e5"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("a194179d-16fd-4498-85a4-5598a2a41a5d"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("a5cf94f5-d89d-4b0b-a518-86992294f387")
                        },
                        new
                        {
                            Id = new Guid("7185973e-7582-43f4-a79f-a52366baaed4"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("0b71cf50-b0af-4f6e-907d-2160168e6d6f"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("18798bf4-66f8-458c-b83e-d8d04b0336ff"),
                            Name = "burger",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("bc5ff0a9-2abe-41fb-b4ba-51964e011e14"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("df0d33e9-ef03-4abe-aaa5-fafef9293986"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("2e840a19-8c27-4c20-a992-3bef1daf7a26"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("8f39236c-48ae-4dc0-b018-adf07c53519c"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("5a5949f6-c419-475e-97dd-b24fc68d95ef"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("8319d241-12d4-4342-a0fa-af2b1cf0de4d"),
                            Name = "wings",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("70886510-81ae-4fe7-8a5b-aea4e4b9d19e"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("abb63ce1-fc6f-4e9e-a125-e11ddb7da2a3"),
                            Name = "pita",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("94addf81-59ee-4d62-a5c3-0ee00da75e05"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("1ed93fc1-6d01-4ca8-94cc-8715b71efe8f"),
                            Name = "soup",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("d7abaf75-bbed-429d-a706-d565926c5065"),
                            Name = "salad",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("1c58fe34-2572-44f2-8ee1-9b938d153947"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("7185973e-7582-43f4-a79f-a52366baaed4")
                        },
                        new
                        {
                            Id = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("5f230c30-825d-4203-b283-eac7f97a12e0"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("914e5192-5653-48d6-961e-60ee8f3900e6"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("1e8842a7-779f-46dc-8873-386df9cff8e1"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("208777a1-4d21-4a5e-a8af-0c809ada9b5c"),
                            Name = "donut",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("89e9f692-6f69-4c63-9ace-56797aec1bf2"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("9d630475-877f-408f-9ee8-c2c12ee27294"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("20f31c36-9c51-441b-905c-863f7b3f050f"),
                            Name = "cake",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("dec78d1a-135b-43eb-9f3d-c95c57ad8e9e"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("32d925da-4750-4485-a09c-dd3c06f35b26"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("6174c77a-326e-4ffe-b82a-f825d2821f53"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("6c33afa2-cf6e-401e-95f8-53686fbf9071"),
                            Name = "tea",
                            SuperCategoryId = new Guid("812a7c30-dde3-4851-a44b-5a8aa7286a62")
                        },
                        new
                        {
                            Id = new Guid("8bb0dcb7-baf4-4a42-b458-4d98d625ae6a"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("5a06a670-6b03-424b-b9d2-424fcf9f912e"),
                            Name = "bar",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("fbada697-28a6-41e5-aab0-3b4dd68ae56a"),
                            Name = "pub",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("8df8cde1-400f-4461-9f52-d8665bea03d8"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("46ee5efe-a178-4d52-99af-29f9c297c8dc"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        },
                        new
                        {
                            Id = new Guid("913f305e-5fbf-4113-9e0b-e5c78b9ad04c"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("b12ec9a5-e20c-470c-aded-891075f52d34")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3a4af946-5a15-4b00-a090-5860c995dfdb"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("2394c102-78bf-4235-955d-eb501272fb1f"),
                            Name = "free",
                            SuperConditionId = new Guid("3a4af946-5a15-4b00-a090-5860c995dfdb")
                        },
                        new
                        {
                            Id = new Guid("df6b4248-2c06-46e3-b884-fe9bfe11b29c"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("3a4af946-5a15-4b00-a090-5860c995dfdb")
                        },
                        new
                        {
                            Id = new Guid("5e4683d3-f9c1-4a0e-9e4e-9b2c20df575c"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("69dcc317-5e8f-488e-af9f-3ea0886ca3a5"),
                            Name = "yes",
                            SuperConditionId = new Guid("5e4683d3-f9c1-4a0e-9e4e-9b2c20df575c")
                        },
                        new
                        {
                            Id = new Guid("0c808144-e82f-4c8c-939b-49e794eec66c"),
                            Name = "limited",
                            SuperConditionId = new Guid("5e4683d3-f9c1-4a0e-9e4e-9b2c20df575c")
                        },
                        new
                        {
                            Id = new Guid("fbe9d543-810e-4545-b780-1296d3c7642d"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("14b9b7de-c255-4b8b-8378-dc11cd6ec307"),
                            Name = "yes",
                            SuperConditionId = new Guid("fbe9d543-810e-4545-b780-1296d3c7642d")
                        },
                        new
                        {
                            Id = new Guid("a64313ef-18c3-45ce-a925-e014c768cc0e"),
                            Name = "leashed",
                            SuperConditionId = new Guid("fbe9d543-810e-4545-b780-1296d3c7642d")
                        },
                        new
                        {
                            Id = new Guid("3f511990-6aac-489c-9c33-d24d99c4add7"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("e211e5dc-652f-4d77-9b42-c065974c3904"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("00eebb31-4974-4f1a-9375-26911175a74c"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("e211e5dc-652f-4d77-9b42-c065974c3904")
                        },
                        new
                        {
                            Id = new Guid("7819d714-0c98-4b3d-b4d0-8fe9e82b41cd"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("e211e5dc-652f-4d77-9b42-c065974c3904")
                        },
                        new
                        {
                            Id = new Guid("de72aa85-dba5-4568-a4a5-38bca3446181"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("1ef17dd2-f495-467d-bfc5-b33b43cd12e4"),
                            Name = "customers",
                            SuperConditionId = new Guid("de72aa85-dba5-4568-a4a5-38bca3446181")
                        },
                        new
                        {
                            Id = new Guid("29fe8930-e43b-42f7-913a-ba9d02e10892"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("9b38ce19-51cb-4b54-9877-7af60d334486"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("03568165-09a4-41ee-9fbc-f91e34f5e46f"),
                            Name = "no",
                            SuperConditionId = new Guid("9b38ce19-51cb-4b54-9877-7af60d334486")
                        },
                        new
                        {
                            Id = new Guid("98401a01-4d4e-49a3-86e2-ac8751c4dc74"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("9b38ce19-51cb-4b54-9877-7af60d334486")
                        },
                        new
                        {
                            Id = new Guid("81e023ff-8132-41f4-b0a3-4d482dbcb6c5"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("b31724a2-5639-428b-8082-fc09471fc1c2"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("6b0e6c16-ecfe-4049-b356-778a6d1ef385"),
                            Name = "only",
                            SuperConditionId = new Guid("b31724a2-5639-428b-8082-fc09471fc1c2")
                        },
                        new
                        {
                            Id = new Guid("42fc463d-f14d-4fda-99ef-279f8555541c"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("05ddbe46-ae11-4b8b-8b0e-d189dacddbd6"),
                            Name = "only",
                            SuperConditionId = new Guid("42fc463d-f14d-4fda-99ef-279f8555541c")
                        },
                        new
                        {
                            Id = new Guid("5fc76738-054b-448e-a4cd-3f2fcb796c08"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("c199ae96-1ffb-4db6-a11d-635b6510c438"),
                            Name = "only",
                            SuperConditionId = new Guid("5fc76738-054b-448e-a4cd-3f2fcb796c08")
                        },
                        new
                        {
                            Id = new Guid("9fd07f66-7c5f-4e74-bf9d-70ee40d7c430"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("f1072d9b-4dea-496e-a2a5-d5f390d50701"),
                            Name = "only",
                            SuperConditionId = new Guid("9fd07f66-7c5f-4e74-bf9d-70ee40d7c430")
                        },
                        new
                        {
                            Id = new Guid("33be503a-958a-4b89-a1c4-55156bf4f9eb"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("ebcd55ac-2271-44d2-9b88-f29386684244"),
                            Name = "only",
                            SuperConditionId = new Guid("33be503a-958a-4b89-a1c4-55156bf4f9eb")
                        },
                        new
                        {
                            Id = new Guid("9fb87a2b-700e-4f07-9d10-62082ec2d3b9"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("08e1c678-6b43-4442-847d-ee7aff5750de"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("2f7d003e-6f4e-49c2-bc61-9baa80da6c17"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("ce6164ee-3a2e-47af-a412-e78b7762a646"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("454c4881-d5dd-49ee-a3bb-cbe5590d7661"),
                            FromTripPointId = new Guid("ee9e514e-e276-4b70-85a4-aac57c2564ea"),
                            StartTime = new TimeOnly(10, 20, 0),
                            ToTripPointId = new Guid("ca8a1ab3-a146-4602-af72-9ac21d8d62be"),
                            TransferTime = new TimeSpan(1800),
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("e66db4c2-5dc6-4f00-b02b-4f547ce1446f"),
                            FromTripPointId = new Guid("9409a7bb-9aed-4ea3-86dc-9b0937785938"),
                            StartTime = new TimeOnly(12, 0, 0),
                            ToTripPointId = new Guid("2faad52b-e347-497c-bf9b-11fdb37efa73"),
                            TransferTime = new TimeSpan(1200),
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("e6ff9045-38d5-41b3-87eb-059de2369ed4"),
                            FromTripPointId = new Guid("2faad52b-e347-497c-bf9b-11fdb37efa73"),
                            StartTime = new TimeOnly(13, 0, 0),
                            ToTripPointId = new Guid("1661b8b9-1957-4ef1-9f05-15673c4053a9"),
                            TransferTime = new TimeSpan(1200),
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("4755a11e-dd8c-4ebe-a217-9948ff4bb8b4"),
                            FromTripPointId = new Guid("d2b86de4-c027-4ddf-97cb-485230d1abf4"),
                            StartTime = new TimeOnly(12, 40, 0),
                            ToTripPointId = new Guid("15550dca-6eb4-4bda-acbb-b0523103fd1f"),
                            TransferTime = new TimeSpan(1200),
                            TripDayId = new Guid("80e1ea23-e171-4945-a15b-bad2cc6cc180")
                        },
                        new
                        {
                            Id = new Guid("a19dd974-fbb9-4cc3-a5d1-770a85ee62f8"),
                            FromTripPointId = new Guid("15550dca-6eb4-4bda-acbb-b0523103fd1f"),
                            StartTime = new TimeOnly(13, 10, 0),
                            ToTripPointId = new Guid("63a719ed-440b-4a65-8227-2783bb145b59"),
                            TransferTime = new TimeSpan(2660),
                            TripDayId = new Guid("80e1ea23-e171-4945-a15b-bad2cc6cc180")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9f49621c-95a5-4cfc-8e16-4db011b57fb3"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("af0b6670-3e0d-4910-bd6a-f7bc68428e77"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("9f49621c-95a5-4cfc-8e16-4db011b57fb3")
                        },
                        new
                        {
                            Id = new Guid("80e1ea23-e171-4945-a15b-bad2cc6cc180"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("9f49621c-95a5-4cfc-8e16-4db011b57fb3")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee9e514e-e276-4b70-85a4-aac57c2564ea"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("00651884-a700-4661-aaca-2decc6bcf31c"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("ca8a1ab3-a146-4602-af72-9ac21d8d62be"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("3beb7142-0f1c-4b95-9027-6d071aac0aaa"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("9409a7bb-9aed-4ea3-86dc-9b0937785938"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("55031653-b32e-493d-995d-c7e8c04cf365"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("2faad52b-e347-497c-bf9b-11fdb37efa73"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("4bac3c66-2372-4c33-afad-5f0ed7daf31d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("1661b8b9-1957-4ef1-9f05-15673c4053a9"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("f96db3b4-d8f2-437e-9663-37991d69c37e"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("fad4a0dc-a49f-4c5c-9546-f539a30dd20a")
                        },
                        new
                        {
                            Id = new Guid("d2b86de4-c027-4ddf-97cb-485230d1abf4"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("6c2a00f4-818e-4c55-9406-a8ffb773f6a3"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("80e1ea23-e171-4945-a15b-bad2cc6cc180")
                        },
                        new
                        {
                            Id = new Guid("15550dca-6eb4-4bda-acbb-b0523103fd1f"),
                            Comment = "Ciekawe skąd ta nazwa ulicy",
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("ad8d58aa-8f42-4d1c-a27b-77a4e952a9f6"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("80e1ea23-e171-4945-a15b-bad2cc6cc180")
                        },
                        new
                        {
                            Id = new Guid("63a719ed-440b-4a65-8227-2783bb145b59"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("9ebecbd3-3c61-4d16-bdc1-4f22bc579d9e"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("80e1ea23-e171-4945-a15b-bad2cc6cc180")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4bac3c66-2372-4c33-afad-5f0ed7daf31d"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.42426m,
                            Longitude = 17.43164m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("f96db3b4-d8f2-437e-9663-37991d69c37e"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("af0b6670-3e0d-4910-bd6a-f7bc68428e77"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("00651884-a700-4661-aaca-2decc6bcf31c"),
                            City = "Raszkówek",
                            Country = "Poland",
                            Latitude = 51.73393750m,
                            Longitude = 17.74069633m,
                            Name = "Kaplica loretańska",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("3beb7142-0f1c-4b95-9027-6d071aac0aaa"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("55031653-b32e-493d-995d-c7e8c04cf365"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("6c2a00f4-818e-4c55-9406-a8ffb773f6a3"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("ad8d58aa-8f42-4d1c-a27b-77a4e952a9f6"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            State = "Greater Poland Voivodeship",
                            Street = "60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("9ebecbd3-3c61-4d16-bdc1-4f22bc579d9e"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
