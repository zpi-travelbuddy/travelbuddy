// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241107164254_ChangePrecisionSetProfilesToOptional")]
    partial class ChangePrecisionSetProfilesToOptional
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e57ea627-d5f6-437e-9c51-4692cd28a3fb"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("a34b6fd8-d96e-4023-bbae-20c9159a7ed9"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("0a14deed-bd39-45b2-81e1-6e5f2433dfef"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("a34b6fd8-d96e-4023-bbae-20c9159a7ed9")
                        },
                        new
                        {
                            Id = new Guid("06daa607-a132-428c-9999-25d959ea7455"),
                            Name = "art",
                            SuperCategoryId = new Guid("a34b6fd8-d96e-4023-bbae-20c9159a7ed9")
                        },
                        new
                        {
                            Id = new Guid("57e0189d-d34f-4567-acb3-8241256edf2e"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("3ce47e1f-9b87-46f2-a6cb-b8e47c05ec8f"),
                            Name = "culture",
                            SuperCategoryId = new Guid("57e0189d-d34f-4567-acb3-8241256edf2e")
                        },
                        new
                        {
                            Id = new Guid("1b2509cf-51eb-4a35-8754-8b6c51534689"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("3ce47e1f-9b87-46f2-a6cb-b8e47c05ec8f")
                        },
                        new
                        {
                            Id = new Guid("141fabe4-7a4f-4166-931b-22d3063cf8c3"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("3ce47e1f-9b87-46f2-a6cb-b8e47c05ec8f")
                        },
                        new
                        {
                            Id = new Guid("3caef20f-05fc-41ba-86d5-210e18a407e8"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("3ce47e1f-9b87-46f2-a6cb-b8e47c05ec8f")
                        },
                        new
                        {
                            Id = new Guid("05b0369d-ada3-4c8a-afeb-2f1f4c958d01"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("57e0189d-d34f-4567-acb3-8241256edf2e")
                        },
                        new
                        {
                            Id = new Guid("a7fa9dd6-ed42-46ef-af94-3d7d7a26a6b0"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("57e0189d-d34f-4567-acb3-8241256edf2e")
                        },
                        new
                        {
                            Id = new Guid("05969b81-413d-43c5-a83a-07f7ebd9d982"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("57e0189d-d34f-4567-acb3-8241256edf2e")
                        },
                        new
                        {
                            Id = new Guid("bfc936d4-1985-4db0-994f-475b3f38cbe6"),
                            Name = "museum",
                            SuperCategoryId = new Guid("57e0189d-d34f-4567-acb3-8241256edf2e")
                        },
                        new
                        {
                            Id = new Guid("7f09604a-d8e6-4b92-8776-f291a200b4f6"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("a71ba830-1232-4bd1-9827-5097721c318f"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("7f09604a-d8e6-4b92-8776-f291a200b4f6")
                        },
                        new
                        {
                            Id = new Guid("bc731725-7367-4489-bbe9-e5332b8e435c"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("0de06a81-171e-4155-ac53-1a03a9a8b6c5"),
                            Name = "park",
                            SuperCategoryId = new Guid("bc731725-7367-4489-bbe9-e5332b8e435c")
                        },
                        new
                        {
                            Id = new Guid("263c5bef-f93e-497c-aae1-5d33a63ca74a"),
                            Name = "garden",
                            SuperCategoryId = new Guid("0de06a81-171e-4155-ac53-1a03a9a8b6c5")
                        },
                        new
                        {
                            Id = new Guid("63018ae7-7159-4b24-8134-fe6eaad89fb1"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("0de06a81-171e-4155-ac53-1a03a9a8b6c5")
                        },
                        new
                        {
                            Id = new Guid("8ae939e5-5b08-46ae-bd8f-a4505c240bc1"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("7f4d9e43-3297-4fc5-b710-5b300bb7cede"),
                            Name = "forest",
                            SuperCategoryId = new Guid("8ae939e5-5b08-46ae-bd8f-a4505c240bc1")
                        },
                        new
                        {
                            Id = new Guid("a44373bb-a84a-445c-b0f2-79183dda089d"),
                            Name = "water",
                            SuperCategoryId = new Guid("8ae939e5-5b08-46ae-bd8f-a4505c240bc1")
                        },
                        new
                        {
                            Id = new Guid("13b55779-f75f-4837-8811-e1fd37ac5c2d"),
                            Name = "spring",
                            SuperCategoryId = new Guid("a44373bb-a84a-445c-b0f2-79183dda089d")
                        },
                        new
                        {
                            Id = new Guid("ef654fd6-3377-4e23-a036-2c390dbaf178"),
                            Name = "reef",
                            SuperCategoryId = new Guid("a44373bb-a84a-445c-b0f2-79183dda089d")
                        },
                        new
                        {
                            Id = new Guid("5a18000a-2721-4345-86b2-3ac72c395cb5"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("a44373bb-a84a-445c-b0f2-79183dda089d")
                        },
                        new
                        {
                            Id = new Guid("c21e03c6-4b43-417d-b5be-38fc912af96e"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("a44373bb-a84a-445c-b0f2-79183dda089d")
                        },
                        new
                        {
                            Id = new Guid("17d903f7-dda4-4fb8-ade8-29830a940eab"),
                            Name = "sea",
                            SuperCategoryId = new Guid("a44373bb-a84a-445c-b0f2-79183dda089d")
                        },
                        new
                        {
                            Id = new Guid("705a7c87-1851-4db3-a1d9-893629f633fa"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("8ae939e5-5b08-46ae-bd8f-a4505c240bc1")
                        },
                        new
                        {
                            Id = new Guid("f5d24ded-db7f-493f-8842-7f349718cdab"),
                            Name = "peak",
                            SuperCategoryId = new Guid("705a7c87-1851-4db3-a1d9-893629f633fa")
                        },
                        new
                        {
                            Id = new Guid("c8fe7f71-9c0f-4473-92cb-907d2c0374dd"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("705a7c87-1851-4db3-a1d9-893629f633fa")
                        },
                        new
                        {
                            Id = new Guid("014462c9-4528-44b8-88ac-639ca1eaea9c"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("705a7c87-1851-4db3-a1d9-893629f633fa")
                        },
                        new
                        {
                            Id = new Guid("440fe3c2-4450-4c77-8d22-6b92f9eef558"),
                            Name = "rock",
                            SuperCategoryId = new Guid("705a7c87-1851-4db3-a1d9-893629f633fa")
                        },
                        new
                        {
                            Id = new Guid("6b42ab0c-e010-4bf7-a4b2-842605f986a3"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("705a7c87-1851-4db3-a1d9-893629f633fa")
                        },
                        new
                        {
                            Id = new Guid("3b83ab7f-ec41-4171-a13a-04dd64a580f3"),
                            Name = "sand",
                            SuperCategoryId = new Guid("8ae939e5-5b08-46ae-bd8f-a4505c240bc1")
                        },
                        new
                        {
                            Id = new Guid("6250cc0e-0cdc-475d-8df1-ae50ff8ec2f1"),
                            Name = "dune",
                            SuperCategoryId = new Guid("3b83ab7f-ec41-4171-a13a-04dd64a580f3")
                        },
                        new
                        {
                            Id = new Guid("ec3a3a0d-dbc6-4c8f-8109-cd5390510872"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("f1555acf-73b5-46a9-9b48-e88d2b4873bc"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("58a44544-7d9a-40e8-9193-422211af25fb"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("f1555acf-73b5-46a9-9b48-e88d2b4873bc")
                        },
                        new
                        {
                            Id = new Guid("c4e32fe6-1fa3-4877-aa76-811ab1dcf10e"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("58a44544-7d9a-40e8-9193-422211af25fb")
                        },
                        new
                        {
                            Id = new Guid("e2469474-b45d-4228-ae42-a88eb594303a"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("58a44544-7d9a-40e8-9193-422211af25fb")
                        },
                        new
                        {
                            Id = new Guid("960746e0-9dd3-4275-aa8d-5f5b11f0d4b2"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("58a44544-7d9a-40e8-9193-422211af25fb")
                        },
                        new
                        {
                            Id = new Guid("1c01aab9-a68e-4207-bfb9-baa9457545c9"),
                            Name = "clock",
                            SuperCategoryId = new Guid("58a44544-7d9a-40e8-9193-422211af25fb")
                        },
                        new
                        {
                            Id = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117"),
                            Name = "sights",
                            SuperCategoryId = new Guid("f1555acf-73b5-46a9-9b48-e88d2b4873bc")
                        },
                        new
                        {
                            Id = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("144210cc-da22-47c5-abb6-537b1eae3868"),
                            Name = "church",
                            SuperCategoryId = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32")
                        },
                        new
                        {
                            Id = new Guid("40ed182c-6ae5-4ce8-a2c7-a5f06cd1e42b"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32")
                        },
                        new
                        {
                            Id = new Guid("82ba194d-8f7c-4f0a-a794-895523bf1a1a"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32")
                        },
                        new
                        {
                            Id = new Guid("808dde61-f861-4239-9ea7-a6c8a398f902"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32")
                        },
                        new
                        {
                            Id = new Guid("18476643-a1e6-415a-9925-bd5737f19a48"),
                            Name = "temple",
                            SuperCategoryId = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32")
                        },
                        new
                        {
                            Id = new Guid("b8b6078d-dda3-4e46-b747-6feb11bed3bf"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32")
                        },
                        new
                        {
                            Id = new Guid("2713f751-06c0-41b7-b30d-f1a93052b272"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("5bed9583-09d7-4d9b-93bc-cea2b8b21f32")
                        },
                        new
                        {
                            Id = new Guid("98a43258-1267-47c9-b2d5-ab8902e4695e"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("0aee728d-ea56-4003-a377-d2ce0d5cc1e5"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("ac058a1e-2dc0-4555-b520-fbeeb41ba5d1"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("5545a921-4427-4082-813f-01e486af1713"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("43cbe97f-bcb5-4fe9-8795-fce5b4edd8c5"),
                            Name = "tower",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("4a2840b3-d222-4ed4-a696-4cc7f0e90150"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("bf75bdea-bccd-4b7f-8087-ef408ec14886"),
                            Name = "fort",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("925c6f71-bf90-4c90-bb10-860da88e277d"),
                            Name = "castle",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("fe6a78e4-6730-4834-9cbf-f79f919e22aa"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("922ac5c1-be1f-488b-83c4-9c10199ec1d0"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("65d4cb1e-f3b4-4d6a-bffc-bcaef81f35b4"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("d91065f6-9de2-438f-acd2-8d182dadadd5"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("9b34500f-f877-42de-a0fe-0e3722c35117")
                        },
                        new
                        {
                            Id = new Guid("44236346-2c25-48b8-b028-bfa1e1d289d3"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("47a80f94-04cd-48bf-b8ac-b887ff85ecbf"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("d1176bb2-9add-42ce-9443-04ff4c673878"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("7808efee-4686-4dae-902c-07d290c9a294"),
                            Name = "ship",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("8851f007-e10c-4cdb-bc4d-471f52fd6974"),
                            Name = "tank",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("de4cd6ca-da99-45c6-83fc-2cc3a456e53d"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("6a575725-17c8-4883-b099-6f9a1a3cbc0a"),
                            Name = "monument",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("e2f0d783-b1de-45d9-83e4-a8310279909b"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("a3a045ba-b489-4d7b-8063-c7962360b9c4"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("1bc1416e-0a07-4b45-bcaa-e6869dee4db8"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("e1b317cb-9c70-43d2-8721-6810c4eefee7"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("adc5d3d7-8a5b-41d5-9f79-b69adef68536")
                        },
                        new
                        {
                            Id = new Guid("b3df5236-548d-40e0-b808-fa5034f9c801"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("b3df5236-548d-40e0-b808-fa5034f9c801")
                        },
                        new
                        {
                            Id = new Guid("5a0af4e4-5353-4269-9308-b03505170ffe"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("581a4047-04d2-4dab-b738-02ce4fcf4993"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("7818ec97-5368-4085-a023-24e8fdd64b64"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("c79afb13-c091-4c87-a48f-2f760645ff79"),
                            Name = "islam",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("f83c7787-8dad-4c6a-a7fb-5ffe469b1620"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("0e32b255-35af-4bfc-9621-d51856bba8fa"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("1d93602d-b92c-44d8-8915-f7667bf8b9bf"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("7decc880-3fa9-4ee4-be3c-9a982be4fe13"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("651bfcca-f749-46a1-a5a9-e4da9617d908")
                        },
                        new
                        {
                            Id = new Guid("9a9df710-4e94-4468-a563-29390e2863ca"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("e01f2f14-1036-4519-b8d4-0fe7f78a9481"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("9a9df710-4e94-4468-a563-29390e2863ca")
                        },
                        new
                        {
                            Id = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("54ead43a-6729-453e-943d-4d6592b8abcf"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("51e2004e-a8d5-49c0-b2b3-048b3cb8b303"),
                            Name = "burger",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("187ac250-46c8-4726-943d-528b9f28de78"),
                            Name = "regional",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("b279f1e7-097f-43e9-a3ff-ad218ab95836"),
                            Name = "italian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("32495d28-c406-4058-8670-0bcf25b2d26c"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("1c835c6d-1d6b-4533-9b69-6fa2b868e6ad"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("f0fefaac-ac3f-4d16-9b97-e3d165380c4a"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("9c1e55c5-8b1b-4e5f-82c0-59ebc3e16054"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("e085ce01-038c-4018-aec6-103f5c6b905c"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("ef620cf6-ec7e-4737-857d-4d3a74f168fc"),
                            Name = "american",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("662c7a20-ed06-4d7c-a8a9-d0a84260a406"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("54522a3b-f40a-4c13-a4f7-7fab383929d0"),
                            Name = "indian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("b5abebdd-498c-418a-87f1-0fc89f3c3d46"),
                            Name = "asian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("a2efe75c-f1b3-4113-a6f5-47bfa30af9dc"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("901f7afb-7a88-442b-8e40-c33bd7542f70"),
                            Name = "french",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("ae62b254-e07a-4747-b9ab-2b53f5aa62cd"),
                            Name = "german",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("10b9c99c-c50e-4364-b4c4-b84ddcfbd2e9"),
                            Name = "thai",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("47f80fea-b051-4b2e-a4ee-76692077521d"),
                            Name = "greek",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("c9c70b43-8b7f-4473-8dcb-298268ea6d67"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("78891299-d0eb-48ec-8179-971652bede1e"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("7930d107-98b8-4f33-9714-da5b4df76123"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("71aea8d7-5785-411c-af05-5c13bc29320f"),
                            Name = "international",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("912e831a-a762-4caa-b9e6-153cc1697a82"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("bc135ec0-f4cf-4155-bdc2-47321be411e4"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("c912fb90-e77a-48f8-9558-4ba85fbe5a5a"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("c65fefaa-212b-4e79-b744-76bfd2aeaf1e"),
                            Name = "korean",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("1ebf4b8f-e987-4457-9f65-d7ed09f8a12b"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("d76ecb5e-3611-4974-ab66-a2089f2bc0a8"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("a18e7cb3-b25c-44a1-8f47-35023ce37248"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("632bd619-6f4d-44dc-a911-75fafe51cba7"),
                            Name = "fish",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("f364ea67-57fa-4e7c-b662-4943a0755041"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("e484f99b-c7ad-47a1-9557-f0cdbfa10e17"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("13649bc1-fa76-439f-af98-c67ce837f94f"),
                            Name = "friture",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("c5395948-758b-4f38-abed-9ee8114643b3"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("e9e0e7cc-915e-4373-826d-fa586471db25"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("4985dc88-80eb-4b32-953d-8a3d50a16832"),
                            Name = "wings",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("0c66ebbe-4638-43f7-99df-c3e0dd2e67ea"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("41f35c29-c3bf-4869-8316-98873976b364"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("79443788-0a62-4572-8344-c6ecd7f02c3b"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("f0178e9b-2366-4cb9-91ab-f5795f5f36cd"),
                            Name = "arab",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("f8d72a8d-9496-42a2-962a-266a370e7dfd"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("72094f06-b65e-435b-b9de-7930f5e4882b"),
                            Name = "russian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("03c781c2-1651-484f-86fc-f7a6c0674cd5"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("94fb0988-cc75-44fb-8d0b-183e87027e91"),
                            Name = "african",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("11b40327-8f1d-4c8a-b858-581196dfa8f5"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("3b9d70f9-16ab-4ebe-b37f-91867e88f120"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("20d33b25-d14f-46e8-abc1-76fc77dd6d8a"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("c517b227-67c5-4474-91a0-027a0e7b36d0"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("106e5044-5bcd-4e8d-9f9f-f6c9c9631eb1"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("df1ca42a-0c5c-4397-99cc-25e21dea8521"),
                            Name = "curry",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("4873be12-80d4-4fee-9963-0d1abc7c0eae"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("df815f39-79c1-4a4e-a2ab-f6c4b4f933fa"),
                            Name = "persian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("005fe19c-5244-474a-9806-96c6f4ab397e"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("7233e23b-6524-42d1-8deb-9a918470c544"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("222fdd74-54c6-4a54-97c6-94face036eb3"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("454b4711-8136-4ca7-85ae-b4c4b1bcb1fc"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("136acccd-1d72-4f75-82a6-0cee7cd2b97b"),
                            Name = "pita",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("178e0d4f-6392-4239-9c13-c4fcdd4f0942"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("f74cdf9d-6018-4103-a23c-e736c76e8d5c"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("60373b44-94bc-4fa9-be7f-62088941fde3"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("6fd5a5bb-d6b5-4fc6-ab2b-16c6a07f03d2"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("b5a0fa06-28dc-4968-9127-75d9fafcaa7c"),
                            Name = "irish",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("5a8447b6-664f-4f0b-9d77-23c2648a3739"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("344ce4ee-702f-401a-ae0c-700a6abd5943"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("d31609bc-d0f3-45b5-89ee-d64c7cda10fd"),
                            Name = "danish",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("067df7a7-0db1-4b92-9105-a968163cf3ed"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("0bcb0ca9-821e-4423-9a79-313e30431685"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("d8d2f973-2faa-4448-aad7-5ef28d8fd082"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("ad935338-be92-4ecc-a0ec-972e474bbd03"),
                            Name = "western",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("54797ed8-d0e8-4677-94c8-7550bb2263a6"),
                            Name = "european",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("ce15bfce-bdfa-453b-a204-c3d6819816b0"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("dcbdcab5-00e5-4f52-9d8b-20f26a4df826"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("a75cba8b-ad19-497b-9ec0-0b8f8a0eb004"),
                            Name = "soup",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("7c26ec27-266d-4f73-a77a-5cd6e4af9fab"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("d8166420-0d3c-4d1e-822f-c7b2621ccff4"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("034caad1-2388-4665-a9f4-49691cae2ad4"),
                            Name = "czech",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("8d5c1e90-a09e-4f83-acc1-27b5aa56e9fa"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("e8b3c565-eaf5-4bc3-b9b4-b9b11f2a7268"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("93ac4a58-5dc9-4344-b223-21f4a28b24ae"),
                            Name = "malay",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("b4e40e0f-f0b5-4761-bbd2-48b37edb1865"),
                            Name = "chili",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("2867fc24-2ebd-4102-b999-e4c9d68c8297"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("a17b6eb1-1864-4818-b73a-036c9b98b724"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("9297b507-e6e5-4447-99b3-8692fb483a45"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("15093a0b-7d0c-4f17-b4ff-381244eccade"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("23d7a5b9-e831-428a-b190-a6efa7fbd1f1")
                        },
                        new
                        {
                            Id = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("bd323604-402e-48b5-b49d-8310cf889de9"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("bb9e90e8-8421-4000-abcf-e060af4f682f"),
                            Name = "burger",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("3504faa9-ab33-4a0b-a816-6a3019ed4a0f"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("59153f43-ed71-4e92-a224-2efc8e31370e"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("b66d8777-b317-43aa-afe0-ba71497352b3"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("c32c545a-d334-4900-894c-d1a6263494e6"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("1fd9b279-1c4a-4966-b456-fdf28eda5815"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("6f3def45-3e2f-4e5b-8543-9552c1373aaf"),
                            Name = "wings",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("aa015593-821e-45e4-b9b9-00b2c0842252"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("06b1806e-7736-421b-a278-908689bee902"),
                            Name = "pita",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("ad2292f5-061a-4aea-a049-ecfbc1c42e25"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("f82bbc9f-6faa-4437-8fae-dd63d35d16f7"),
                            Name = "soup",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("a981c7e4-4fca-4669-b17a-88104112f867"),
                            Name = "salad",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("1917128f-c738-40e1-a266-f14bf344d056"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("10e55b57-03d0-46e1-8a98-95f53b05a9d3")
                        },
                        new
                        {
                            Id = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("e7179810-684f-4733-baa0-d28f8ca158e0"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("e62abfaf-8df5-47e5-a894-6fa4054723ab"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("9aec4f2e-76bf-42cb-8b11-4f26271ae584"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("665c7330-769d-430f-80a0-61b491dd51d1"),
                            Name = "donut",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("f0b39f95-84dc-4974-88cd-e5900b0cd1e3"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("974e6f27-99a5-44d0-b492-9a30bd39b136"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("73bd7660-617a-4434-b887-9a94cac462b1"),
                            Name = "cake",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("370b23dd-9e99-44c7-845f-9d4db08b10a3"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("3ebafe7e-c9d3-41b2-936d-469249376c05"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("4f55e729-1a62-4fa2-ae88-b8ef6cb93069"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("899337b7-4297-47a4-b0dc-c6533eee826d"),
                            Name = "tea",
                            SuperCategoryId = new Guid("9a31db8f-1f5a-4254-9475-ed9172384f34")
                        },
                        new
                        {
                            Id = new Guid("0467ee52-28e4-4040-8cb8-546079c1f33e"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("7c1b3163-0882-4906-9f29-b25c5e95be5d"),
                            Name = "bar",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("370c4141-f69b-442d-b241-b310e160b52b"),
                            Name = "pub",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("43f13145-8b6c-42ae-8392-69b8b71f5e39"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("67501f57-c9b7-4f76-aa2c-90afee0b477f"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        },
                        new
                        {
                            Id = new Guid("5ad048e0-d065-49fa-ba39-8dd6ca255cac"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("c7e2ac70-2dcb-47c2-89e0-5e6a5b0953dd")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("896fda87-b673-490b-af30-ea01a4e6f3a4"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("8205e02f-41d5-42ce-8409-3e21cda1a4c2"),
                            Name = "free",
                            SuperConditionId = new Guid("896fda87-b673-490b-af30-ea01a4e6f3a4")
                        },
                        new
                        {
                            Id = new Guid("b0cce8c6-96f4-403f-b30e-f49276cd5e23"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("896fda87-b673-490b-af30-ea01a4e6f3a4")
                        },
                        new
                        {
                            Id = new Guid("f178f4ec-5625-4015-be1d-887107e2b59c"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("2783f6c2-5471-4dfd-b50b-5f2d876ae645"),
                            Name = "yes",
                            SuperConditionId = new Guid("f178f4ec-5625-4015-be1d-887107e2b59c")
                        },
                        new
                        {
                            Id = new Guid("85224a5e-5bb6-449e-9132-1943ea7fe43f"),
                            Name = "limited",
                            SuperConditionId = new Guid("f178f4ec-5625-4015-be1d-887107e2b59c")
                        },
                        new
                        {
                            Id = new Guid("534f8f6a-f464-4afb-acfa-16d434f2fc58"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("192ffe56-c449-4a63-bbf5-43ee97b1d31b"),
                            Name = "yes",
                            SuperConditionId = new Guid("534f8f6a-f464-4afb-acfa-16d434f2fc58")
                        },
                        new
                        {
                            Id = new Guid("1dc9e872-e0bf-4c90-b05e-f66953426d2a"),
                            Name = "leashed",
                            SuperConditionId = new Guid("534f8f6a-f464-4afb-acfa-16d434f2fc58")
                        },
                        new
                        {
                            Id = new Guid("b290c3ce-09d4-4017-b3c5-7d9f9d67416e"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("ec173ad8-b781-4ab3-a75e-a379e605cf84"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("ce532aab-4e4c-4b4a-9ebf-089835c5c0b4"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("ec173ad8-b781-4ab3-a75e-a379e605cf84")
                        },
                        new
                        {
                            Id = new Guid("a6ba940d-6ee8-4f01-9709-c6aeae9b4b5b"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("ec173ad8-b781-4ab3-a75e-a379e605cf84")
                        },
                        new
                        {
                            Id = new Guid("a37a0de3-b5c6-43b9-892e-3cb5dfc2da84"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("d600fd2f-b6fc-4727-8c0d-4e157b994042"),
                            Name = "customers",
                            SuperConditionId = new Guid("a37a0de3-b5c6-43b9-892e-3cb5dfc2da84")
                        },
                        new
                        {
                            Id = new Guid("1b16a934-5c58-43ec-b7f4-e428c6470aae"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("379c243d-6ba0-490d-9b29-bd5ff48b59dc"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("96661011-8574-4f45-94f5-f8cd8db06a8f"),
                            Name = "no",
                            SuperConditionId = new Guid("379c243d-6ba0-490d-9b29-bd5ff48b59dc")
                        },
                        new
                        {
                            Id = new Guid("c0c22b29-6ab3-43bc-a377-1bb330b3cddf"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("379c243d-6ba0-490d-9b29-bd5ff48b59dc")
                        },
                        new
                        {
                            Id = new Guid("bec4d8c7-64fa-4d8d-9fc5-870c80e2992d"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("5240d496-3ed0-41e5-ab61-bee0a6417913"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("9e979cba-5788-45d5-bf78-25d29f3333bc"),
                            Name = "only",
                            SuperConditionId = new Guid("5240d496-3ed0-41e5-ab61-bee0a6417913")
                        },
                        new
                        {
                            Id = new Guid("24b84cc1-4ab0-4812-bc78-9e298284b1ce"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("cabeebe7-b836-4979-8023-0b755374a8a5"),
                            Name = "only",
                            SuperConditionId = new Guid("24b84cc1-4ab0-4812-bc78-9e298284b1ce")
                        },
                        new
                        {
                            Id = new Guid("bdd0e2ad-d383-4f54-a6f1-08a4d7dea32e"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("91b23d43-09be-42df-8c5e-c32a93b5347a"),
                            Name = "only",
                            SuperConditionId = new Guid("bdd0e2ad-d383-4f54-a6f1-08a4d7dea32e")
                        },
                        new
                        {
                            Id = new Guid("c8d140b4-e65f-40e9-86b3-a133078c0659"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("a300ae22-19ce-4642-b514-92f3bac1af1b"),
                            Name = "only",
                            SuperConditionId = new Guid("c8d140b4-e65f-40e9-86b3-a133078c0659")
                        },
                        new
                        {
                            Id = new Guid("7d336772-6373-4cb7-9168-04f1a4b2ccd6"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("b4bf2fbc-4247-4649-9f2a-07c31e92d872"),
                            Name = "only",
                            SuperConditionId = new Guid("7d336772-6373-4cb7-9168-04f1a4b2ccd6")
                        },
                        new
                        {
                            Id = new Guid("5777c98b-9523-4e22-8c07-5a5da0670490"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("c9f273be-b47b-4f3e-9b1b-ba0542ca3c82"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("d3e01f75-e3de-45b2-8915-7bb242e9ed3c"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("e0249000-adc3-4478-a84c-05ed32ba41c6"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
