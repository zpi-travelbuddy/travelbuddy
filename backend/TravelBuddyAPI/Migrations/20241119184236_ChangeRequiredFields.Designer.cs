// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241119184236_ChangeRequiredFields")]
    partial class ChangeRequiredFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);

                    b.HasData(
                        new
                        {
                            PlaceCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab"),
                            ProviderPlaceId = new Guid("ca730bb3-ed49-4089-9173-89e888ee142e")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("acd429d1-2735-45bc-9242-49a09ba19ad3"),
                            ProviderPlaceId = new Guid("ca730bb3-ed49-4089-9173-89e888ee142e")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22"),
                            ProviderPlaceId = new Guid("ca730bb3-ed49-4089-9173-89e888ee142e")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("60181110-8590-47ca-93de-87cfb0e7d9cf"),
                            ProviderPlaceId = new Guid("ca730bb3-ed49-4089-9173-89e888ee142e")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab"),
                            ProviderPlaceId = new Guid("aa090cd8-6bac-4bfe-a363-7e4d5c760f3f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c"),
                            ProviderPlaceId = new Guid("aa090cd8-6bac-4bfe-a363-7e4d5c760f3f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22"),
                            ProviderPlaceId = new Guid("aa090cd8-6bac-4bfe-a363-7e4d5c760f3f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab"),
                            ProviderPlaceId = new Guid("5cdadfcb-c0ad-484f-8691-9dfcd1b16f7a")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c"),
                            ProviderPlaceId = new Guid("5cdadfcb-c0ad-484f-8691-9dfcd1b16f7a")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22"),
                            ProviderPlaceId = new Guid("5cdadfcb-c0ad-484f-8691-9dfcd1b16f7a")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab"),
                            ProviderPlaceId = new Guid("82683e34-046a-4820-a729-94496bbf0db5")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c"),
                            ProviderPlaceId = new Guid("82683e34-046a-4820-a729-94496bbf0db5")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22"),
                            ProviderPlaceId = new Guid("82683e34-046a-4820-a729-94496bbf0db5")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab"),
                            ProviderPlaceId = new Guid("84a7f948-c61c-44e8-8433-c261e2228b1f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c"),
                            ProviderPlaceId = new Guid("84a7f948-c61c-44e8-8433-c261e2228b1f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22"),
                            ProviderPlaceId = new Guid("84a7f948-c61c-44e8-8433-c261e2228b1f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce"),
                            ProviderPlaceId = new Guid("4e13a368-da09-4c09-a15d-d04b1d3c7187")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67"),
                            ProviderPlaceId = new Guid("4e13a368-da09-4c09-a15d-d04b1d3c7187")
                        });
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6a81e7c-d360-4a3a-80b6-9f46c129ab14"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("daa3ceff-177a-47cc-8af1-4b103eac66c9"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("06420f8e-2e7e-4b09-818c-a6a2921f3403"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("daa3ceff-177a-47cc-8af1-4b103eac66c9")
                        },
                        new
                        {
                            Id = new Guid("51b96b42-34ce-4c77-9b2e-05bd14afb9e0"),
                            Name = "art",
                            SuperCategoryId = new Guid("daa3ceff-177a-47cc-8af1-4b103eac66c9")
                        },
                        new
                        {
                            Id = new Guid("a187c81c-52a6-4946-b777-815f03eda525"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("ce69dd1c-5750-41c8-b924-357ec4398ada"),
                            Name = "culture",
                            SuperCategoryId = new Guid("a187c81c-52a6-4946-b777-815f03eda525")
                        },
                        new
                        {
                            Id = new Guid("e6117c3f-4b47-43f9-951b-41623a2b064c"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("ce69dd1c-5750-41c8-b924-357ec4398ada")
                        },
                        new
                        {
                            Id = new Guid("876f470a-0b07-4dd3-a746-b5d6d3a55777"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("ce69dd1c-5750-41c8-b924-357ec4398ada")
                        },
                        new
                        {
                            Id = new Guid("6abee01d-749f-4d8b-8500-1729c250015b"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("ce69dd1c-5750-41c8-b924-357ec4398ada")
                        },
                        new
                        {
                            Id = new Guid("cba641d1-0907-40cc-b65c-06bd0576d88c"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("a187c81c-52a6-4946-b777-815f03eda525")
                        },
                        new
                        {
                            Id = new Guid("d4746dfb-ba14-4e83-b80e-3ffa403c7578"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("a187c81c-52a6-4946-b777-815f03eda525")
                        },
                        new
                        {
                            Id = new Guid("363cbff6-68b4-4564-941a-ae52e5287368"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("a187c81c-52a6-4946-b777-815f03eda525")
                        },
                        new
                        {
                            Id = new Guid("71f9ba76-b5d0-4423-9bcb-91467e79de69"),
                            Name = "museum",
                            SuperCategoryId = new Guid("a187c81c-52a6-4946-b777-815f03eda525")
                        },
                        new
                        {
                            Id = new Guid("fc4c37b7-2c8c-4837-b39c-4a8d70e802c2"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("74856229-2665-4329-8ebc-5b9c66974815"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("fc4c37b7-2c8c-4837-b39c-4a8d70e802c2")
                        },
                        new
                        {
                            Id = new Guid("6d2a6b57-48a9-4aed-af20-ae17faa0013b"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("b580a409-9c40-4ab4-9a4d-0f39e091a39d"),
                            Name = "park",
                            SuperCategoryId = new Guid("6d2a6b57-48a9-4aed-af20-ae17faa0013b")
                        },
                        new
                        {
                            Id = new Guid("8e3dd8e9-dddd-401c-8964-95d230797bda"),
                            Name = "garden",
                            SuperCategoryId = new Guid("b580a409-9c40-4ab4-9a4d-0f39e091a39d")
                        },
                        new
                        {
                            Id = new Guid("12cab8c3-11ea-447a-b168-f0f0f9384584"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("b580a409-9c40-4ab4-9a4d-0f39e091a39d")
                        },
                        new
                        {
                            Id = new Guid("0789f9b3-9128-4993-9344-92854163c40e"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("7ec8d765-84dc-462c-b796-3da21dd2ea85"),
                            Name = "forest",
                            SuperCategoryId = new Guid("0789f9b3-9128-4993-9344-92854163c40e")
                        },
                        new
                        {
                            Id = new Guid("552ce0d7-b2e7-45ed-8703-3f7b04f6f70e"),
                            Name = "water",
                            SuperCategoryId = new Guid("0789f9b3-9128-4993-9344-92854163c40e")
                        },
                        new
                        {
                            Id = new Guid("e0abb266-8330-46b1-bf99-5cf50b2b00a6"),
                            Name = "spring",
                            SuperCategoryId = new Guid("552ce0d7-b2e7-45ed-8703-3f7b04f6f70e")
                        },
                        new
                        {
                            Id = new Guid("613deee1-1e52-48a9-91f0-5efc3e63decb"),
                            Name = "reef",
                            SuperCategoryId = new Guid("552ce0d7-b2e7-45ed-8703-3f7b04f6f70e")
                        },
                        new
                        {
                            Id = new Guid("23bc663f-63ea-406b-88b1-86aefdd026b4"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("552ce0d7-b2e7-45ed-8703-3f7b04f6f70e")
                        },
                        new
                        {
                            Id = new Guid("2feca23f-8e4e-4c52-bafd-cb521b650ba6"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("552ce0d7-b2e7-45ed-8703-3f7b04f6f70e")
                        },
                        new
                        {
                            Id = new Guid("7e76c7de-7049-40d1-95cb-e6195cd78079"),
                            Name = "sea",
                            SuperCategoryId = new Guid("552ce0d7-b2e7-45ed-8703-3f7b04f6f70e")
                        },
                        new
                        {
                            Id = new Guid("7ad84070-41a1-4897-b7d6-fa9e4f60f3de"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("0789f9b3-9128-4993-9344-92854163c40e")
                        },
                        new
                        {
                            Id = new Guid("e8af69c8-b38a-4567-b242-2d720a54e20e"),
                            Name = "peak",
                            SuperCategoryId = new Guid("7ad84070-41a1-4897-b7d6-fa9e4f60f3de")
                        },
                        new
                        {
                            Id = new Guid("09eee82e-3c09-4c0a-905a-90cb9b01391b"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("7ad84070-41a1-4897-b7d6-fa9e4f60f3de")
                        },
                        new
                        {
                            Id = new Guid("2563b037-01d0-4edc-87ce-6a43d5d6a7e7"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("7ad84070-41a1-4897-b7d6-fa9e4f60f3de")
                        },
                        new
                        {
                            Id = new Guid("7ed68025-5c5e-4e1e-a27d-4443773a18c6"),
                            Name = "rock",
                            SuperCategoryId = new Guid("7ad84070-41a1-4897-b7d6-fa9e4f60f3de")
                        },
                        new
                        {
                            Id = new Guid("4c4af931-e9bc-4a1b-ba2e-69bb138d66ce"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("7ad84070-41a1-4897-b7d6-fa9e4f60f3de")
                        },
                        new
                        {
                            Id = new Guid("b4b22662-74a7-4b20-b0eb-365129ada511"),
                            Name = "sand",
                            SuperCategoryId = new Guid("0789f9b3-9128-4993-9344-92854163c40e")
                        },
                        new
                        {
                            Id = new Guid("eccb7d1b-c510-4ba9-9993-936734a4b65b"),
                            Name = "dune",
                            SuperCategoryId = new Guid("b4b22662-74a7-4b20-b0eb-365129ada511")
                        },
                        new
                        {
                            Id = new Guid("5cc9ccbb-787b-471d-833d-a0ac23c14b8e"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("acd429d1-2735-45bc-9242-49a09ba19ad3"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22")
                        },
                        new
                        {
                            Id = new Guid("8ae41d5f-c7ff-4c78-bdc6-d40d38018f22"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("acd429d1-2735-45bc-9242-49a09ba19ad3")
                        },
                        new
                        {
                            Id = new Guid("84e7a77e-1f0d-43d1-91c5-585aade68f56"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("acd429d1-2735-45bc-9242-49a09ba19ad3")
                        },
                        new
                        {
                            Id = new Guid("18ff8d74-5aed-4cdc-a7a4-ab429648288b"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("acd429d1-2735-45bc-9242-49a09ba19ad3")
                        },
                        new
                        {
                            Id = new Guid("a7c60674-82db-48ee-8781-0aaa4067c540"),
                            Name = "clock",
                            SuperCategoryId = new Guid("acd429d1-2735-45bc-9242-49a09ba19ad3")
                        },
                        new
                        {
                            Id = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab"),
                            Name = "sights",
                            SuperCategoryId = new Guid("959b3cce-93ce-45e0-90fb-85e041625b22")
                        },
                        new
                        {
                            Id = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("823b99e4-96f0-427b-8dfb-39fb228db8c2"),
                            Name = "church",
                            SuperCategoryId = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942")
                        },
                        new
                        {
                            Id = new Guid("35048098-b9b7-4815-a5fb-15e3df220bf5"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942")
                        },
                        new
                        {
                            Id = new Guid("edebeef4-d0b0-439d-b04c-df9224903c5d"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942")
                        },
                        new
                        {
                            Id = new Guid("84786c4b-bb6a-4500-8c3d-806a737c3208"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942")
                        },
                        new
                        {
                            Id = new Guid("13a39a4e-2ea9-4546-995d-214eb9800186"),
                            Name = "temple",
                            SuperCategoryId = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942")
                        },
                        new
                        {
                            Id = new Guid("90009a3f-4c2f-4f90-99a6-fd97b4b50764"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942")
                        },
                        new
                        {
                            Id = new Guid("ab03490c-0e99-46dd-9ecc-be661f80c9bc"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("8d9b95b5-d2a7-4e66-bca1-ea71d1139942")
                        },
                        new
                        {
                            Id = new Guid("bd208401-681f-4a47-b394-a781eaf91e87"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("a0e1f6ec-5f0d-4324-bb3c-72b57d522876"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("db541c56-f4b2-43cc-8e1e-0e1f8980fa1e"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("722406a0-27be-44c0-ad73-bced422d2daa"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("0d0e2c46-9fa3-4e3a-b07f-7b6f25c7786f"),
                            Name = "tower",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("4842ef3b-6614-416d-a6b5-be1b6c7d3f50"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("96348313-e435-4ae9-9dfb-a066308d016f"),
                            Name = "fort",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("39915d82-104e-4a33-a130-62e9922e8127"),
                            Name = "castle",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("60181110-8590-47ca-93de-87cfb0e7d9cf"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("e5b08dd8-25c6-4b4d-8f69-4265ff8a2241"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("33869efb-3fc5-42bc-b342-549303dfb689"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("6f9b676f-47d8-4b9c-9908-04a08f2afb7a"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("a6a8acf2-281c-4d04-ab8f-6318545c70ab")
                        },
                        new
                        {
                            Id = new Guid("57aba794-f801-4ab5-b4f6-9b95a746f8f3"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("f8611f7e-b37d-4006-acb1-f72d9374f15f"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("13aa4762-b2e8-4f54-846f-24985e7da0b3"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("83ad9f02-8b8b-410d-a78f-6d9dc91f67b6"),
                            Name = "ship",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("cdbde128-b2e3-45fe-8282-479660f0ffad"),
                            Name = "tank",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("a304c5bd-439b-40bb-9bef-20b9edced420"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("1415a474-b2e2-42ec-9635-ff735c6099aa"),
                            Name = "monument",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("7a4ed036-c382-44a7-bd38-79ad59bf9995"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("dd642cd8-47b6-48ae-b452-6c8ca8e9b4a5"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("8dfe6a43-9640-44fe-a497-d195b6f908eb"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("98b5ab11-70f1-4268-b3d7-22d19dddb18d"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("ca5ff4c1-b802-46f9-938c-b5900781b51c")
                        },
                        new
                        {
                            Id = new Guid("e20fa339-f829-4a3a-a0c6-b93c31eeeac7"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("e20fa339-f829-4a3a-a0c6-b93c31eeeac7")
                        },
                        new
                        {
                            Id = new Guid("b23a5bab-8c23-46cb-89a8-fffbcf95def4"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("3d93bc44-975f-4d26-8851-bf3f0502697b"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("3e958eb4-ef0c-4fad-86dc-8a16a99d98f3"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("2b9d6be0-bd9a-4225-a8ec-8ba52faea4b6"),
                            Name = "islam",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("6f19f9e6-9ba3-4cc4-ace8-76899d2a7b7b"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("5e174085-60a6-4178-9096-ccafaf01f964"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("fea3d392-7441-4041-addf-65ed5a69048d"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("517fef41-3524-4768-aa50-c19ca7765c2e"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("5776fb52-4cc0-4f22-8249-0e6bd3e0d841")
                        },
                        new
                        {
                            Id = new Guid("ccc222d8-07a7-4e3d-a20c-f61846dfc6bd"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("a75a7dcb-f8c6-40b3-80ce-c6355ff45b5a"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("ccc222d8-07a7-4e3d-a20c-f61846dfc6bd")
                        },
                        new
                        {
                            Id = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("3154c8a3-d141-42f3-85f3-93adaafaaff5"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("94f311b2-c722-4bb1-aeaa-a3c9093dd461"),
                            Name = "burger",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("645b50c9-0ae8-4bf7-8945-5a3be83987cd"),
                            Name = "regional",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("e7aa451e-fac6-4d68-8698-2ca6094b1cb3"),
                            Name = "italian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("0a3a0e12-861a-4783-84e6-c70440eb6f8d"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("6d0980e6-4e55-4513-bb0e-64301cc3e489"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("2748485a-ff8f-446b-bfd0-735e6292ef56"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("271937d3-0210-45ec-bc00-d5cc7facdf63"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("1c6cd8c3-b4e3-4440-b75f-286c7d6dc9dd"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("9ef8cd56-41ff-4394-973b-8ebd5a3b5969"),
                            Name = "american",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("53b7a4cb-4f87-460d-b9f9-30721b3cb0df"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("568b77d6-721f-4560-a879-fd5fc7b0e346"),
                            Name = "indian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("4e6fdf4a-3d79-49df-8b02-c99194b88817"),
                            Name = "asian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("b928ba1b-d802-4f9e-8163-1d3d70c9bab3"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("b188811b-fc11-4f35-817e-410224966b12"),
                            Name = "french",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("19d69886-5a91-48a8-b5a8-f680f8681077"),
                            Name = "german",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("9c7c7a67-ae6d-4ba7-ba70-5725eeca07d3"),
                            Name = "thai",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("b6b552cf-9587-46b1-a57c-2e842bfa9f2e"),
                            Name = "greek",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("d274a67d-336c-45b1-b4e0-73da0803d227"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("7bfe4741-edce-4762-8985-b2e700eb1726"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("45b45f14-0799-4ce8-a137-2ba408108455"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("013a2825-9f01-4760-a7a7-fc4d14d3850b"),
                            Name = "international",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("5ad313b1-d0ea-4fa3-8ae3-eff538e39728"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("a6698a84-1f02-4c42-8e4d-e8ab533fafe0"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("3bb754c2-141c-461d-9e33-6e5efbad0eb5"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("31313e82-a835-44cc-80f8-f23a46fbe436"),
                            Name = "korean",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("446b0f3e-29ed-44fb-8195-3461326f3a96"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("159b9b5e-250f-4096-857d-53b923c31afb"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("5f7c22d5-e3d7-43eb-a302-79425e821b77"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("a9d829c5-2627-4c77-a468-935a8eb2315a"),
                            Name = "fish",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("50b27744-7121-4e56-8eed-dceccfc1979a"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("3c4cce2b-8cc5-4457-b875-8cb01627e22e"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("6ded772e-0631-493b-8bec-1fdbc36bcfae"),
                            Name = "friture",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("760728e0-dbb5-444c-b425-c57738220572"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("274ce82f-f222-49c4-8aaf-d499b848eab9"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("5a143e7c-659f-4840-bfb2-e25913b3ecbe"),
                            Name = "wings",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("468d2c48-3389-4511-9b47-221cd1ec055c"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("2c2b651f-a3b0-493b-8643-7cc65f2eb999"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("d465dd37-b50f-4294-bddc-c37536fcfa36"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("86937121-8cf2-413d-9651-74793b9637e5"),
                            Name = "arab",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("963e1214-30b5-4fe0-b208-c8cffdb60631"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("d9b9723d-06d5-4b3a-b85c-155e8592bfeb"),
                            Name = "russian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("f002f885-8838-4d7c-8ea5-03c554421fa5"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("5cb566db-7045-46ac-9aaa-7e8aaff191a0"),
                            Name = "african",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("e90b7771-3b1e-4f64-af11-0faac275debe"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("b58d7963-dbef-48d6-977b-78bb917ed05e"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("d7d984bc-2960-4c73-9c3d-e14c1e1c49bc"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("6b53f39a-dbb1-4691-a34f-d6f4c9c8387e"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("6c14a33b-b50e-44ad-bad5-e81e8a6220c9"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("bf334930-638f-4988-8590-9aba44533ea2"),
                            Name = "curry",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("268f25d7-7473-434f-8899-3715b5891653"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("69b92d0a-ea7e-4742-a71c-5c73a34148aa"),
                            Name = "persian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("dc76428b-2a2b-4970-a29f-dad6956460b9"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("19c1b727-d694-4249-9fc3-eb87fc5af093"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("c32ca54a-0919-4d26-af6b-8c19724d9402"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("018f9dd1-edda-4cd8-bb46-bd00f87a8e96"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("22594842-4184-4cac-984b-69968644456e"),
                            Name = "pita",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("05f80f83-1168-43cd-8ee3-074375001efa"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("75f15c3d-4ec2-45ef-b249-974800633ac6"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("32ad21a5-a2f1-4522-94da-f5b14a29073d"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("25caa567-584b-4b47-ad95-7ff7d2237584"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("16138026-f801-46ac-8931-eb0c35c39cf6"),
                            Name = "irish",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("22af9e75-db53-41ca-b2e4-99d576f2e7b8"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("0d1995d5-4f5f-4fb5-b6d9-5eeca2194019"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("a2f1d4b4-63c6-429e-b1a2-8b9994399565"),
                            Name = "danish",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("236102cd-77d6-41e5-80c9-1904a05b5a13"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("828c02e3-eab1-4cfc-a65b-c9b13701caa6"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("986edc7d-e2dc-4d07-a262-1ed3dd93da0d"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("58faa8ea-f88c-42d9-a458-00a0ae0c38a0"),
                            Name = "western",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("46624022-60be-498f-8bab-fc297ab42196"),
                            Name = "european",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("a8edc9dc-b352-4479-872e-8ae6f15f2dbc"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("6cea8284-d1a3-41ad-b01e-9f954cac04e5"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("0dee3ea1-3a21-4a0b-8501-9de4dfd001ec"),
                            Name = "soup",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("cda3a7ac-d48a-45ae-93aa-cdd394082418"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("dfb735b7-b09d-4d02-8d21-811e3460db44"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("5e563109-0dd1-4b60-832f-fd5bcbd7a002"),
                            Name = "czech",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("6344d487-77d0-4ab4-a8d1-a6b764188c03"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("ee633848-6cd8-4295-ac5d-3649f240c954"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("2fab3743-982d-4c4d-ab54-5aaa86733f64"),
                            Name = "malay",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("fabcaf57-d87c-4a70-b85a-33b3bd3d5c7a"),
                            Name = "chili",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("d95ebe55-6407-49e4-81e5-0b02270a4c80"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("5ebec78e-2baa-40a4-8596-47c31b48f1ce"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("384860fd-e710-41b8-82d8-af5200554dc5"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("e6a814e3-7a00-4607-a877-4e0da36cd4bf"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("2e82b9af-736a-404c-a48e-f50daa9c7dce")
                        },
                        new
                        {
                            Id = new Guid("28d5b991-73ad-447a-8826-7378832e5236"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("59e2cb30-0ef5-4354-a868-63d622bae041"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("e5f5df25-c64d-4d11-b06f-bfed37235754"),
                            Name = "burger",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("6a5ac8ab-ef60-477d-bc7a-93b026aac2d5"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("969a4f41-39a6-414f-bf4a-e4fdbe46851e"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("515f3aff-41b8-4162-96c7-6e3e4ddcaf73"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("c192e66f-7ff7-443b-a14b-9439b3d854a7"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("b23aced2-1d32-4e10-b18e-0f6249f96708"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("cf14b5b6-17c5-466e-94ad-5331fdca0db9"),
                            Name = "wings",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("ef0e8f16-58b7-429b-95af-07733f2386e1"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("3bf5c4e1-6e0d-4ca5-aff2-6a8fc45f9b7f"),
                            Name = "pita",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("66d193b7-298b-4ab2-a6b0-1660189a79ed"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("ad522001-3091-449c-be67-b5c36a585c80"),
                            Name = "soup",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("5c8d619d-5b79-4c57-9516-94c08cbb8438"),
                            Name = "salad",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("b873c487-8827-4857-abb5-9eb680b5f0ea"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("28d5b991-73ad-447a-8826-7378832e5236")
                        },
                        new
                        {
                            Id = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("6c68704a-ce97-48a1-b8a0-8e58daae7ff2"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("a71392e2-d172-4733-b2b9-0941f43445a0"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("51de9c3b-0741-49f6-99f9-aabf8f9d966e"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("6194ae5f-71b0-4c9e-8e87-885139e47149"),
                            Name = "donut",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("b6123e06-c37f-4da9-87e7-3cd09a6f5e7c"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("41e6630a-bc9e-46fa-9959-e0bc821638f8"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("2a9bed78-ccc7-427c-893a-b55dae165090"),
                            Name = "cake",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("d6466a96-9b0c-4eb8-8280-e69268a5e032"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("a9a276fa-28d9-4cc2-80fc-c84345702fd1"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("23aab49f-6fba-4726-b28c-d418c5a47bfc"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("ac7cd707-fe33-4b82-a540-56d7db988ad5"),
                            Name = "tea",
                            SuperCategoryId = new Guid("f19fb138-c3d3-4c13-a33a-a7d1bbdf22ef")
                        },
                        new
                        {
                            Id = new Guid("1c2fbdbf-f730-450c-b25c-9dc716b7a45b"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("3d052a8d-7e73-48af-9323-f4f096adfd1c"),
                            Name = "bar",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("8103820e-0e91-493c-a0c6-be673c7e7fe8"),
                            Name = "pub",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("63db8c6f-9b8e-4a6e-bfa9-ea9313ba10a6"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("7f81d157-84fa-4e1d-bbe0-ac00ed3ce5c8"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        },
                        new
                        {
                            Id = new Guid("8d87784d-0219-4054-9e56-85207fce1fde"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("c02d3369-7e80-477f-9f78-3ff938e90d67")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ba2b4316-94c8-4c34-9cc7-c024e6a70cc4"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("aa60e7a5-ed28-4b75-8fc2-97a8996fd81b"),
                            Name = "free",
                            SuperConditionId = new Guid("ba2b4316-94c8-4c34-9cc7-c024e6a70cc4")
                        },
                        new
                        {
                            Id = new Guid("450a21e1-be40-40d8-a155-9bb050beb2ca"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("ba2b4316-94c8-4c34-9cc7-c024e6a70cc4")
                        },
                        new
                        {
                            Id = new Guid("17ed99dd-c1ea-4527-86c5-42c0512e3c80"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("648beda9-9f4e-40f9-9c7f-61bf32ed9a82"),
                            Name = "yes",
                            SuperConditionId = new Guid("17ed99dd-c1ea-4527-86c5-42c0512e3c80")
                        },
                        new
                        {
                            Id = new Guid("6e6dbb45-9e71-4253-a578-b3a96d061316"),
                            Name = "limited",
                            SuperConditionId = new Guid("17ed99dd-c1ea-4527-86c5-42c0512e3c80")
                        },
                        new
                        {
                            Id = new Guid("dd37ea3f-02fd-42e9-b124-8a635ab87528"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("21e6b4ff-1be2-45e1-9873-f40a8a91db2b"),
                            Name = "yes",
                            SuperConditionId = new Guid("dd37ea3f-02fd-42e9-b124-8a635ab87528")
                        },
                        new
                        {
                            Id = new Guid("38c0e921-8163-4d71-aae5-236031cac899"),
                            Name = "leashed",
                            SuperConditionId = new Guid("dd37ea3f-02fd-42e9-b124-8a635ab87528")
                        },
                        new
                        {
                            Id = new Guid("f134e68a-dc4b-4415-9354-21c1c4990d2b"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("afb0fc07-286b-4878-9516-41edf7d90b1b"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("21503305-83bb-4552-b4ca-e0029f8ddd76"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("afb0fc07-286b-4878-9516-41edf7d90b1b")
                        },
                        new
                        {
                            Id = new Guid("845712ba-a88a-4989-a40b-301fae512ab6"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("afb0fc07-286b-4878-9516-41edf7d90b1b")
                        },
                        new
                        {
                            Id = new Guid("fc588292-bf79-4cf7-87f3-a37b25470f61"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("a861d30f-d4d2-4ad3-b902-7557864302f9"),
                            Name = "customers",
                            SuperConditionId = new Guid("fc588292-bf79-4cf7-87f3-a37b25470f61")
                        },
                        new
                        {
                            Id = new Guid("db9be5f2-f3e5-4438-aceb-1b1eaa02f94d"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("eaff08bc-8878-44f7-9f0b-3a6a9a088239"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("b9805432-53d7-4725-9095-0996ea7d8c59"),
                            Name = "no",
                            SuperConditionId = new Guid("eaff08bc-8878-44f7-9f0b-3a6a9a088239")
                        },
                        new
                        {
                            Id = new Guid("260ee7cc-e3e5-47e0-a777-2663e3f9bb2e"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("eaff08bc-8878-44f7-9f0b-3a6a9a088239")
                        },
                        new
                        {
                            Id = new Guid("6ff8b746-a9e6-4ada-b940-94706f5f1b57"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("69641d1f-b6e9-432a-b8bd-a09778261991"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("b39bfb4b-1d39-427a-a43c-05a04a4e7163"),
                            Name = "only",
                            SuperConditionId = new Guid("69641d1f-b6e9-432a-b8bd-a09778261991")
                        },
                        new
                        {
                            Id = new Guid("08fbdb8a-f6b1-4323-82c7-af1c982928ad"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("a2bf258e-0b72-4ce8-8192-209d9c1b9944"),
                            Name = "only",
                            SuperConditionId = new Guid("08fbdb8a-f6b1-4323-82c7-af1c982928ad")
                        },
                        new
                        {
                            Id = new Guid("f3e21044-0c33-4dc3-9ee1-69072416b2f1"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("2530de8b-86ed-4181-a800-c0fe44b4117c"),
                            Name = "only",
                            SuperConditionId = new Guid("f3e21044-0c33-4dc3-9ee1-69072416b2f1")
                        },
                        new
                        {
                            Id = new Guid("9efcb48e-2462-4455-8623-78127faff7b4"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("73542cea-3730-4282-98b8-60be344bcda0"),
                            Name = "only",
                            SuperConditionId = new Guid("9efcb48e-2462-4455-8623-78127faff7b4")
                        },
                        new
                        {
                            Id = new Guid("da7cbc5d-678c-476d-a4f6-c88cdb4749c6"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("ffaaa913-cbce-4898-87f3-50d6b1faa382"),
                            Name = "only",
                            SuperConditionId = new Guid("da7cbc5d-678c-476d-a4f6-c88cdb4749c6")
                        },
                        new
                        {
                            Id = new Guid("48b1bb7b-1e66-40a3-a202-446e2dee10ca"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("e12dff0f-c2f3-4d7f-87f6-f76f96b9771d"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("dbc945ad-950d-4e49-8384-eac52e9f9022"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("ee4b6987-8721-4300-b2c4-40c11f1493f9"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6979489f-20c1-4507-958e-5e09518cec8e"),
                            FromTripPointId = new Guid("d012dffc-b063-472e-9f3b-c97b52a214ae"),
                            Mode = 0,
                            ToTripPointId = new Guid("e95390c4-27e4-4874-a868-0cdf210f0a13"),
                            TransferTime = new TimeSpan(0, 0, 4, 21, 0),
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("54f55648-cf3d-430c-8f5b-882d2903d1f7"),
                            FromTripPointId = new Guid("e95390c4-27e4-4874-a868-0cdf210f0a13"),
                            Mode = 1,
                            ToTripPointId = new Guid("3fdc2ecd-af6b-417c-b2c1-6caecaba728d"),
                            TransferTime = new TimeSpan(0, 0, 0, 55, 0),
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("8d06c9f1-0dfa-4cc2-a0d1-2ed1478b456d"),
                            FromTripPointId = new Guid("3fdc2ecd-af6b-417c-b2c1-6caecaba728d"),
                            ToTripPointId = new Guid("dd651955-e2ac-4b3b-a783-a6af764c3a31"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("2ddfeec2-e0a8-4bab-8002-81989d75893a"),
                            FromTripPointId = new Guid("5d73540b-1ead-424f-b2e0-b81f463a1b7e"),
                            Mode = 2,
                            ToTripPointId = new Guid("0217a31a-8a85-4bf4-b760-4064a0a726f5"),
                            TransferTime = new TimeSpan(0, 0, 3, 13, 0),
                            TripDayId = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409")
                        },
                        new
                        {
                            Id = new Guid("deaeeef0-3763-49df-973e-19c483191140"),
                            FromTripPointId = new Guid("0217a31a-8a85-4bf4-b760-4064a0a726f5"),
                            Mode = 3,
                            ToTripPointId = new Guid("4a9e7960-6819-4455-b809-33b26760c7bc"),
                            TransferTime = new TimeSpan(0, 0, 8, 18, 0),
                            TripDayId = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409")
                        },
                        new
                        {
                            Id = new Guid("38a7f3d4-90f9-4c56-8ecf-595228fb40fe"),
                            FromTripPointId = new Guid("4a9e7960-6819-4455-b809-33b26760c7bc"),
                            Mode = 3,
                            ToTripPointId = new Guid("2bb551ef-4529-407a-94b6-5d85c1e1311d"),
                            TransferTime = new TimeSpan(0, 0, 13, 30, 0),
                            TripDayId = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4ed76fd2-cbcc-4e6b-857d-e0d98c14c4f5"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("18d5d777-9ffe-4453-ba97-1f8fd4566055"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("4ed76fd2-cbcc-4e6b-857d-e0d98c14c4f5")
                        },
                        new
                        {
                            Id = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("4ed76fd2-cbcc-4e6b-857d-e0d98c14c4f5")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b039d988-27d3-4f6a-a116-275f18789f2e"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("ca730bb3-ed49-4089-9173-89e888ee142e"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("d012dffc-b063-472e-9f3b-c97b52a214ae"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("aa090cd8-6bac-4bfe-a363-7e4d5c760f3f"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("e95390c4-27e4-4874-a868-0cdf210f0a13"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("5cdadfcb-c0ad-484f-8691-9dfcd1b16f7a"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("3fdc2ecd-af6b-417c-b2c1-6caecaba728d"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("7d50733b-dcbb-4eda-a286-5764d1902831"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("dd651955-e2ac-4b3b-a783-a6af764c3a31"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("6ecdc831-a2ad-416f-af44-f1ac7016961a"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("7f03960f-5aa8-4c53-b7e4-93e731376400")
                        },
                        new
                        {
                            Id = new Guid("5d73540b-1ead-424f-b2e0-b81f463a1b7e"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("82683e34-046a-4820-a729-94496bbf0db5"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409")
                        },
                        new
                        {
                            Id = new Guid("0217a31a-8a85-4bf4-b760-4064a0a726f5"),
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("84a7f948-c61c-44e8-8433-c261e2228b1f"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409")
                        },
                        new
                        {
                            Id = new Guid("4a9e7960-6819-4455-b809-33b26760c7bc"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("4e13a368-da09-4c09-a15d-d04b1d3c7187"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409")
                        },
                        new
                        {
                            Id = new Guid("2bb551ef-4529-407a-94b6-5d85c1e1311d"),
                            EndTime = new TimeOnly(17, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Parowóz TKi3-120",
                            PlaceId = new Guid("d6f89f49-a10c-42ab-af9a-b75b66b39752"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(16, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("f6c3dc8a-1019-4282-a70d-2b9478be4409")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d50733b-dcbb-4eda-a286-5764d1902831"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.711806m,
                            Longitude = 17.721194m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("6ecdc831-a2ad-416f-af44-f1ac7016961a"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        },
                        new
                        {
                            Id = new Guid("d6f89f49-a10c-42ab-af9a-b75b66b39752"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6514858m,
                            Longitude = 17.810879178559084m,
                            Name = "Parowóz TKi3-120"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18d5d777-9ffe-4453-ba97-1f8fd4566055"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("ca730bb3-ed49-4089-9173-89e888ee142e"),
                            Name = "Kaplica loretańska",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("aa090cd8-6bac-4bfe-a363-7e4d5c760f3f"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("5cdadfcb-c0ad-484f-8691-9dfcd1b16f7a"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("82683e34-046a-4820-a729-94496bbf0db5"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("84a7f948-c61c-44e8-8433-c261e2228b1f"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("4e13a368-da09-4c09-a15d-d04b1d3c7187"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
