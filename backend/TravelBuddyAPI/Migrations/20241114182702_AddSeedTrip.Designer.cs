// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241114182702_AddSeedTrip")]
    partial class AddSeedTrip
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);

                    b.HasData(
                        new
                        {
                            PlaceCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25"),
                            ProviderPlaceId = new Guid("5469905e-502d-4dfd-a8ba-f99f39e54f61")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("018dee89-9ffa-43b8-817f-f1ef17a57241"),
                            ProviderPlaceId = new Guid("5469905e-502d-4dfd-a8ba-f99f39e54f61")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1"),
                            ProviderPlaceId = new Guid("5469905e-502d-4dfd-a8ba-f99f39e54f61")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("dd09a3a2-3e0d-4251-85a8-cc135a025a73"),
                            ProviderPlaceId = new Guid("5469905e-502d-4dfd-a8ba-f99f39e54f61")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25"),
                            ProviderPlaceId = new Guid("b494fd90-7751-4aef-b571-3636ceca9e5b")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc"),
                            ProviderPlaceId = new Guid("b494fd90-7751-4aef-b571-3636ceca9e5b")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1"),
                            ProviderPlaceId = new Guid("b494fd90-7751-4aef-b571-3636ceca9e5b")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25"),
                            ProviderPlaceId = new Guid("15df2ace-1c5f-44c7-bea2-84d9f02f70a6")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc"),
                            ProviderPlaceId = new Guid("15df2ace-1c5f-44c7-bea2-84d9f02f70a6")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1"),
                            ProviderPlaceId = new Guid("15df2ace-1c5f-44c7-bea2-84d9f02f70a6")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25"),
                            ProviderPlaceId = new Guid("9f491e01-ec6d-4985-954a-6f2b7082e870")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc"),
                            ProviderPlaceId = new Guid("9f491e01-ec6d-4985-954a-6f2b7082e870")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1"),
                            ProviderPlaceId = new Guid("9f491e01-ec6d-4985-954a-6f2b7082e870")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25"),
                            ProviderPlaceId = new Guid("85ba2658-f992-4c96-bd3f-7af0ef31d0c2")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc"),
                            ProviderPlaceId = new Guid("85ba2658-f992-4c96-bd3f-7af0ef31d0c2")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1"),
                            ProviderPlaceId = new Guid("85ba2658-f992-4c96-bd3f-7af0ef31d0c2")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a"),
                            ProviderPlaceId = new Guid("ee7f8f42-4212-483e-861b-1e3d78b54d2c")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789"),
                            ProviderPlaceId = new Guid("ee7f8f42-4212-483e-861b-1e3d78b54d2c")
                        });
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9ba2a67e-e155-4440-962f-07c0e9750379"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("c09ae5f4-b696-4ce6-832b-ad531bfc6693"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("8d5af565-6e97-4dc7-88cd-5350a3b09e29"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("c09ae5f4-b696-4ce6-832b-ad531bfc6693")
                        },
                        new
                        {
                            Id = new Guid("39590acc-7645-4639-bf9e-7046a404561a"),
                            Name = "art",
                            SuperCategoryId = new Guid("c09ae5f4-b696-4ce6-832b-ad531bfc6693")
                        },
                        new
                        {
                            Id = new Guid("b081af8c-37a1-4705-b2a6-a362f6066e2b"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("a0f6643b-fd75-41de-a30f-f31dd6d0dee4"),
                            Name = "culture",
                            SuperCategoryId = new Guid("b081af8c-37a1-4705-b2a6-a362f6066e2b")
                        },
                        new
                        {
                            Id = new Guid("dbb13932-3689-4fb0-862e-4618c71229ad"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("a0f6643b-fd75-41de-a30f-f31dd6d0dee4")
                        },
                        new
                        {
                            Id = new Guid("7b9b6b28-8dc3-46ab-af7b-d23c8a76f44a"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("a0f6643b-fd75-41de-a30f-f31dd6d0dee4")
                        },
                        new
                        {
                            Id = new Guid("73f06cb3-5a93-416a-ae6c-3bf5b75149e8"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("a0f6643b-fd75-41de-a30f-f31dd6d0dee4")
                        },
                        new
                        {
                            Id = new Guid("4698e026-ab7f-4722-9916-d8d9d9d04ffd"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("b081af8c-37a1-4705-b2a6-a362f6066e2b")
                        },
                        new
                        {
                            Id = new Guid("5d59ce19-2d0d-4f25-a94c-561ed26603cc"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("b081af8c-37a1-4705-b2a6-a362f6066e2b")
                        },
                        new
                        {
                            Id = new Guid("3e246243-a542-48d9-b20b-50647cbf8cf1"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("b081af8c-37a1-4705-b2a6-a362f6066e2b")
                        },
                        new
                        {
                            Id = new Guid("37f922eb-ed9a-4e8b-a5d4-7f26acca0978"),
                            Name = "museum",
                            SuperCategoryId = new Guid("b081af8c-37a1-4705-b2a6-a362f6066e2b")
                        },
                        new
                        {
                            Id = new Guid("0b1bd68f-8fce-47c4-9871-17d84027784e"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("0c415e0c-1ec8-4a47-843f-2e7504312034"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("0b1bd68f-8fce-47c4-9871-17d84027784e")
                        },
                        new
                        {
                            Id = new Guid("33372f8f-fdbf-4b47-bfd1-0d99cb7ce049"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("e130a3cb-579a-4e53-b7cb-7065d99071d1"),
                            Name = "park",
                            SuperCategoryId = new Guid("33372f8f-fdbf-4b47-bfd1-0d99cb7ce049")
                        },
                        new
                        {
                            Id = new Guid("3d5490bf-bf3d-46cc-ae73-02ac27dc2581"),
                            Name = "garden",
                            SuperCategoryId = new Guid("e130a3cb-579a-4e53-b7cb-7065d99071d1")
                        },
                        new
                        {
                            Id = new Guid("487e9c39-b16b-4503-9278-6c057e1c7f05"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("e130a3cb-579a-4e53-b7cb-7065d99071d1")
                        },
                        new
                        {
                            Id = new Guid("0e16e2f3-d2da-4481-8dda-f24fc13cc209"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("fc2593a2-ad45-437e-8bf3-b63a3aec4801"),
                            Name = "forest",
                            SuperCategoryId = new Guid("0e16e2f3-d2da-4481-8dda-f24fc13cc209")
                        },
                        new
                        {
                            Id = new Guid("9d1e0058-3a7d-4df8-8207-7d41bf4b4114"),
                            Name = "water",
                            SuperCategoryId = new Guid("0e16e2f3-d2da-4481-8dda-f24fc13cc209")
                        },
                        new
                        {
                            Id = new Guid("8f67e8ce-e22b-4fb6-9c67-4a5d2e5f7873"),
                            Name = "spring",
                            SuperCategoryId = new Guid("9d1e0058-3a7d-4df8-8207-7d41bf4b4114")
                        },
                        new
                        {
                            Id = new Guid("649d7d3a-7cc7-4b60-a2cf-817344fd6559"),
                            Name = "reef",
                            SuperCategoryId = new Guid("9d1e0058-3a7d-4df8-8207-7d41bf4b4114")
                        },
                        new
                        {
                            Id = new Guid("9b420c62-f5a8-4e26-ae73-b88716415d17"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("9d1e0058-3a7d-4df8-8207-7d41bf4b4114")
                        },
                        new
                        {
                            Id = new Guid("86a22a7c-e5ba-49f2-b435-950a30834779"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("9d1e0058-3a7d-4df8-8207-7d41bf4b4114")
                        },
                        new
                        {
                            Id = new Guid("f0d8e28a-579b-4e2b-894a-85ee994d03f9"),
                            Name = "sea",
                            SuperCategoryId = new Guid("9d1e0058-3a7d-4df8-8207-7d41bf4b4114")
                        },
                        new
                        {
                            Id = new Guid("f1449bfc-d427-4f76-973a-3a62ab3053b5"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("0e16e2f3-d2da-4481-8dda-f24fc13cc209")
                        },
                        new
                        {
                            Id = new Guid("8b597e37-b024-447e-b6ed-93da33c29222"),
                            Name = "peak",
                            SuperCategoryId = new Guid("f1449bfc-d427-4f76-973a-3a62ab3053b5")
                        },
                        new
                        {
                            Id = new Guid("cb3dddf3-3724-40ef-a9a8-4ee48e33fc5a"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("f1449bfc-d427-4f76-973a-3a62ab3053b5")
                        },
                        new
                        {
                            Id = new Guid("d1a84fe2-389f-4948-8073-35f310128577"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("f1449bfc-d427-4f76-973a-3a62ab3053b5")
                        },
                        new
                        {
                            Id = new Guid("67072846-25d2-4b24-a29d-30d7d4541fa0"),
                            Name = "rock",
                            SuperCategoryId = new Guid("f1449bfc-d427-4f76-973a-3a62ab3053b5")
                        },
                        new
                        {
                            Id = new Guid("3f4d6d85-85e5-49f4-ad8c-e076ec18577f"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("f1449bfc-d427-4f76-973a-3a62ab3053b5")
                        },
                        new
                        {
                            Id = new Guid("9338970b-f83e-42ec-987c-bd8e1d20e74b"),
                            Name = "sand",
                            SuperCategoryId = new Guid("0e16e2f3-d2da-4481-8dda-f24fc13cc209")
                        },
                        new
                        {
                            Id = new Guid("2a43e565-253c-4824-9260-8619c6f5f0dc"),
                            Name = "dune",
                            SuperCategoryId = new Guid("9338970b-f83e-42ec-987c-bd8e1d20e74b")
                        },
                        new
                        {
                            Id = new Guid("0fa73ea3-b5c0-47ac-8a28-f05d1f038c92"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("018dee89-9ffa-43b8-817f-f1ef17a57241"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1")
                        },
                        new
                        {
                            Id = new Guid("f83568e1-b2f6-49d7-989e-41441baea0ff"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("018dee89-9ffa-43b8-817f-f1ef17a57241")
                        },
                        new
                        {
                            Id = new Guid("a2c0d0a9-35e2-4e85-b86f-66871f6f049a"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("018dee89-9ffa-43b8-817f-f1ef17a57241")
                        },
                        new
                        {
                            Id = new Guid("a97f1f2c-604e-4558-ab5a-a005d82786fd"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("018dee89-9ffa-43b8-817f-f1ef17a57241")
                        },
                        new
                        {
                            Id = new Guid("47a98a2a-ef93-4c63-aff1-7cd19f17d9cd"),
                            Name = "clock",
                            SuperCategoryId = new Guid("018dee89-9ffa-43b8-817f-f1ef17a57241")
                        },
                        new
                        {
                            Id = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25"),
                            Name = "sights",
                            SuperCategoryId = new Guid("311e228c-4b0c-4d49-9ebd-81e9317bebe1")
                        },
                        new
                        {
                            Id = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("038e1255-aac4-4ca8-a677-519e063f3481"),
                            Name = "church",
                            SuperCategoryId = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24")
                        },
                        new
                        {
                            Id = new Guid("7167359d-3a60-45fa-a0d0-d68b705ab329"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24")
                        },
                        new
                        {
                            Id = new Guid("7e643dc6-1d42-467f-9007-c2a1639ed561"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24")
                        },
                        new
                        {
                            Id = new Guid("2b27bfba-3bce-4576-990a-ca713f1e4393"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24")
                        },
                        new
                        {
                            Id = new Guid("e48ef637-63bf-4f97-87a2-864dba7e397c"),
                            Name = "temple",
                            SuperCategoryId = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24")
                        },
                        new
                        {
                            Id = new Guid("a6359ee1-7238-4497-8d19-ac04a7f3a2be"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24")
                        },
                        new
                        {
                            Id = new Guid("ea5f9118-c64e-44ab-a5d5-02f87b8b1557"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("e1f5d014-028f-4dd7-a1d5-7570f74b3c24")
                        },
                        new
                        {
                            Id = new Guid("debdd578-20d0-4ab0-8052-270b048420c4"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("a31ababd-8685-4b40-803f-4621812f6d9d"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("0b0d54a4-9ff2-4fb6-9523-857a06d0f6d8"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("67baa73e-a86b-461c-8699-e387086eb05b"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("51582f18-1447-4ca4-b7d8-9586fbc9bfe6"),
                            Name = "tower",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("82a284b2-544f-404f-b025-56bedbf0bcd7"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("0cefb3a5-737f-4076-990a-f6ed389bf57a"),
                            Name = "fort",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("9f0ab29f-8a1b-4395-ab5a-f2dd410b1d1e"),
                            Name = "castle",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("dd09a3a2-3e0d-4251-85a8-cc135a025a73"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("6da1174f-822d-43e8-aee6-1bc5aca2de23"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("d9cb74db-3ed6-4363-8356-7c4c6968c09f"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("e7116946-c929-4e1a-947c-7fd5d162c161"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("436f07fd-6252-4960-a177-4c5bd0327b25")
                        },
                        new
                        {
                            Id = new Guid("d710d942-268e-4a66-b422-5db2b3f80dea"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("96f818a3-d354-44b1-b256-ffdabee97cf9"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("5bb95924-00e4-426c-a2bb-7d97ab8f3634"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("88544206-b408-4c11-ad17-c1210cd0543f"),
                            Name = "ship",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("8b8b279d-3bbd-46be-b2b1-91669ba4e951"),
                            Name = "tank",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("0ed0b3ff-b8dd-4d25-87d3-04b168e4f3fe"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("f2283335-11f8-4d4a-9e51-dcb1d99dd2f3"),
                            Name = "monument",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("a5f01a7b-7cb9-4ded-8b4f-d41bd058cba4"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("4815420d-cbe0-4e4e-a43d-720d45e1c57e"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("d2b0ed58-ec41-4445-baae-fd2101a33583"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("d8e05d62-dbee-4ef0-8109-e3fbd0828be8"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("aa72088a-e92d-46a5-8239-69d8883202cc")
                        },
                        new
                        {
                            Id = new Guid("797f0c66-2093-4b7c-9c72-e65285c6846e"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("797f0c66-2093-4b7c-9c72-e65285c6846e")
                        },
                        new
                        {
                            Id = new Guid("a923b8d0-1de0-48c5-80de-2740afaf9197"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("fae01cbe-be50-46d7-b1f3-0752bb2b5e44"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("1bb8e17c-8411-47e0-9781-9f6c4e91d27a"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("d1205f20-eac4-45d4-a9e1-ca8060f758f0"),
                            Name = "islam",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("ac61501b-7c56-4575-b767-103861bc06f3"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("74708b93-3bb5-4ad1-8fce-b7b4a1766c15"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("36c4ccb8-d75c-46b0-b311-7d1b79ee2b1a"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("491c2f87-faac-42c8-b788-6950f36ad7f4"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("59165e09-6002-4cb1-9294-8735c543cdf8")
                        },
                        new
                        {
                            Id = new Guid("0ffee1c1-eace-4f73-b807-a38b9b66eaef"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("432af4e2-819f-4b4a-99dd-30a670906907"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("0ffee1c1-eace-4f73-b807-a38b9b66eaef")
                        },
                        new
                        {
                            Id = new Guid("12c60407-2635-4738-8925-a8c12455b789"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("0949f41b-7090-4042-ab3b-b30894e9bae2"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("352d497a-e3b0-4571-9ce8-12763fd773aa"),
                            Name = "burger",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("5bf4c54e-5686-4387-9928-47842c12fa19"),
                            Name = "regional",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("b9be8b95-2fa4-4bfb-96be-8dc3538d89d9"),
                            Name = "italian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("44786bfc-e6ae-42c8-896c-38590ad720c3"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("2c982f0c-501d-47c4-8b07-70a4724df883"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("0f37ade1-78d6-4fd4-bc5e-95196d069b09"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("900bff8a-cb5d-4018-ab78-8ad169b8adae"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("857eab02-0b9b-428a-8164-20d41af84b93"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("2ca42807-8f57-4cdb-92f2-f83d301170f9"),
                            Name = "american",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("97134a11-67ad-4ba9-ab8b-66425cfe9f66"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("cdbb233b-d6b1-4cae-a7dd-8b7fb9f912e9"),
                            Name = "indian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("214cec54-e454-452c-8dff-4313eabc6b83"),
                            Name = "asian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("779edadc-67c1-4d6c-b728-8b5923283738"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("4679f070-3f53-4d7f-8f4f-140ed14a031c"),
                            Name = "french",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("2fcd5f59-d400-4848-92ce-167352c8cc03"),
                            Name = "german",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("7872f0cb-21b8-4af5-9726-a6f562544aaf"),
                            Name = "thai",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("774b7ffb-a118-462c-ade7-4e6d5a59d461"),
                            Name = "greek",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("1b53170c-2db1-450b-b83a-82234a46ae14"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("3b160aee-b785-40a6-9ff3-8d9974bf0b52"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("3c67940f-2451-4d27-bcac-1fbbc8a51a5d"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("49246cd6-45d5-4cd6-af01-aabfbe7fac3d"),
                            Name = "international",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("47000372-b37b-42e7-bed0-475ccedabea8"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("c30becff-3943-47a3-bb20-62e7ddb26e3c"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("9b3b3428-c2f5-4130-be81-1ed11e01ebbe"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("07699f5b-5257-4e4b-858d-3fbf0866466b"),
                            Name = "korean",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("9dda0c2e-ba0a-4ac8-8d1a-e4a219eef973"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("6074a824-0e8e-4f5e-af87-ec7b7ed4c7b9"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("382e6493-83ca-4fcc-bc7b-8247dd0692c7"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("f9b6b079-9aeb-4083-bd33-d8cf5e7825a5"),
                            Name = "fish",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("c581ae96-6f51-44aa-b912-5040e2eb2e01"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("a2f2a0e2-191c-4cef-ae7a-9179fcbcc7c8"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("cb9b6e6d-6228-47b2-91ce-dac458d3d512"),
                            Name = "friture",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("fd830672-daf0-4dd5-b0c8-a3a6d81363ff"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("7d8adddd-cd38-4201-a104-6e31fa7bc805"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("21842e5e-b0a0-47e7-ade5-36d61cb6b70c"),
                            Name = "wings",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("0953d533-9b9f-414b-8fe0-b994ab8e9ee6"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("df6730c5-e0b4-4227-8333-71a525fdc6b8"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("0f4090bb-e990-4095-b5fd-09b30edb037f"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("e51a5d41-41c9-44df-9adb-26f6a132edce"),
                            Name = "arab",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("a4a504fa-4ef2-4a2c-ac45-41e75589b2eb"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("445cd1ca-6241-4c8a-9d73-fa4d964430dd"),
                            Name = "russian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("1ea491ad-e9c4-4d92-b44f-e2353d851dc7"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("f0c87bd1-c9f8-4551-8093-fd8a699482dd"),
                            Name = "african",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("b55cc1a5-7caa-4df1-8d65-e3d25a025cc6"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("e0b3c931-40ce-4168-99d6-23b5df6dba7b"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("30fc825e-d5fc-47a6-9cac-77f07b11fb2d"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("7ca4e4ce-58d8-48a6-a13b-85ea042e98a0"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("596a99ed-8829-4d6b-96ae-8eff3ac7f0d1"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("abad3c9f-110a-4bfd-9b57-9af61a62687b"),
                            Name = "curry",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("d3abcb9c-7e1e-4b5b-8fd3-c370074bc232"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("4e7087a8-5659-4a1a-b492-d4d34454986a"),
                            Name = "persian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("5505b0b1-8d49-4495-97a0-a479e06f8ce9"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("f46350d6-7486-4df7-9b79-589094509527"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("ebfd715a-99e5-4d5d-a78f-039a96b7ee01"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("09fa56e3-aa65-4c22-9453-85a2da25eee2"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("7162675e-66c3-421b-80b4-5661dd38c33e"),
                            Name = "pita",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("63c246f4-0e27-4ecc-a60e-595aa4686b72"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("d97a72d5-7278-48a5-931d-c1e757ecfd62"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("aff305bc-e234-4d2e-8353-9caf487440e5"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("18a839cc-b425-4185-9b01-2b795f16ceb0"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("f833f040-12f0-4db2-82bf-cae397486ceb"),
                            Name = "irish",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("429a4d3c-83f6-4d12-92cd-d36523682f90"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("c038cc0b-58f2-4be5-86c5-4841bfa63a16"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("dd96b837-db33-4ab0-9be5-0dc6307ed362"),
                            Name = "danish",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("cdb4ff4e-761c-49fa-9aa1-a0681a72c313"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("12cbb07e-a531-403d-bd42-164b92909a28"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("1019773f-eaab-4254-a677-c8913d961e66"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("201b65e0-a1d6-4872-877d-9d04673dcfbb"),
                            Name = "western",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("af038ed3-deee-4599-9afb-c9d64e3f28a1"),
                            Name = "european",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("b3d5dd14-527c-491f-a4f7-b8aef48db256"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("480c8c80-6008-4181-aeb1-ce5bd21c84b6"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("b6756eaa-b122-4978-88c0-a1e368548681"),
                            Name = "soup",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("a7f951ce-1b97-40cb-b283-143b2a4cf33c"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("0b7da39f-f458-4e6c-957e-a58d35fb852f"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("7b241d8c-90ad-4412-bbbe-db2742138a2c"),
                            Name = "czech",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("4657552b-7a38-4b74-b1c5-9d1f8c4f809c"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("f21e38cb-4599-4b04-9bf9-e240167b5094"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("6c79d731-1184-4fa0-84a0-b429a216d4c0"),
                            Name = "malay",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("7db72163-3e86-444e-a13a-5453a41ac8d6"),
                            Name = "chili",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("5983e7cf-dfc8-4159-ab14-49d2d2d83bf8"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("56c3c665-f96a-4971-8513-1840d3ff1ab7"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("4fcf811a-34b4-4aa0-9f93-f89a3347b9ca"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("cf34ac98-8853-463d-8061-e7a51f6cfd09"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("95d7e8a4-0b5e-49f6-ae93-48df7a57495a")
                        },
                        new
                        {
                            Id = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("01fc14b9-777a-4482-a2ae-084b3a8d5af8"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("1081340a-3d1f-4c0c-b5fe-8c11a5eb0416"),
                            Name = "burger",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("18c4eb88-0ca1-4586-85c4-af4a8ff9186f"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("0d3bc920-7d3d-45d0-88a7-49737d55644a"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("76628963-d714-4d14-8e45-dbf36da139af"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("38d80fcb-d355-4325-aa5e-9b814d6a197e"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("f3357a08-d1c1-4110-bdc3-3203175e06b4"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("a9d25919-7f11-47ae-8da8-3b54634b1539"),
                            Name = "wings",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("1a8a09a5-daba-4adf-9c50-eda64cb87424"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("99e175a4-d4f3-496c-9925-e76b3013949a"),
                            Name = "pita",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("8c25f20a-eac0-45d4-a004-b0bc5de87043"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("382a6ca5-8e55-49f3-9807-ac90cc45806a"),
                            Name = "soup",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("f21239f1-a39b-4f06-b8a1-d3e698a8541a"),
                            Name = "salad",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("bf822350-2fea-439d-8a5b-f76851103ad5"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("2932af34-fb81-4b68-9660-f66ab76b2330")
                        },
                        new
                        {
                            Id = new Guid("473df695-757b-404f-9c23-044eb65dc972"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("dc440959-c96b-4418-9e90-767789dedadf"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("b20071ab-bfb7-4ca0-81f0-1efa8f60ece8"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("1aaa884d-f149-4255-b3ba-00d67dc2837e"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("36ea6041-58a6-430e-8f70-eccf60d5cd46"),
                            Name = "donut",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("db7f791a-c82f-4908-a131-a4b560a5b46d"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("eb7b3420-0090-4ee2-a6ce-dcca7e2e5d05"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("588135e7-6577-4c25-874a-adf00de42894"),
                            Name = "cake",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("a684e3ac-a6a3-4271-b295-59db2115cefb"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("226742b2-487a-4dae-8be3-f0dc238b87f1"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("dbb2b626-8182-49c6-917b-554cd4b27ec9"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("6e1fce17-84d0-465e-8f24-76c18a4bd6f0"),
                            Name = "tea",
                            SuperCategoryId = new Guid("473df695-757b-404f-9c23-044eb65dc972")
                        },
                        new
                        {
                            Id = new Guid("8524af0a-41e1-4a5b-ae2c-f39bdf737ec8"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("37a34c1d-8c1f-45ed-9a73-353155a0ab71"),
                            Name = "bar",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("f57638c0-37b7-4a48-b45c-fb389355946e"),
                            Name = "pub",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("c5bd442b-07b6-4ce5-aa05-0c92a88b1dd0"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("26322fc7-dc0c-4cf1-bc55-5cf7dd8e99f1"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        },
                        new
                        {
                            Id = new Guid("95fde2ca-2270-455a-b325-cad2412c9108"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("12c60407-2635-4738-8925-a8c12455b789")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bc6dd603-b0de-4061-b228-cdb590d4a8ad"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("a42a43b6-cbf7-45be-91a9-832fb71ae235"),
                            Name = "free",
                            SuperConditionId = new Guid("bc6dd603-b0de-4061-b228-cdb590d4a8ad")
                        },
                        new
                        {
                            Id = new Guid("0f08da51-d23c-445e-8a38-62006aa783bd"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("bc6dd603-b0de-4061-b228-cdb590d4a8ad")
                        },
                        new
                        {
                            Id = new Guid("307b549f-f46d-41d8-ab95-1067931b27a8"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("693158e2-c59d-4652-b744-667e1d9de7e2"),
                            Name = "yes",
                            SuperConditionId = new Guid("307b549f-f46d-41d8-ab95-1067931b27a8")
                        },
                        new
                        {
                            Id = new Guid("cca80b70-9a8f-4d12-be7f-ecec67402180"),
                            Name = "limited",
                            SuperConditionId = new Guid("307b549f-f46d-41d8-ab95-1067931b27a8")
                        },
                        new
                        {
                            Id = new Guid("bf8361c3-1a5e-41e0-9c37-54e60833c34c"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("e6959f87-e784-4067-9573-dafb982c70a7"),
                            Name = "yes",
                            SuperConditionId = new Guid("bf8361c3-1a5e-41e0-9c37-54e60833c34c")
                        },
                        new
                        {
                            Id = new Guid("7b799bc0-341f-4b75-8b41-acb048bc287c"),
                            Name = "leashed",
                            SuperConditionId = new Guid("bf8361c3-1a5e-41e0-9c37-54e60833c34c")
                        },
                        new
                        {
                            Id = new Guid("c8ee6dc1-40df-4bd1-bcd6-4c1d2a9f2650"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("c8f85133-d09d-46cb-bca5-80b92ab4afaf"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("9bf69fa6-e169-4a46-9aef-68a16009c550"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("c8f85133-d09d-46cb-bca5-80b92ab4afaf")
                        },
                        new
                        {
                            Id = new Guid("fc761c8b-c68b-4013-baac-ffeeb3f4202d"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("c8f85133-d09d-46cb-bca5-80b92ab4afaf")
                        },
                        new
                        {
                            Id = new Guid("698f7030-eba2-47b8-9df3-8c5edcd12e75"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("a7d2f247-003c-4908-9f3b-467f916a19d3"),
                            Name = "customers",
                            SuperConditionId = new Guid("698f7030-eba2-47b8-9df3-8c5edcd12e75")
                        },
                        new
                        {
                            Id = new Guid("46e5304e-8fb5-4e12-a80b-cfc2a8095908"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("83933242-0965-4282-92e0-b1af8d0b42ac"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("982f47cb-c6b9-4c6f-9233-ef66a0d20387"),
                            Name = "no",
                            SuperConditionId = new Guid("83933242-0965-4282-92e0-b1af8d0b42ac")
                        },
                        new
                        {
                            Id = new Guid("692383c8-0f7d-438d-849f-05d56ddaac7e"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("83933242-0965-4282-92e0-b1af8d0b42ac")
                        },
                        new
                        {
                            Id = new Guid("c57d10b8-3c1b-4c4a-8959-b3de5250536a"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("a074e9b7-50b3-4e4d-94e5-d282cbef214a"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("45ac9566-ef93-4934-95be-996c0e878d88"),
                            Name = "only",
                            SuperConditionId = new Guid("a074e9b7-50b3-4e4d-94e5-d282cbef214a")
                        },
                        new
                        {
                            Id = new Guid("9eda0d9f-16c3-4055-b5d6-3e64bdefcbdc"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("6a79be12-e838-484c-ac15-fb6524251729"),
                            Name = "only",
                            SuperConditionId = new Guid("9eda0d9f-16c3-4055-b5d6-3e64bdefcbdc")
                        },
                        new
                        {
                            Id = new Guid("a98751b4-45de-4a67-8cb7-8a128a2e7128"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("ba4e62b8-359a-44f7-9653-210eff2572eb"),
                            Name = "only",
                            SuperConditionId = new Guid("a98751b4-45de-4a67-8cb7-8a128a2e7128")
                        },
                        new
                        {
                            Id = new Guid("36bdac81-841e-44f3-afc0-391ecd9d760a"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("a94cc8f4-457c-4dd0-a89f-030ed9c56569"),
                            Name = "only",
                            SuperConditionId = new Guid("36bdac81-841e-44f3-afc0-391ecd9d760a")
                        },
                        new
                        {
                            Id = new Guid("fbe48898-6f03-44ef-8a6d-c6a4c043b5ca"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("5f0a97ee-7623-4366-b128-80478cb9cb46"),
                            Name = "only",
                            SuperConditionId = new Guid("fbe48898-6f03-44ef-8a6d-c6a4c043b5ca")
                        },
                        new
                        {
                            Id = new Guid("fe038124-1701-4021-a1ad-655bbc5b9ff8"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("6d96945e-fde7-40ab-88e0-dd7cb1d72557"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("4205cd45-3ce0-4655-a167-361fb0f7791a"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("6d8e637e-0da7-4a4a-9831-06eda1bfcd97"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e4a3c2c-136c-4866-b277-e05f1f79f526"),
                            FromTripPointId = new Guid("da1fa4b4-cbbc-4668-8fd6-b32d8cf7ce9c"),
                            StartTime = new TimeOnly(10, 20, 0),
                            ToTripPointId = new Guid("f7d6d63b-03fd-4b6c-a065-c71ee861edbc"),
                            TransferTime = new TimeSpan(0, 0, 30, 0, 0),
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("c72c9e82-fc0f-4dc0-84ed-8df6277706f8"),
                            FromTripPointId = new Guid("ce908d22-87de-4f64-b580-9d8c967206d7"),
                            StartTime = new TimeOnly(12, 0, 0),
                            ToTripPointId = new Guid("39438783-2a4d-4d65-91ec-6bf9ab2c6fa1"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("deec4666-8485-457d-869f-b891743eb6a0"),
                            FromTripPointId = new Guid("39438783-2a4d-4d65-91ec-6bf9ab2c6fa1"),
                            StartTime = new TimeOnly(13, 0, 0),
                            ToTripPointId = new Guid("a9e78c7f-ccd7-4808-9a7a-da5c6948c18d"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("6b283630-a1ea-4bda-b2f5-9eaebf987b3f"),
                            FromTripPointId = new Guid("744ddf31-3cd1-4bf7-84b9-d62bac12aeea"),
                            StartTime = new TimeOnly(12, 40, 0),
                            ToTripPointId = new Guid("a72f2977-f7ca-4885-b78d-76b296d20a3d"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("e931738b-5ab1-4af7-979c-92fc3f357e1f")
                        },
                        new
                        {
                            Id = new Guid("eb94e75a-986f-4dc4-8cc9-c49a5978788f"),
                            FromTripPointId = new Guid("a72f2977-f7ca-4885-b78d-76b296d20a3d"),
                            StartTime = new TimeOnly(13, 10, 0),
                            ToTripPointId = new Guid("1a991fa5-432a-441c-a98b-08bdc747ce3f"),
                            TransferTime = new TimeSpan(0, 0, 45, 0, 0),
                            TripDayId = new Guid("e931738b-5ab1-4af7-979c-92fc3f357e1f")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c41e161-13ce-4ee8-bd06-ea09f581590d"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("21885ef2-6353-4fa4-a591-d986291d0735"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("7c41e161-13ce-4ee8-bd06-ea09f581590d")
                        },
                        new
                        {
                            Id = new Guid("e931738b-5ab1-4af7-979c-92fc3f357e1f"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("7c41e161-13ce-4ee8-bd06-ea09f581590d")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("da1fa4b4-cbbc-4668-8fd6-b32d8cf7ce9c"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("5469905e-502d-4dfd-a8ba-f99f39e54f61"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("f7d6d63b-03fd-4b6c-a065-c71ee861edbc"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("b494fd90-7751-4aef-b571-3636ceca9e5b"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("ce908d22-87de-4f64-b580-9d8c967206d7"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("15df2ace-1c5f-44c7-bea2-84d9f02f70a6"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("39438783-2a4d-4d65-91ec-6bf9ab2c6fa1"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("76234061-c265-46a4-b53d-ba1fc5c6c223"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("a9e78c7f-ccd7-4808-9a7a-da5c6948c18d"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("095f008c-627b-44a4-8d9e-5897627d5800"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("cac9c644-c20b-4701-bf71-77fc3a69cff8")
                        },
                        new
                        {
                            Id = new Guid("744ddf31-3cd1-4bf7-84b9-d62bac12aeea"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("9f491e01-ec6d-4985-954a-6f2b7082e870"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("e931738b-5ab1-4af7-979c-92fc3f357e1f")
                        },
                        new
                        {
                            Id = new Guid("a72f2977-f7ca-4885-b78d-76b296d20a3d"),
                            Comment = "Ciekawe skąd ta nazwa ulicy",
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("85ba2658-f992-4c96-bd3f-7af0ef31d0c2"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("e931738b-5ab1-4af7-979c-92fc3f357e1f")
                        },
                        new
                        {
                            Id = new Guid("1a991fa5-432a-441c-a98b-08bdc747ce3f"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("ee7f8f42-4212-483e-861b-1e3d78b54d2c"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("e931738b-5ab1-4af7-979c-92fc3f357e1f")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("76234061-c265-46a4-b53d-ba1fc5c6c223"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.42426m,
                            Longitude = 17.43164m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("095f008c-627b-44a4-8d9e-5897627d5800"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21885ef2-6353-4fa4-a591-d986291d0735"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("5469905e-502d-4dfd-a8ba-f99f39e54f61"),
                            City = "Raszkówek",
                            Country = "Poland",
                            Latitude = 51.73393750m,
                            Longitude = 17.74069633m,
                            Name = "Kaplica loretańska",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("b494fd90-7751-4aef-b571-3636ceca9e5b"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("15df2ace-1c5f-44c7-bea2-84d9f02f70a6"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("9f491e01-ec6d-4985-954a-6f2b7082e870"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("85ba2658-f992-4c96-bd3f-7af0ef31d0c2"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            State = "Greater Poland Voivodeship",
                            Street = "60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("ee7f8f42-4212-483e-861b-1e3d78b54d2c"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
