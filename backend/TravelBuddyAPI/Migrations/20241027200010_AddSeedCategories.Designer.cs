// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241027200010_AddSeedCategories")]
    partial class AddSeedCategories
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94ea9840-42f1-409a-a96a-af1d8e1ea046"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("1f619997-bb26-4d70-b8f4-71c85a59ea84"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("85bce41e-3a0f-4932-a7f3-dd955ac9a546"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("1f619997-bb26-4d70-b8f4-71c85a59ea84")
                        },
                        new
                        {
                            Id = new Guid("83b82d2b-4a74-4290-a125-48331af23def"),
                            Name = "art",
                            SuperCategoryId = new Guid("1f619997-bb26-4d70-b8f4-71c85a59ea84")
                        },
                        new
                        {
                            Id = new Guid("50d525b2-7257-423d-bf17-6f23e30ef505"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be"),
                            Name = "culture",
                            SuperCategoryId = new Guid("50d525b2-7257-423d-bf17-6f23e30ef505")
                        },
                        new
                        {
                            Id = new Guid("07204987-e493-4ca8-a2af-c85577e9d803"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be")
                        },
                        new
                        {
                            Id = new Guid("2c9ab1fe-3219-49f3-9766-98380d533420"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be")
                        },
                        new
                        {
                            Id = new Guid("be1cd74d-e5ad-4217-8746-89a370d35d4d"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be")
                        },
                        new
                        {
                            Id = new Guid("7df35c9b-82e1-4c5f-8a86-73f177baeef7"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be")
                        },
                        new
                        {
                            Id = new Guid("7757d12d-4668-447c-8d98-0f1ea0dfa661"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be")
                        },
                        new
                        {
                            Id = new Guid("3ada3c14-8d6f-4dc7-b300-b6487818411e"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be")
                        },
                        new
                        {
                            Id = new Guid("679d67fa-c576-41a0-9f1e-bb268d2db18a"),
                            Name = "museum",
                            SuperCategoryId = new Guid("fc5e7a94-b28a-4b80-be6e-bb291db2c2be")
                        },
                        new
                        {
                            Id = new Guid("ae943cb5-3eab-437f-95e9-902946e04f86"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("81e2c8be-8ef6-44d3-94ed-fdc603872f9d"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("ae943cb5-3eab-437f-95e9-902946e04f86")
                        },
                        new
                        {
                            Id = new Guid("aff892c9-1f4d-4907-adfc-82d9b586eb9b"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("edbe8bd4-f9d3-4351-9842-9fcdae479af2"),
                            Name = "park",
                            SuperCategoryId = new Guid("aff892c9-1f4d-4907-adfc-82d9b586eb9b")
                        },
                        new
                        {
                            Id = new Guid("9d3a797f-7022-4077-a3dc-1da4bdd1f5ee"),
                            Name = "garden",
                            SuperCategoryId = new Guid("edbe8bd4-f9d3-4351-9842-9fcdae479af2")
                        },
                        new
                        {
                            Id = new Guid("edfe77a9-ffc5-4880-9766-4ab86f198145"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("edbe8bd4-f9d3-4351-9842-9fcdae479af2")
                        },
                        new
                        {
                            Id = new Guid("a677234a-e831-4b48-af4a-9073ff565420"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("e0557d16-35da-4daf-99cc-c05b1181f368"),
                            Name = "forest",
                            SuperCategoryId = new Guid("a677234a-e831-4b48-af4a-9073ff565420")
                        },
                        new
                        {
                            Id = new Guid("73107ab5-d42e-415a-9fa1-0d89b831f8db"),
                            Name = "water",
                            SuperCategoryId = new Guid("a677234a-e831-4b48-af4a-9073ff565420")
                        },
                        new
                        {
                            Id = new Guid("dfc8f262-6555-4bc8-b649-16aaf9b9a0a3"),
                            Name = "spring",
                            SuperCategoryId = new Guid("73107ab5-d42e-415a-9fa1-0d89b831f8db")
                        },
                        new
                        {
                            Id = new Guid("7f8fac04-41c5-486e-9818-7c2be6b16782"),
                            Name = "reef",
                            SuperCategoryId = new Guid("73107ab5-d42e-415a-9fa1-0d89b831f8db")
                        },
                        new
                        {
                            Id = new Guid("a872a7f0-e259-491f-b462-95c46c54b6a5"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("73107ab5-d42e-415a-9fa1-0d89b831f8db")
                        },
                        new
                        {
                            Id = new Guid("2be81c6d-ecdd-4175-a306-f1b0c4bb0df8"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("73107ab5-d42e-415a-9fa1-0d89b831f8db")
                        },
                        new
                        {
                            Id = new Guid("e4a33244-6d6e-4f92-a978-f2cba4329053"),
                            Name = "sea",
                            SuperCategoryId = new Guid("73107ab5-d42e-415a-9fa1-0d89b831f8db")
                        },
                        new
                        {
                            Id = new Guid("862fa57e-d7a5-4d84-ab62-859c6a65a47b"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("a677234a-e831-4b48-af4a-9073ff565420")
                        },
                        new
                        {
                            Id = new Guid("72edb0ca-62f5-4159-be0c-ad61ae455dfa"),
                            Name = "peak",
                            SuperCategoryId = new Guid("862fa57e-d7a5-4d84-ab62-859c6a65a47b")
                        },
                        new
                        {
                            Id = new Guid("43e75e3f-cb7d-42dc-b463-44a9f4e51a94"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("862fa57e-d7a5-4d84-ab62-859c6a65a47b")
                        },
                        new
                        {
                            Id = new Guid("b0b0f020-0e21-4dea-a14b-9524758468f6"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("862fa57e-d7a5-4d84-ab62-859c6a65a47b")
                        },
                        new
                        {
                            Id = new Guid("3333c733-7511-491b-ac9d-0692ab79423f"),
                            Name = "rock",
                            SuperCategoryId = new Guid("862fa57e-d7a5-4d84-ab62-859c6a65a47b")
                        },
                        new
                        {
                            Id = new Guid("69fabd17-6d6e-45b3-a02f-f7a24a2f70fa"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("862fa57e-d7a5-4d84-ab62-859c6a65a47b")
                        },
                        new
                        {
                            Id = new Guid("255789cc-7865-4147-a94e-3030025917cd"),
                            Name = "sand",
                            SuperCategoryId = new Guid("a677234a-e831-4b48-af4a-9073ff565420")
                        },
                        new
                        {
                            Id = new Guid("108a0a5c-3914-4d55-805e-1f7878c21a42"),
                            Name = "dune",
                            SuperCategoryId = new Guid("255789cc-7865-4147-a94e-3030025917cd")
                        },
                        new
                        {
                            Id = new Guid("f970a859-6456-4a7d-8709-4aa45919324d"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("5d3ea522-b691-45e8-9ff4-37c73a9ffc53"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("f2babf82-10ae-4705-bbe9-dc8fd1352d6f"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("5d3ea522-b691-45e8-9ff4-37c73a9ffc53")
                        },
                        new
                        {
                            Id = new Guid("221b438a-a014-4c77-b98c-74a942ef3617"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("f2babf82-10ae-4705-bbe9-dc8fd1352d6f")
                        },
                        new
                        {
                            Id = new Guid("8c597641-01cd-40d8-bf35-4907ac96b864"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("f2babf82-10ae-4705-bbe9-dc8fd1352d6f")
                        },
                        new
                        {
                            Id = new Guid("d91f7045-8f95-4529-8544-fb87ec4ec4dc"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("f2babf82-10ae-4705-bbe9-dc8fd1352d6f")
                        },
                        new
                        {
                            Id = new Guid("ac9f2de9-32de-4e0a-bc35-ed07ccb531ae"),
                            Name = "clock",
                            SuperCategoryId = new Guid("f2babf82-10ae-4705-bbe9-dc8fd1352d6f")
                        },
                        new
                        {
                            Id = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6"),
                            Name = "sights",
                            SuperCategoryId = new Guid("5d3ea522-b691-45e8-9ff4-37c73a9ffc53")
                        },
                        new
                        {
                            Id = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("d1265aa9-654b-4c55-9ead-be4659331b6b"),
                            Name = "church",
                            SuperCategoryId = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8")
                        },
                        new
                        {
                            Id = new Guid("44e01ea6-0970-42cf-bd46-8138c5f62914"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8")
                        },
                        new
                        {
                            Id = new Guid("2c38fe85-ec09-4fe1-bd3a-c76424853bc9"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8")
                        },
                        new
                        {
                            Id = new Guid("341b1e46-77df-4f42-bb04-224166b7b220"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8")
                        },
                        new
                        {
                            Id = new Guid("5eaa7942-6358-432f-97de-86efbf895976"),
                            Name = "temple",
                            SuperCategoryId = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8")
                        },
                        new
                        {
                            Id = new Guid("ff22efaf-2d48-4732-88a2-427d8b4dcb2f"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8")
                        },
                        new
                        {
                            Id = new Guid("0fb5e9bf-a3e6-4bfc-8cee-7c72f42079e5"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("e9a49597-cabe-48fd-94aa-64946a4eb2e8")
                        },
                        new
                        {
                            Id = new Guid("b8f8d579-36cb-4239-b49b-e4618e73e9bb"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("66ed3bb3-6013-4fa2-92e0-4c57beece7b3"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("3bed7122-7fbc-4b53-9906-625b8612c404"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("1f78c5ce-5931-480c-94c5-282db21c432d"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("613978b5-9deb-42a5-bbf6-52c64a916cdc"),
                            Name = "tower",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("d3c8a192-8e81-4fd0-8562-da777f93cf2a"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("aa171b9d-0bcb-42a7-bdd7-9935ac8dc2c6"),
                            Name = "fort",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("6c17376f-13de-4b98-9233-5ac52c9e9e79"),
                            Name = "castle",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("fc831e44-4eae-423d-a788-7b6e3701f1dc"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("f1030a81-5078-4de3-9aad-983d6f228800"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("c6340cfe-4c29-4c61-a1bc-ea8eacf05b28"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("c9596f17-97fd-4816-be2d-89c93a075469"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("d70f0006-d283-4732-aeba-298b58db0992"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("be2f2cec-711b-4f70-84a4-d372725137b6")
                        },
                        new
                        {
                            Id = new Guid("76fd1561-b25e-433d-bf6b-86a974d5e503"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("8064178d-119e-43ba-951f-4f338a1d4eb3"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("2e517b88-2335-442b-b83c-0be676385844"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("59b64cb1-5b96-4bb8-b8c7-9eff08212b16"),
                            Name = "ship",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("a50b5377-a1b0-4690-bb37-88c1104f4c57"),
                            Name = "tank",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("62245ac9-c190-41b1-82a6-77d671ba6cf3"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("73a17b85-69cd-4d72-b0eb-6e73bbddf56f"),
                            Name = "monument",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("cd8f782f-8056-4ec2-88b2-17fe71c4160c"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("845adddb-833e-4557-b2c5-1acac1f1aea7"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("90c995cb-5d73-456d-8241-f3995aaff5f8"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("e2c85b0a-d6ed-438b-9031-6e21ae6c0e50"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("d70f0006-d283-4732-aeba-298b58db0992")
                        },
                        new
                        {
                            Id = new Guid("37ada763-6d71-42b4-b71d-d15ab908ca95"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("37ada763-6d71-42b4-b71d-d15ab908ca95")
                        },
                        new
                        {
                            Id = new Guid("0134c89a-fa97-4fb6-a79d-e838244d82a1"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("a1281b08-f34c-4a8b-9dd6-d1ce3c1aba87"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("338ebd22-e46b-4551-8c1f-8e5b638b156a"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("c0e127fc-6b7c-4a75-a296-d3d02d5d2a26"),
                            Name = "islam",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("98662281-30b2-47e6-85e2-f25abe1380ff"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("dcb15137-9ace-4673-a780-80aaa2df5832"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("b31e9a4c-6847-4855-9912-b62154d07306"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("6d900c44-be6e-490d-846f-5d381d60587a"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("c2d026f2-0095-4cb4-b04b-f36b0934c71b")
                        },
                        new
                        {
                            Id = new Guid("e5ac8a92-4dc9-40f9-9e9e-69a1f9132813"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("4c6a2f45-6d27-4fc6-bbb5-3a874d2c7e50"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("e5ac8a92-4dc9-40f9-9e9e-69a1f9132813")
                        },
                        new
                        {
                            Id = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("478c1aa1-cca0-4db5-8362-1d9e0a5a4ded"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("2b502ef2-d2b5-4e70-91f8-ed9e01551906"),
                            Name = "burger",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("9314bb32-fd00-4c2d-9644-4713707a63bf"),
                            Name = "regional",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("aa415c79-43b0-411a-92a8-7251d90aa1ae"),
                            Name = "italian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("52c1979e-d41c-474f-bf05-840342c68a09"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("3fb58ea6-2c32-45a0-81b7-ff41dd9db02b"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("7733fc47-720a-4413-81a9-b19f46ebc431"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d0fb6e2c-7a60-48f8-b3c0-f3f72ead71b0"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("67553f73-0d89-4be1-a8f9-df7d5d4f8aaa"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("a09e770d-b9d8-4315-9f16-df4affc47e11"),
                            Name = "american",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("24e9bbd4-bbe6-4e52-887f-9d06e5aedb80"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d0f4b85a-14ab-4096-81ae-2e96eefb5c8d"),
                            Name = "indian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("78c5e283-eaff-4b6c-85a1-eb39483e6a88"),
                            Name = "asian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("fc567aa6-ef6a-4068-bbec-8a25dbe5dad0"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("f5439db8-777f-45f1-84c3-d33a8493ebb7"),
                            Name = "french",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("39e8b4b1-b565-4166-9891-32c10848de5d"),
                            Name = "german",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("ca3815e4-98ce-4f65-91ae-9321b9076d45"),
                            Name = "thai",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("58c652c0-d9bf-42f0-ae90-fc9385cac9e0"),
                            Name = "greek",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("c74c3d4d-e0a7-46ba-846f-eb2fdfe8a5e4"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("0a59baba-4b3f-4477-adcb-3ccce2ca78c0"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("5ee6c510-5f75-4206-9785-a43cf80f2ced"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("55c27b64-a302-414a-9639-4e087b38e9ad"),
                            Name = "international",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("f8029ad5-11be-4d4e-bc79-7cb91d92117d"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("7c0612f1-77e5-48ba-8d0d-8f0a8eb95fb6"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("2f57877a-fdb8-4390-8a12-5797063e7d12"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("83bc4435-682e-42f2-ba68-21e8a1cfbac4"),
                            Name = "korean",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("5884be5d-095a-4e05-8c6b-e7a6e12d6e7d"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("18b5a408-6b98-4b2c-bc61-f1a0f013d610"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("3150195e-0bf3-46f8-93f1-f59730b0b2df"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("38b5661a-87f9-4266-9133-fce656daee39"),
                            Name = "fish",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("36dc1fd2-5763-4871-b6cd-7a5571f8da46"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("04b2797c-98d3-48d5-9e83-27876d6e8082"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("5a4f0d3f-5460-4395-8871-9318497239e0"),
                            Name = "friture",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d1e71b32-ca8a-4a4d-9150-2dad15758c2c"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("df077e8c-8e27-4fda-9a52-78b6ec6841df"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d51845f8-fdb1-47fc-be80-f6805388394a"),
                            Name = "wings",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("15c9df60-6759-419d-9e7e-4bbc97c9a4ec"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d47e7404-9fe0-4606-bb14-e36f237491be"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("34a698de-3153-4517-aeb5-0f191c4d192f"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("a88c9701-5a3d-4ab6-82ef-45c3c4d23f3b"),
                            Name = "arab",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("e27de157-8058-4e70-a46b-3cdc395b0c3d"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("f502eb06-faa1-43f5-b129-a2a1c1e8fd3c"),
                            Name = "russian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("176b6f99-0c4d-4a90-8209-30b2d99b2582"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("be8f4fac-997f-442b-adc6-588bb0f65cec"),
                            Name = "african",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d96b47ad-221c-462a-a338-8c59ee51c29a"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("b18c3961-e693-46b1-afd4-abe1165df5fb"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("a637efd9-77c2-40ec-b722-f881c57b5c4e"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("e9301c26-009f-468b-ba35-f6adb5b7abeb"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("1bd7ba72-3bbb-4e5a-94c3-a757d9cdad1c"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("34ac375e-cb14-4b0c-a199-75ed47b024a2"),
                            Name = "curry",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("744f3064-67a1-4076-ad52-ed37c3067a14"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("fad6daad-d50d-4e65-bc04-a53760ba82f9"),
                            Name = "persian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("bf51391f-d062-424a-bac7-5f1b363c3aa7"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("154f69c2-543d-4da6-83ab-f3f24417dbaa"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("1fb98de8-9412-4a92-8145-df169fc2d795"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("48c5f7e5-b1f9-417b-92bd-ccc4e08df2b3"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("664fcf23-2f72-4823-ac78-c240a849ef94"),
                            Name = "pita",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("6808dc1c-ce05-42ce-97e3-759938269868"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("01492857-9bf5-4647-88f3-cb328aeab625"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("76f676ea-b8be-4751-85cf-b81e1c41a8f6"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("de135fba-48ca-4573-9da1-d81ff2ff146a"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("01965132-ad88-43d0-bb9e-83978c3cd6ea"),
                            Name = "irish",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("70e30db7-f59e-4359-a50e-27aaafa51bc8"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("c4d7a3be-c868-46af-92e7-bd643c793fe6"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("1ee03c7b-88bb-4a5b-9736-b84f987c9eef"),
                            Name = "danish",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("6a6dfa55-441b-4ee4-9ab8-76297bbd94eb"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("5f03a8b5-6e05-47a1-a3f0-3f5bfcffda24"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d528ea66-1d80-43b7-9312-9880dd43b10d"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("57191d08-0fc7-4439-ac1c-111bc82aae4a"),
                            Name = "western",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("cc5839c7-2b35-47ee-97d2-88fa60e47f71"),
                            Name = "european",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("17aedf7c-59ce-4dfc-8b0c-b37e91d4d5ad"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("a3b34375-8a9e-47ed-8c92-a9c5debab5dd"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("21156570-a0c4-409d-a202-46874a5f1323"),
                            Name = "soup",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("31c99bbf-cff4-4862-bdf6-58a3b50d442f"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("fef454cf-30ff-4da8-bc90-8f93b2269859"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("d2625afd-edbe-4584-be00-d484ecc9e152"),
                            Name = "czech",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("7a4e37e9-8b67-46b7-afeb-eab2d5bac68d"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("0c87eaf6-41f8-4586-9a45-d5a8d2c86d83"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("627033d7-043f-4b27-af25-96b701161a3e"),
                            Name = "malay",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("80fad29c-4822-4edb-a508-d910c4cd8a85"),
                            Name = "chili",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("82d91aca-dec4-4845-9ef2-84779edf8372"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("994bfc7d-861e-48e6-b89a-16112a62d00a"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("3e67ddee-f322-4b9f-8404-1cba381b7fdb"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("e0b72283-8871-44ed-aa73-a70664449959"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("5c402109-1864-4cf6-8175-0c21e171d83b")
                        },
                        new
                        {
                            Id = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("b1e6d3f1-d30b-4f65-9c7d-e4b2b3ed623a"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("c72fc9ff-b71a-4f21-80a2-32ee7b0195a2"),
                            Name = "burger",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("f37567d5-f181-4083-b178-1fb7ca5b2e21"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("e2c7d00d-4bc6-4554-a4a2-34a9745ebe4f"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("7b0f127a-3ab1-4d58-8f6b-354dc3b9b5be"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("deb69bcc-14f5-4589-a84a-e4887d68ed91"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("379045df-32a0-40e4-9ac8-fda190d14930"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("31beb57e-9b08-452a-b1b6-508e2cfb73da"),
                            Name = "wings",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("7623b5e1-cdc5-4577-8483-358efbc6a7d0"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("10ab0c5e-401e-415b-bec7-5f2c548e805c"),
                            Name = "pita",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("e94497e5-de3b-42c0-96b0-0425abae537c"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("e54b5e74-5312-4fd9-adeb-e6c4053155cf"),
                            Name = "soup",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("d0621799-22bf-423a-8e32-859936f1f20b"),
                            Name = "salad",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("7d33c475-ff94-4c2a-bf2b-07bf0aaf9741"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("eac891b8-3cbd-40f8-86e8-59c1299c51c8")
                        },
                        new
                        {
                            Id = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("66f73c76-d0bd-4fd5-85f3-0dce8195ac35"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("205d252f-9893-4a62-b30e-fd1c951b4dee"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("1d6b7d33-74c4-4c4d-8e9e-2bc6bc0ac89d"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("d9ce9e1f-8aad-459d-b539-1e1cc3ad2508"),
                            Name = "donut",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("62db9f90-e62b-48f0-851e-b541ae86cda4"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("21ea2fd4-e9b6-4e03-a986-6f10e12a1d3f"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("f178c605-8b30-4d68-a82b-e025c533249f"),
                            Name = "cake",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("b6fb41db-c2f6-4aa7-9467-57ee543892bc"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("4f98cc5c-142a-4905-95b3-5c25dfd9b969"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("29b3ba52-8135-4594-90f9-4ee616c61caa"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("f896c779-002c-46e2-895e-e90ee622b6d7"),
                            Name = "tea",
                            SuperCategoryId = new Guid("41f1d867-abb2-4f11-b8e0-ca553e7fd34b")
                        },
                        new
                        {
                            Id = new Guid("cc4f6b81-4aae-48a2-b840-6246bc4696de"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("2c028ffc-8ac3-4472-a3c5-433e68711005"),
                            Name = "bar",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("96a8704a-0691-4f66-a8f7-25a7d329eaa5"),
                            Name = "pub",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("76ddb4f3-d62f-483b-ac92-5b7d041bab33"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("748f8fbe-5a79-4664-b736-ed3aa80fc765"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        },
                        new
                        {
                            Id = new Guid("d45f70c2-b04c-45bc-936e-6d1b444a3bb5"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("44ae9bb2-9b39-4b01-a1d4-171e8ef5310d")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
