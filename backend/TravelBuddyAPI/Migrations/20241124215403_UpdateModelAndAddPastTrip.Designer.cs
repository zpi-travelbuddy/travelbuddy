// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241124215403_UpdateModelAndAddPastTrip")]
    partial class UpdateModelAndAddPastTrip
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);

                    b.HasData(
                        new
                        {
                            PlaceCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746"),
                            ProviderPlaceId = new Guid("eb29d00d-604f-4744-8fb4-fac3ef0db9ea")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("1b1dab12-2701-4a1d-b908-1b281dd864c6"),
                            ProviderPlaceId = new Guid("eb29d00d-604f-4744-8fb4-fac3ef0db9ea")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9"),
                            ProviderPlaceId = new Guid("eb29d00d-604f-4744-8fb4-fac3ef0db9ea")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("04f9bc88-fd39-4c04-94a2-3c775f18fd7f"),
                            ProviderPlaceId = new Guid("eb29d00d-604f-4744-8fb4-fac3ef0db9ea")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746"),
                            ProviderPlaceId = new Guid("41a794fc-dd4f-4a3b-ab66-2e623da3eb38")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a"),
                            ProviderPlaceId = new Guid("41a794fc-dd4f-4a3b-ab66-2e623da3eb38")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9"),
                            ProviderPlaceId = new Guid("41a794fc-dd4f-4a3b-ab66-2e623da3eb38")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746"),
                            ProviderPlaceId = new Guid("62951070-b660-4f38-b533-3aa18d5c8e2d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a"),
                            ProviderPlaceId = new Guid("62951070-b660-4f38-b533-3aa18d5c8e2d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9"),
                            ProviderPlaceId = new Guid("62951070-b660-4f38-b533-3aa18d5c8e2d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746"),
                            ProviderPlaceId = new Guid("bf2a9d86-4f29-4ef3-adac-570b98301d78")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a"),
                            ProviderPlaceId = new Guid("bf2a9d86-4f29-4ef3-adac-570b98301d78")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9"),
                            ProviderPlaceId = new Guid("bf2a9d86-4f29-4ef3-adac-570b98301d78")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746"),
                            ProviderPlaceId = new Guid("ad31748c-a335-42a9-a446-e7803879681b")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a"),
                            ProviderPlaceId = new Guid("ad31748c-a335-42a9-a446-e7803879681b")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9"),
                            ProviderPlaceId = new Guid("ad31748c-a335-42a9-a446-e7803879681b")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3"),
                            ProviderPlaceId = new Guid("b6537ae8-16a8-4d6e-84f9-77a717e7e0ef")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967"),
                            ProviderPlaceId = new Guid("b6537ae8-16a8-4d6e-84f9-77a717e7e0ef")
                        });
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a5b1b6d-a6f7-41fb-8277-00756aba33bb"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("7c938f9f-4edb-427c-9820-d35cf87d029d"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("dddadc5a-8136-4153-867f-8a3b96ea41bf"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("7c938f9f-4edb-427c-9820-d35cf87d029d")
                        },
                        new
                        {
                            Id = new Guid("b0d8e732-f9d6-4d69-a908-b464237eab75"),
                            Name = "art",
                            SuperCategoryId = new Guid("7c938f9f-4edb-427c-9820-d35cf87d029d")
                        },
                        new
                        {
                            Id = new Guid("b313ba91-7573-434e-9b17-3afb7f14d2ac"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("f43b0d17-d630-4e37-93f5-d8eeb8109fb0"),
                            Name = "culture",
                            SuperCategoryId = new Guid("b313ba91-7573-434e-9b17-3afb7f14d2ac")
                        },
                        new
                        {
                            Id = new Guid("9c44e322-487d-4ed9-92b6-f1c5a0c60af5"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("f43b0d17-d630-4e37-93f5-d8eeb8109fb0")
                        },
                        new
                        {
                            Id = new Guid("1c148f7f-af0c-460d-a632-6e8801798055"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("f43b0d17-d630-4e37-93f5-d8eeb8109fb0")
                        },
                        new
                        {
                            Id = new Guid("908db230-36d8-402b-b450-4a74478920ee"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("f43b0d17-d630-4e37-93f5-d8eeb8109fb0")
                        },
                        new
                        {
                            Id = new Guid("269268a5-538e-493e-ae05-4f0d3009cd86"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("b313ba91-7573-434e-9b17-3afb7f14d2ac")
                        },
                        new
                        {
                            Id = new Guid("ad6bd65a-2721-47ee-8d8a-fcaa7a663651"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("b313ba91-7573-434e-9b17-3afb7f14d2ac")
                        },
                        new
                        {
                            Id = new Guid("06a105f0-6a39-459a-a489-21454af03e9d"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("b313ba91-7573-434e-9b17-3afb7f14d2ac")
                        },
                        new
                        {
                            Id = new Guid("b95923db-a55b-4eee-8ca7-ac35e7bfd56c"),
                            Name = "museum",
                            SuperCategoryId = new Guid("b313ba91-7573-434e-9b17-3afb7f14d2ac")
                        },
                        new
                        {
                            Id = new Guid("e1198615-570f-4b90-b9fc-5dbf87925416"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("4c84ab0b-7e7b-4fce-9764-a855b1468391"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("e1198615-570f-4b90-b9fc-5dbf87925416")
                        },
                        new
                        {
                            Id = new Guid("077b8a92-baf0-4a35-894e-ea3942cb5412"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("c973a5c3-cc01-4488-a20b-c66af71c3368"),
                            Name = "park",
                            SuperCategoryId = new Guid("077b8a92-baf0-4a35-894e-ea3942cb5412")
                        },
                        new
                        {
                            Id = new Guid("0b8b80fc-bf81-449c-9d9b-5a0675fb4dbf"),
                            Name = "garden",
                            SuperCategoryId = new Guid("c973a5c3-cc01-4488-a20b-c66af71c3368")
                        },
                        new
                        {
                            Id = new Guid("03de4a54-6f46-4e6c-b073-3e91e37da513"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("c973a5c3-cc01-4488-a20b-c66af71c3368")
                        },
                        new
                        {
                            Id = new Guid("4b94397a-d6d8-4811-9c00-5b1392618373"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("6685ae02-318c-45e2-9405-b42f75ffd166"),
                            Name = "forest",
                            SuperCategoryId = new Guid("4b94397a-d6d8-4811-9c00-5b1392618373")
                        },
                        new
                        {
                            Id = new Guid("6fc4cce4-426d-4ded-8503-5eb183565e98"),
                            Name = "water",
                            SuperCategoryId = new Guid("4b94397a-d6d8-4811-9c00-5b1392618373")
                        },
                        new
                        {
                            Id = new Guid("97bf3c5f-8f22-4afe-b3b3-454261e38e18"),
                            Name = "spring",
                            SuperCategoryId = new Guid("6fc4cce4-426d-4ded-8503-5eb183565e98")
                        },
                        new
                        {
                            Id = new Guid("54c19113-2a1d-4d8b-b9a8-e225c6a5a78e"),
                            Name = "reef",
                            SuperCategoryId = new Guid("6fc4cce4-426d-4ded-8503-5eb183565e98")
                        },
                        new
                        {
                            Id = new Guid("91cb87a6-ca1a-43a4-8b88-3e4d5a4dcea2"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("6fc4cce4-426d-4ded-8503-5eb183565e98")
                        },
                        new
                        {
                            Id = new Guid("753bdb9a-7084-4f7e-b26d-e91eb6ec81b4"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("6fc4cce4-426d-4ded-8503-5eb183565e98")
                        },
                        new
                        {
                            Id = new Guid("435d3fef-aace-4776-92fa-f2d534593629"),
                            Name = "sea",
                            SuperCategoryId = new Guid("6fc4cce4-426d-4ded-8503-5eb183565e98")
                        },
                        new
                        {
                            Id = new Guid("812e3e6d-e5fb-4f37-9f80-f510599a02e2"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("4b94397a-d6d8-4811-9c00-5b1392618373")
                        },
                        new
                        {
                            Id = new Guid("6dca44bb-7e8a-4dbd-9e19-6b3aa52bb4ce"),
                            Name = "peak",
                            SuperCategoryId = new Guid("812e3e6d-e5fb-4f37-9f80-f510599a02e2")
                        },
                        new
                        {
                            Id = new Guid("5f214649-c62c-4c37-9cad-4e0c8613f300"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("812e3e6d-e5fb-4f37-9f80-f510599a02e2")
                        },
                        new
                        {
                            Id = new Guid("0917dcf5-c4ec-4353-a1f8-f1870db8d8ee"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("812e3e6d-e5fb-4f37-9f80-f510599a02e2")
                        },
                        new
                        {
                            Id = new Guid("29931f08-89cf-40c1-b2f1-96d34daa8871"),
                            Name = "rock",
                            SuperCategoryId = new Guid("812e3e6d-e5fb-4f37-9f80-f510599a02e2")
                        },
                        new
                        {
                            Id = new Guid("f81079a4-6bdd-461d-b43e-0dd9de3894ce"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("812e3e6d-e5fb-4f37-9f80-f510599a02e2")
                        },
                        new
                        {
                            Id = new Guid("058d69cc-01f6-4485-889f-bbda37f6a5c8"),
                            Name = "sand",
                            SuperCategoryId = new Guid("4b94397a-d6d8-4811-9c00-5b1392618373")
                        },
                        new
                        {
                            Id = new Guid("228843d5-412d-4991-bd9f-c09c2e33f83d"),
                            Name = "dune",
                            SuperCategoryId = new Guid("058d69cc-01f6-4485-889f-bbda37f6a5c8")
                        },
                        new
                        {
                            Id = new Guid("d0ee8558-9c05-4bf8-a0a3-ad304a3762d3"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("1b1dab12-2701-4a1d-b908-1b281dd864c6"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9")
                        },
                        new
                        {
                            Id = new Guid("aa57512c-c4f2-4e58-ae42-3e3aab84798e"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("1b1dab12-2701-4a1d-b908-1b281dd864c6")
                        },
                        new
                        {
                            Id = new Guid("41c27dc4-ecdd-4cfc-9649-7b24b373ec59"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("1b1dab12-2701-4a1d-b908-1b281dd864c6")
                        },
                        new
                        {
                            Id = new Guid("0319d762-1fc2-461c-bfde-15dfccfd2006"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("1b1dab12-2701-4a1d-b908-1b281dd864c6")
                        },
                        new
                        {
                            Id = new Guid("7b64f68f-6ca6-4ab1-9dd8-d46f65a49948"),
                            Name = "clock",
                            SuperCategoryId = new Guid("1b1dab12-2701-4a1d-b908-1b281dd864c6")
                        },
                        new
                        {
                            Id = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746"),
                            Name = "sights",
                            SuperCategoryId = new Guid("5021f3f6-7922-4bc2-85a9-a0df2b49d1a9")
                        },
                        new
                        {
                            Id = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("adaa747f-ab3f-4ce1-83c6-ff91de56ce8e"),
                            Name = "church",
                            SuperCategoryId = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49")
                        },
                        new
                        {
                            Id = new Guid("06803d5a-fe66-4076-ae97-fc7223caef99"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49")
                        },
                        new
                        {
                            Id = new Guid("c32a41ed-a034-4e2b-952e-5aaf4b198b15"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49")
                        },
                        new
                        {
                            Id = new Guid("0e453133-a1f1-4206-83f6-24c17b4dd461"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49")
                        },
                        new
                        {
                            Id = new Guid("edf098da-92c2-45ca-b5fb-aa4894f4e1b2"),
                            Name = "temple",
                            SuperCategoryId = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49")
                        },
                        new
                        {
                            Id = new Guid("3e1b763a-2319-40dc-9687-14519cf4296b"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49")
                        },
                        new
                        {
                            Id = new Guid("9c6bfffa-6859-4702-9e37-63daa0becd37"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("865ff1e2-fe1a-4b8f-81cd-0e9aba35ef49")
                        },
                        new
                        {
                            Id = new Guid("2fee7fa7-ce3a-4769-82b6-e4289f7e18bb"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("d197b151-bc15-4d59-881c-5481640ed40f"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("8b8b475b-aac5-45ae-bd7b-a095b77a6b73"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("79f5ca49-8b7a-403c-b7fc-79043bd2d064"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("d5215bac-34ce-4158-a8ac-ed47ef3906e4"),
                            Name = "tower",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("616bae99-b866-48da-89c0-38173c425349"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("cd0c70fa-dae9-4d1f-b268-2ae91b39d7fd"),
                            Name = "fort",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("ce952a21-f2f2-4564-9729-9faa95f4ff0e"),
                            Name = "castle",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("04f9bc88-fd39-4c04-94a2-3c775f18fd7f"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("3ac9b1a8-68cc-48d3-9908-3f268da7872d"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("de838353-d19b-44b1-a90c-ba79866ea6c2"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("0e7237cf-ed2f-47ad-959e-adeea623adc8"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("6b903469-926a-4863-af68-618f28e1a94a"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("0f95d3f1-24fa-4e02-9dab-6a1ed73ee746")
                        },
                        new
                        {
                            Id = new Guid("28ff3fe5-41f2-4eaf-b997-4be4569b3053"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("eeb5cfda-b58e-44a4-825f-68017ee42f44"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("fc40aa45-3f8c-4c80-8303-0b0f7f9a0a1a"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("a866a7f3-6635-419f-88e3-38f72dd8f466"),
                            Name = "ship",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("bb82b50c-5bf2-4ee8-b2ed-8a89b2b5a75a"),
                            Name = "tank",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("3333747a-7931-42ab-91b5-705c3141d687"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("ce5c402b-2c1d-4d45-9747-a210221285d2"),
                            Name = "monument",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("827f03f5-42ce-45fe-bd4c-43b331857913"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("4df176c9-d8c8-4d34-afc5-43335dfc5220"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("b5ef7dbf-894d-4bd4-8f01-06f7693d1a78"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("0228bb3b-83d8-4b2b-bd8c-8f32d60e7464"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("6b903469-926a-4863-af68-618f28e1a94a")
                        },
                        new
                        {
                            Id = new Guid("ee552c9a-2a04-4618-9480-9da2e0652f23"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("ee552c9a-2a04-4618-9480-9da2e0652f23")
                        },
                        new
                        {
                            Id = new Guid("7d4b2d40-d618-45cd-8269-9ea9c1e904ba"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("4038f2d4-0b40-4b5a-a21e-087c601ef7d6"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("827d115c-2acb-4034-aed4-82f6227bb1b3"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("fe94a101-5199-4f28-98d4-95dfd341b08c"),
                            Name = "islam",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("0351816d-4949-4cb1-a536-43b7890b79e5"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("9d307342-29b4-4ca0-b1f7-025653bc6a4d"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("2e401790-68de-4a1b-a402-a1b74dd4b271"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("f9113a0f-a9ab-4d1d-967b-e5cf37122295"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("5e5c5b9e-e3fc-4a5d-93c5-dfda7c2b6ab8")
                        },
                        new
                        {
                            Id = new Guid("3a1a34f2-c8b6-4950-96ad-0c513a972ee9"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("cadb043a-b9a0-42ba-b739-004b94a8b270"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("3a1a34f2-c8b6-4950-96ad-0c513a972ee9")
                        },
                        new
                        {
                            Id = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("bb0c21bd-c008-4881-acab-50618127850e"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("72a6af19-d109-481c-a6b8-784e9b6c0fed"),
                            Name = "burger",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("0b3ec659-37bd-408d-90a2-db8e61519b77"),
                            Name = "regional",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("015f2b6a-21e7-4a94-bd05-6f1d2cee9bf5"),
                            Name = "italian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("479a7b32-3f3c-4908-8bf1-7304dc4f523f"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("36847e8e-09e5-4b17-918c-f5eb8f3c5817"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("3561ea5e-aa96-40c2-a095-8e3a9d408c12"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("ddbd2ceb-bb44-4197-aaf4-e0fe329b7b96"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("425c7998-e585-41ec-9b98-7e416b80f180"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("4ed02c7c-9d80-41bd-96c7-633c6875bff5"),
                            Name = "american",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("d771e0d5-83be-43dd-ae66-8cf553a656eb"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("bdaebf3f-e443-4180-a4c7-b36d9d0202c1"),
                            Name = "indian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("0292a985-92f5-494f-be66-933d4fe44d95"),
                            Name = "asian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("4d93429b-70d7-4a9b-8210-b447cd90a4ea"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("70f2adaf-28e0-44e0-811e-5b058ba27acf"),
                            Name = "french",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("fb9f9c94-c1c6-4793-a7ea-bdf3c3d04d5e"),
                            Name = "german",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("0bfdab64-e5fb-4f23-b0e1-028b17e21b1f"),
                            Name = "thai",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("8312a84c-1bd2-4748-b0c2-7a4caee87df2"),
                            Name = "greek",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("e2d6bc7a-4982-4032-be79-b716bb5b1db4"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("407cf5ee-b1d8-4c8f-8ae1-a8db94819dc0"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("1e5b3fa2-799a-4b80-8b85-efa4b61df1d6"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("062e16c0-db11-4700-a97f-3fd039e975dd"),
                            Name = "international",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("12a99640-3f4b-46e3-8eac-78471e821e7b"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("415e4309-1a80-4556-b647-e44547a7a2d1"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("86c6284f-0ce2-436c-9844-65a7f4292d87"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("94d1e232-1ce0-493c-8f99-6dc25dedd66d"),
                            Name = "korean",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("d2b579f5-9246-41db-a351-42739a747b90"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("7df18087-1de0-40b1-b227-0b20ecb9d345"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("a87942bb-59ef-434d-adac-62adb8d730b7"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("9dd02029-b743-46b6-90e9-e10a0a31a9a3"),
                            Name = "fish",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("26abf691-2d1a-434d-8c72-aaa4cba6b14f"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("f755ad8e-4d92-4a9a-a8b4-6543b36be9eb"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("b114d2ee-d03e-464f-9e3b-9d0e2c457334"),
                            Name = "friture",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("0826f730-2629-482a-93d5-2d50b9588707"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("efb4af7d-d832-4abb-93d1-af07518e49a1"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("29b6f505-198b-44a0-a734-89ffc329d909"),
                            Name = "wings",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("c294e492-cc0a-45fe-ac2d-b0c8b3cbbbde"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("c7c97099-4b30-4f6e-bb23-f1cdddd5a0a6"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("2ca1819a-a092-4f10-abeb-ec7f30898f7c"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("ffbea87d-84c8-4b0f-9b60-b6fcfe869593"),
                            Name = "arab",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("733b3d7b-4183-409b-9fee-115886bb0127"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("51b022ef-e764-4118-89a7-b7c60e3c7ada"),
                            Name = "russian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("3bec0375-3054-435a-933a-2e325180b3e0"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("fa84dba7-1c3b-442f-bdbf-f46d2679f96c"),
                            Name = "african",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("65f11cca-c7ec-4688-9926-aed5f55a4579"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("9de9e0fe-ae7d-40b9-b3d7-7b2380ea054e"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("d901647a-aa6e-43ca-bff8-4daa26792fc0"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("70328b30-05b0-4f03-81ef-b3dbf1affe5f"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("55a4fdfb-282c-4109-b040-c27ab5ac6896"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("0302eab2-f73e-4216-be0a-7b5ba5964ce0"),
                            Name = "curry",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("1d6a978a-bdaf-45c1-b878-5e88f674ba66"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("46e0536c-c43e-46d0-9804-27dccb5bc4dc"),
                            Name = "persian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("ce6f6729-24be-428a-8e75-9e13484af54f"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("924770ba-0825-4094-bb27-7b6fe5fc5fe0"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("c25c4187-8f6f-4f1e-98cc-6532ab57476f"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("ac377ffb-bf9f-44c5-b22b-790b754ee64f"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("5618a2ba-f30e-41ea-bb5b-692b0e9662a1"),
                            Name = "pita",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("5543705b-7246-4d3a-9251-e6636be6e010"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("b866f35c-5b4b-438c-aa84-92e3ffefa3ed"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("be4ac1ea-6f53-436b-9b66-b589778840fd"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("a7cc3c10-98c9-40b4-aa80-8786c52074c6"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("d0778d9d-bb25-4f0f-85d4-a3a9082812d6"),
                            Name = "irish",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("c0845031-7acd-4f0f-830b-0daf31879c25"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("0c31640b-76c8-4cb3-a3d3-d0fb80f34f85"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("b1e1d73f-790d-43d4-a6be-13d377e25b09"),
                            Name = "danish",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("1f91fc1a-6b5e-43c7-ad47-6e32a71c3aaa"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("ce600192-3f50-4d65-9441-474aaab86f31"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("574b785b-c752-4c44-867d-d35cb79a7b8f"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("b959456a-6c96-410a-a1fd-5b28718ceb43"),
                            Name = "western",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("8fe55d08-8557-48b6-a76f-3164a042f4b5"),
                            Name = "european",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("e50219cd-d54d-4bb8-9dfd-a218879a4510"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("c2b47761-bc1e-492f-95a1-113aac111dd6"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("f427a04d-e6ff-411b-9aee-689a39fb1f7e"),
                            Name = "soup",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("147f7686-dca9-4598-9de1-adab250d226f"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("6df407a2-a9fc-4890-bd04-a2f93dd24e15"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("64ae0f86-67ba-4be1-8abb-f9b34fb48b35"),
                            Name = "czech",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("ab6e7aae-c135-47d5-95fa-864d2148bfbb"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("3150266a-15f5-4d1a-b59f-83f8a1f09265"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("05bbc59a-7314-4062-95b4-074217fd9a34"),
                            Name = "malay",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("3fc9fb8f-0909-4258-8d6c-97fbebb7500d"),
                            Name = "chili",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("1d742572-38fe-4072-9adf-7e78a68a46da"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("2e641578-bf46-464c-97c3-45fded8b0470"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("9233c1f4-0f27-425c-a981-385136e822a8"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("489f74c5-0f90-4cf2-ac47-7176c7d7a9be"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("ddfd0fdd-a74b-49c4-820d-4f2324fa12f3")
                        },
                        new
                        {
                            Id = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("ccdd7444-e589-49de-a71e-72c89b4daf93"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("b82b21bb-c23d-470f-996f-56a1e0a3d611"),
                            Name = "burger",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("b8750037-5493-4894-9a19-3edc834d5bda"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("901a95d6-f278-40c8-8bda-1190d975b279"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("0834002b-3f6a-4e4f-be81-71ed7e783f26"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("4b64129b-68b3-43c3-96d8-d744215e0434"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("0f0698ad-f64c-496e-97c3-117b0c959b68"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("98957e2d-e402-44bd-8379-25d1ca8d8073"),
                            Name = "wings",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("b3d86ee1-1a2e-491b-9e91-29f201c9835f"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("d570f50d-ec2d-4755-b751-946c4de3cb1d"),
                            Name = "pita",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("aab50919-d2f7-4e11-aefb-5b731128750f"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("3f63d2a8-da27-4671-93a6-267b82abe492"),
                            Name = "soup",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("78094564-aee1-46fa-ae92-ea7daa6700cd"),
                            Name = "salad",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("846d18ce-37fd-4363-a0cc-1d36298b3961"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("40c17eb4-54b9-425f-aa45-c99359c7648e")
                        },
                        new
                        {
                            Id = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("c57dbd66-7e83-4c5c-a8d3-683d4117d3f3"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("01ff3211-6428-40ea-ad88-86ecc91e5d1a"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("49b25567-d8a6-4bbd-b933-105a4917ac22"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("5a4ebecd-7b30-44fa-8941-9c788d5613fb"),
                            Name = "donut",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("8885a292-2421-46e4-bc6d-5a56dd11692f"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("adb14ba0-e1cf-4478-ba10-d074a53fad47"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("844e7a19-db5a-4863-911f-f1389a0c14de"),
                            Name = "cake",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("cb0769d3-afab-422b-8162-c6f2a8198eac"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("6ccfab6e-31f3-416d-b0c7-d182c6c06310"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("9947bfe6-9f9a-451e-8b0b-8751d76c763f"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("24f623a0-9980-4e15-9f63-c6a95969b62b"),
                            Name = "tea",
                            SuperCategoryId = new Guid("7ac23ae7-fe94-41ea-955e-e1991558e737")
                        },
                        new
                        {
                            Id = new Guid("44b1643b-a834-4428-92df-8b5341ae4d2b"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("ccfb4668-f954-4714-9ba7-a6bfe9f3a877"),
                            Name = "bar",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("dcf1c33f-a7c6-4ce9-a90e-7b67e2fad50b"),
                            Name = "pub",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("b589383f-afb7-497c-b09d-74017876afe9"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("397baa3a-13cf-4db8-95e8-99855d7e443f"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        },
                        new
                        {
                            Id = new Guid("050470e6-150d-41bd-b76a-f238f1af066d"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("912c5bf7-21e7-4b63-a599-58ed6e860967")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b92f090-098c-4538-9ddd-204bffc5e44e"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("0f088123-2f09-4e6f-b58f-533d986fb354"),
                            Name = "free",
                            SuperConditionId = new Guid("3b92f090-098c-4538-9ddd-204bffc5e44e")
                        },
                        new
                        {
                            Id = new Guid("dd325b52-0833-45b7-b1f4-770a15781e6f"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("3b92f090-098c-4538-9ddd-204bffc5e44e")
                        },
                        new
                        {
                            Id = new Guid("ff87a791-7b77-4e82-8fef-f07b22389963"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("ac014d73-0a23-41cd-852d-756fbd2357db"),
                            Name = "yes",
                            SuperConditionId = new Guid("ff87a791-7b77-4e82-8fef-f07b22389963")
                        },
                        new
                        {
                            Id = new Guid("0ceffc44-6721-4120-8f55-b3ff9092162a"),
                            Name = "limited",
                            SuperConditionId = new Guid("ff87a791-7b77-4e82-8fef-f07b22389963")
                        },
                        new
                        {
                            Id = new Guid("001c0229-da10-4d73-8771-85a0e0576cd5"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("c9cbed23-a7aa-469c-8ba3-ddd863e9080b"),
                            Name = "yes",
                            SuperConditionId = new Guid("001c0229-da10-4d73-8771-85a0e0576cd5")
                        },
                        new
                        {
                            Id = new Guid("32c4bd52-ba7e-41dc-a60b-0cd15681193a"),
                            Name = "leashed",
                            SuperConditionId = new Guid("001c0229-da10-4d73-8771-85a0e0576cd5")
                        },
                        new
                        {
                            Id = new Guid("187d1349-7600-46cf-9649-a7777f0d2774"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("5fe767cd-379a-4749-9fae-660ac179d0a8"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("e37b9fe9-eae0-4b0e-8cff-88a2e1b4a4bc"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("5fe767cd-379a-4749-9fae-660ac179d0a8")
                        },
                        new
                        {
                            Id = new Guid("f86bfac7-fade-4333-b631-c3bdbfae2497"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("5fe767cd-379a-4749-9fae-660ac179d0a8")
                        },
                        new
                        {
                            Id = new Guid("24c5555a-4e95-45e9-bf34-dc48c7ab9939"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("5830bb86-e107-4610-a9e3-ff290e09a048"),
                            Name = "customers",
                            SuperConditionId = new Guid("24c5555a-4e95-45e9-bf34-dc48c7ab9939")
                        },
                        new
                        {
                            Id = new Guid("81399a72-93a9-49ba-bbb5-c58a6caf298a"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("5f6ecfa1-5e4f-45ce-88a0-bee75f0c0cd6"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("98225038-8a0c-4c14-b24d-f3713d584054"),
                            Name = "no",
                            SuperConditionId = new Guid("5f6ecfa1-5e4f-45ce-88a0-bee75f0c0cd6")
                        },
                        new
                        {
                            Id = new Guid("47d6b8e8-0d97-49a0-871c-dfb03ad41f97"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("5f6ecfa1-5e4f-45ce-88a0-bee75f0c0cd6")
                        },
                        new
                        {
                            Id = new Guid("967944e4-83e6-441e-86d4-dd1a46872488"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("15c7e04a-722f-4cf3-bbd9-4ca75668d4cf"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("04986f04-d906-49d1-a053-f5d950252024"),
                            Name = "only",
                            SuperConditionId = new Guid("15c7e04a-722f-4cf3-bbd9-4ca75668d4cf")
                        },
                        new
                        {
                            Id = new Guid("307b93ee-fe43-4036-ac59-81def692efd6"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("01bf2966-d031-43b5-8639-444125d25647"),
                            Name = "only",
                            SuperConditionId = new Guid("307b93ee-fe43-4036-ac59-81def692efd6")
                        },
                        new
                        {
                            Id = new Guid("a280fb78-a6e9-426f-a38c-b10f2d4111ca"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("c804ad48-c431-473f-bdb1-fb4c31afe142"),
                            Name = "only",
                            SuperConditionId = new Guid("a280fb78-a6e9-426f-a38c-b10f2d4111ca")
                        },
                        new
                        {
                            Id = new Guid("7706dfd1-e9ce-4214-99b3-2fee4fc51003"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("c05d0ca9-0c23-444c-afca-925b0bec97ff"),
                            Name = "only",
                            SuperConditionId = new Guid("7706dfd1-e9ce-4214-99b3-2fee4fc51003")
                        },
                        new
                        {
                            Id = new Guid("17b35de2-6c0e-4b2c-b10e-79d88ae6a3cd"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("15fa879c-5f8c-4e4b-b66b-a403a8716b4a"),
                            Name = "only",
                            SuperConditionId = new Guid("17b35de2-6c0e-4b2c-b10e-79d88ae6a3cd")
                        },
                        new
                        {
                            Id = new Guid("67efb514-c4f9-4da0-8d47-bdee37851157"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("e1befcf0-6e2b-4caf-9876-45a8b2c26c1d"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("9385a302-4fbd-4b26-99d8-3abeaa503177"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("496dd4fe-1d75-4ef6-bcdf-a388cbc97762"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f669266-0f6d-4bea-ba68-0b80f8c3c873"),
                            FromTripPointId = new Guid("09d30a9d-e978-433c-9cf0-13e899adfe29"),
                            Mode = 0,
                            ToTripPointId = new Guid("7b385e6e-2e10-4379-a541-03b68a110bb1"),
                            TransferTime = new TimeSpan(0, 0, 4, 21, 0),
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("94e113e2-f1ab-4a75-bbb6-f0e551e74c4c"),
                            FromTripPointId = new Guid("7b385e6e-2e10-4379-a541-03b68a110bb1"),
                            Mode = 1,
                            ToTripPointId = new Guid("5f4a8261-55cf-40de-8e52-12b6cbeb850a"),
                            TransferTime = new TimeSpan(0, 0, 0, 55, 0),
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("5a1d6597-8d2f-4419-b970-6f65b9f54ec6"),
                            FromTripPointId = new Guid("5f4a8261-55cf-40de-8e52-12b6cbeb850a"),
                            ToTripPointId = new Guid("0a5183e3-d620-431d-916b-98f4a7ae5a4f"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("aad78bd6-7a11-4d97-bc5f-c1785f795cdf"),
                            FromTripPointId = new Guid("d0a3b77c-d151-4503-90a2-87f6a5bd1a6d"),
                            Mode = 2,
                            ToTripPointId = new Guid("4709129d-604f-492b-9872-16e39a767a16"),
                            TransferTime = new TimeSpan(0, 0, 3, 13, 0),
                            TripDayId = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a")
                        },
                        new
                        {
                            Id = new Guid("6011ee5b-649d-4e47-b643-407b3c2a43cd"),
                            FromTripPointId = new Guid("4709129d-604f-492b-9872-16e39a767a16"),
                            Mode = 3,
                            ToTripPointId = new Guid("8d5ed9b3-f90e-4334-9360-eb3a04c8925a"),
                            TransferTime = new TimeSpan(0, 0, 8, 18, 0),
                            TripDayId = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a")
                        },
                        new
                        {
                            Id = new Guid("c732ce33-d99e-4b84-8144-d7234ce0fc6c"),
                            FromTripPointId = new Guid("8d5ed9b3-f90e-4334-9360-eb3a04c8925a"),
                            Mode = 3,
                            ToTripPointId = new Guid("c2906e4b-9731-4d23-ab10-818e5b47f9ea"),
                            TransferTime = new TimeSpan(0, 0, 13, 30, 0),
                            TripDayId = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a")
                        },
                        new
                        {
                            Id = new Guid("79fa17db-c1ea-442a-8239-f48cdadf6537"),
                            FromTripPointId = new Guid("400b1f29-2507-495e-bc9a-143c20efe5f4"),
                            Mode = 0,
                            ToTripPointId = new Guid("c193caca-5831-48e8-8cfb-c3f8002c04fc"),
                            TransferTime = new TimeSpan(0, 0, 4, 21, 0),
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("a88905e3-a2a0-4139-9b95-5c1a4e288944"),
                            FromTripPointId = new Guid("c193caca-5831-48e8-8cfb-c3f8002c04fc"),
                            Mode = 1,
                            ToTripPointId = new Guid("23a38512-9cff-47ad-9531-316ad4e8cd25"),
                            TransferTime = new TimeSpan(0, 0, 0, 55, 0),
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("ddbbc2c5-de7e-4768-98a8-5b9a35ba1f8b"),
                            FromTripPointId = new Guid("23a38512-9cff-47ad-9531-316ad4e8cd25"),
                            ToTripPointId = new Guid("ebad9018-637f-4d01-9941-e45ce2acafce"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("7610b5b1-7b61-4a3f-9c9b-c537ab774a39"),
                            FromTripPointId = new Guid("ee12a43a-b4c1-4659-9bfd-249e7ca55af4"),
                            Mode = 2,
                            ToTripPointId = new Guid("2c76427f-3358-4736-9638-ca4a9114b1a4"),
                            TransferTime = new TimeSpan(0, 0, 3, 13, 0),
                            TripDayId = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b")
                        },
                        new
                        {
                            Id = new Guid("5623e7a2-bfb6-46ba-af01-b6b7f86914fe"),
                            FromTripPointId = new Guid("2c76427f-3358-4736-9638-ca4a9114b1a4"),
                            Mode = 3,
                            ToTripPointId = new Guid("2fa9e3f7-9ca3-48a1-9fc5-e276d8f843a8"),
                            TransferTime = new TimeSpan(0, 0, 8, 18, 0),
                            TripDayId = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b")
                        },
                        new
                        {
                            Id = new Guid("55197742-4c8c-4376-a88b-621ed8381eae"),
                            FromTripPointId = new Guid("2fa9e3f7-9ca3-48a1-9fc5-e276d8f843a8"),
                            Mode = 3,
                            ToTripPointId = new Guid("52c19bd2-f2c0-4cf9-945b-54288a65b0b8"),
                            TransferTime = new TimeSpan(0, 0, 13, 30, 0),
                            TripDayId = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("be217011-a787-4eca-9d27-9931ffd1c4a9"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("8a5473ad-60ef-470b-a49d-e02c1c51b812"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        },
                        new
                        {
                            Id = new Guid("089ba557-2125-49c6-a743-407beeb96f18"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("8a5473ad-60ef-470b-a49d-e02c1c51b812"),
                            EndDate = new DateOnly(2024, 11, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 11, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("be217011-a787-4eca-9d27-9931ffd1c4a9")
                        },
                        new
                        {
                            Id = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("be217011-a787-4eca-9d27-9931ffd1c4a9")
                        },
                        new
                        {
                            Id = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f"),
                            Date = new DateOnly(2024, 11, 20),
                            TripId = new Guid("089ba557-2125-49c6-a743-407beeb96f18")
                        },
                        new
                        {
                            Id = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b"),
                            Date = new DateOnly(2024, 11, 21),
                            TripId = new Guid("089ba557-2125-49c6-a743-407beeb96f18")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a926a253-540d-4508-84b5-1e310ce4eeeb"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("eb29d00d-604f-4744-8fb4-fac3ef0db9ea"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("09d30a9d-e978-433c-9cf0-13e899adfe29"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("41a794fc-dd4f-4a3b-ab66-2e623da3eb38"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("7b385e6e-2e10-4379-a541-03b68a110bb1"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("62951070-b660-4f38-b533-3aa18d5c8e2d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("5f4a8261-55cf-40de-8e52-12b6cbeb850a"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("7ca764b2-8522-49da-be1b-31e403f03634"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("0a5183e3-d620-431d-916b-98f4a7ae5a4f"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("1676d649-c588-4c58-9ba8-c4d2de9cac94"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("5d57d9a5-dea9-4077-a2d9-1b8398ca90c7")
                        },
                        new
                        {
                            Id = new Guid("d0a3b77c-d151-4503-90a2-87f6a5bd1a6d"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("bf2a9d86-4f29-4ef3-adac-570b98301d78"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a")
                        },
                        new
                        {
                            Id = new Guid("4709129d-604f-492b-9872-16e39a767a16"),
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("ad31748c-a335-42a9-a446-e7803879681b"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a")
                        },
                        new
                        {
                            Id = new Guid("8d5ed9b3-f90e-4334-9360-eb3a04c8925a"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("b6537ae8-16a8-4d6e-84f9-77a717e7e0ef"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a")
                        },
                        new
                        {
                            Id = new Guid("c2906e4b-9731-4d23-ab10-818e5b47f9ea"),
                            EndTime = new TimeOnly(17, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Parowóz TKi3-120",
                            PlaceId = new Guid("246557ac-83d5-4de5-b07b-eedbadaec443"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(16, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("f98df395-fe31-4f6f-87ec-f9f7ae29ee7a")
                        },
                        new
                        {
                            Id = new Guid("e1027eed-4c49-494f-9aaa-bf761055ae1b"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("eb29d00d-604f-4744-8fb4-fac3ef0db9ea"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("400b1f29-2507-495e-bc9a-143c20efe5f4"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("41a794fc-dd4f-4a3b-ab66-2e623da3eb38"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("c193caca-5831-48e8-8cfb-c3f8002c04fc"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("62951070-b660-4f38-b533-3aa18d5c8e2d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 1,
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("23a38512-9cff-47ad-9531-316ad4e8cd25"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("7b844144-9588-4f3c-af8d-543e2eee08b2"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 1,
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("ebad9018-637f-4d01-9941-e45ce2acafce"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("0b982120-735b-4e9b-9207-609ead4d5d85"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 4,
                            TripDayId = new Guid("8838a598-c57c-4202-a6c0-ba23ed35eb4f")
                        },
                        new
                        {
                            Id = new Guid("ee12a43a-b4c1-4659-9bfd-249e7ca55af4"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("bf2a9d86-4f29-4ef3-adac-570b98301d78"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 1,
                            TripDayId = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b")
                        },
                        new
                        {
                            Id = new Guid("2c76427f-3358-4736-9638-ca4a9114b1a4"),
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("ad31748c-a335-42a9-a446-e7803879681b"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b")
                        },
                        new
                        {
                            Id = new Guid("2fa9e3f7-9ca3-48a1-9fc5-e276d8f843a8"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("b6537ae8-16a8-4d6e-84f9-77a717e7e0ef"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 1,
                            TripDayId = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b")
                        },
                        new
                        {
                            Id = new Guid("52c19bd2-f2c0-4cf9-945b-54288a65b0b8"),
                            EndTime = new TimeOnly(17, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Parowóz TKi3-120",
                            PlaceId = new Guid("4c8edabc-a963-421c-89f3-48100e9ef2d5"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(16, 30, 0),
                            Status = 1,
                            TripDayId = new Guid("14cedc24-6ed9-41d9-8333-700f9a9e806b")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCostPerPerson")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid?>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique()
                        .HasFilter("[TripPointId] IS NOT NULL");

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ca764b2-8522-49da-be1b-31e403f03634"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.711806m,
                            Longitude = 17.721194m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("1676d649-c588-4c58-9ba8-c4d2de9cac94"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        },
                        new
                        {
                            Id = new Guid("246557ac-83d5-4de5-b07b-eedbadaec443"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6514858m,
                            Longitude = 17.810879178559084m,
                            Name = "Parowóz TKi3-120"
                        },
                        new
                        {
                            Id = new Guid("7b844144-9588-4f3c-af8d-543e2eee08b2"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.711806m,
                            Longitude = 17.721194m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("0b982120-735b-4e9b-9207-609ead4d5d85"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        },
                        new
                        {
                            Id = new Guid("4c8edabc-a963-421c-89f3-48100e9ef2d5"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6514858m,
                            Longitude = 17.810879178559084m,
                            Name = "Parowóz TKi3-120"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8a5473ad-60ef-470b-a49d-e02c1c51b812"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("eb29d00d-604f-4744-8fb4-fac3ef0db9ea"),
                            Name = "Kaplica loretańska",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("41a794fc-dd4f-4a3b-ab66-2e623da3eb38"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("62951070-b660-4f38-b533-3aa18d5c8e2d"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("bf2a9d86-4f29-4ef3-adac-570b98301d78"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("ad31748c-a335-42a9-a446-e7803879681b"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("b6537ae8-16a8-4d6e-84f9-77a717e7e0ef"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId");

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
