// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    partial class TravelBuddyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ecee7a78-d9d2-42e9-b42f-8e098851d527"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("8c5a6a66-a48a-46b5-8452-1d7ab8204ebe"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("deabf87a-14dc-47c9-bb1d-1e9c3aaff1a2"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("8c5a6a66-a48a-46b5-8452-1d7ab8204ebe")
                        },
                        new
                        {
                            Id = new Guid("00dc658b-f658-4539-966d-8bd4888d17e9"),
                            Name = "art",
                            SuperCategoryId = new Guid("8c5a6a66-a48a-46b5-8452-1d7ab8204ebe")
                        },
                        new
                        {
                            Id = new Guid("962762b7-5a70-45bc-b4e9-1621099c2ee8"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("635270a1-d999-424c-9e12-e6f707dc3685"),
                            Name = "culture",
                            SuperCategoryId = new Guid("962762b7-5a70-45bc-b4e9-1621099c2ee8")
                        },
                        new
                        {
                            Id = new Guid("702f4508-1a74-4016-97ee-323836c37d9b"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("635270a1-d999-424c-9e12-e6f707dc3685")
                        },
                        new
                        {
                            Id = new Guid("63774bcf-63f1-445a-83a7-e24a032efe6e"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("635270a1-d999-424c-9e12-e6f707dc3685")
                        },
                        new
                        {
                            Id = new Guid("b53d52ca-b0a4-478b-a535-f31b6f14a44c"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("635270a1-d999-424c-9e12-e6f707dc3685")
                        },
                        new
                        {
                            Id = new Guid("b6826bf6-c28e-402f-88d5-ddaeb9c075f2"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("962762b7-5a70-45bc-b4e9-1621099c2ee8")
                        },
                        new
                        {
                            Id = new Guid("faf780f2-6d72-47ab-9f0c-06bc5e8fba33"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("962762b7-5a70-45bc-b4e9-1621099c2ee8")
                        },
                        new
                        {
                            Id = new Guid("1d49983d-8d49-48f8-99b1-2a929be8cd0b"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("962762b7-5a70-45bc-b4e9-1621099c2ee8")
                        },
                        new
                        {
                            Id = new Guid("60541b66-7bc6-4caf-ad69-c865495ab613"),
                            Name = "museum",
                            SuperCategoryId = new Guid("962762b7-5a70-45bc-b4e9-1621099c2ee8")
                        },
                        new
                        {
                            Id = new Guid("0bb068f2-d582-480b-a2cd-a93b80ac1a60"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("57d99f12-8b6e-4c19-a986-915ae0b5b3e1"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("0bb068f2-d582-480b-a2cd-a93b80ac1a60")
                        },
                        new
                        {
                            Id = new Guid("6e168509-b32a-4b75-89ea-d9b8b2030cfc"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("639060df-1fac-4e4d-b0c4-901c0dcee49d"),
                            Name = "park",
                            SuperCategoryId = new Guid("6e168509-b32a-4b75-89ea-d9b8b2030cfc")
                        },
                        new
                        {
                            Id = new Guid("e88c86fe-551b-4c84-9f6b-710feb853a75"),
                            Name = "garden",
                            SuperCategoryId = new Guid("639060df-1fac-4e4d-b0c4-901c0dcee49d")
                        },
                        new
                        {
                            Id = new Guid("e46af7f1-fd71-4256-ac30-48afc6295a80"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("639060df-1fac-4e4d-b0c4-901c0dcee49d")
                        },
                        new
                        {
                            Id = new Guid("69490287-4e94-480d-9989-20183fb1cba6"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("950e85ba-c397-4399-88bd-216395f59ec8"),
                            Name = "forest",
                            SuperCategoryId = new Guid("69490287-4e94-480d-9989-20183fb1cba6")
                        },
                        new
                        {
                            Id = new Guid("16aa1e45-f1dc-4593-8cff-036f30a728df"),
                            Name = "water",
                            SuperCategoryId = new Guid("69490287-4e94-480d-9989-20183fb1cba6")
                        },
                        new
                        {
                            Id = new Guid("86531c12-304d-467e-af8e-654c3247a202"),
                            Name = "spring",
                            SuperCategoryId = new Guid("16aa1e45-f1dc-4593-8cff-036f30a728df")
                        },
                        new
                        {
                            Id = new Guid("3d80299c-f4d0-4373-91ff-8c47f8f3f388"),
                            Name = "reef",
                            SuperCategoryId = new Guid("16aa1e45-f1dc-4593-8cff-036f30a728df")
                        },
                        new
                        {
                            Id = new Guid("36e27574-01c4-4190-9ec3-0508d7d6cc14"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("16aa1e45-f1dc-4593-8cff-036f30a728df")
                        },
                        new
                        {
                            Id = new Guid("e3611628-b490-45f4-a957-6bf638d066ca"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("16aa1e45-f1dc-4593-8cff-036f30a728df")
                        },
                        new
                        {
                            Id = new Guid("26b63b81-0ec9-4aa1-a415-96254bbd4ced"),
                            Name = "sea",
                            SuperCategoryId = new Guid("16aa1e45-f1dc-4593-8cff-036f30a728df")
                        },
                        new
                        {
                            Id = new Guid("c9830c8c-efa3-4f6d-a38c-09c99df44efd"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("69490287-4e94-480d-9989-20183fb1cba6")
                        },
                        new
                        {
                            Id = new Guid("ce27fac8-e94f-4109-b69d-1af920a11dc8"),
                            Name = "peak",
                            SuperCategoryId = new Guid("c9830c8c-efa3-4f6d-a38c-09c99df44efd")
                        },
                        new
                        {
                            Id = new Guid("8a8a9a86-2ca8-4f94-812f-9fbee0d55dc6"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("c9830c8c-efa3-4f6d-a38c-09c99df44efd")
                        },
                        new
                        {
                            Id = new Guid("8ac254c8-c0d5-4c66-9009-3e8e685c4ac9"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("c9830c8c-efa3-4f6d-a38c-09c99df44efd")
                        },
                        new
                        {
                            Id = new Guid("135090b5-c750-4e17-8be4-9f9b1d9976c0"),
                            Name = "rock",
                            SuperCategoryId = new Guid("c9830c8c-efa3-4f6d-a38c-09c99df44efd")
                        },
                        new
                        {
                            Id = new Guid("2da78105-3c98-47d7-913f-297e8e980ecc"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("c9830c8c-efa3-4f6d-a38c-09c99df44efd")
                        },
                        new
                        {
                            Id = new Guid("d4e7e778-1c1b-4f57-8f53-61520a316151"),
                            Name = "sand",
                            SuperCategoryId = new Guid("69490287-4e94-480d-9989-20183fb1cba6")
                        },
                        new
                        {
                            Id = new Guid("dad64e15-2a62-4e6c-888b-602c082ce996"),
                            Name = "dune",
                            SuperCategoryId = new Guid("d4e7e778-1c1b-4f57-8f53-61520a316151")
                        },
                        new
                        {
                            Id = new Guid("d614f7a5-f270-4cc3-ba93-713e45765098"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("ea371a4e-6c45-40b1-a12f-78e343009039"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("96498d5d-8f5a-4ba1-96ec-f62cf5c0c868"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("ea371a4e-6c45-40b1-a12f-78e343009039")
                        },
                        new
                        {
                            Id = new Guid("94e3147c-b359-4a8b-9820-669d1cb259e3"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("96498d5d-8f5a-4ba1-96ec-f62cf5c0c868")
                        },
                        new
                        {
                            Id = new Guid("7c92254a-c401-4d27-b415-27d67efaaa00"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("96498d5d-8f5a-4ba1-96ec-f62cf5c0c868")
                        },
                        new
                        {
                            Id = new Guid("438a0c29-2060-46ee-b2f9-e23363b62f13"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("96498d5d-8f5a-4ba1-96ec-f62cf5c0c868")
                        },
                        new
                        {
                            Id = new Guid("fad7f1e9-bc13-4c51-af53-fba4a4ff785a"),
                            Name = "clock",
                            SuperCategoryId = new Guid("96498d5d-8f5a-4ba1-96ec-f62cf5c0c868")
                        },
                        new
                        {
                            Id = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee"),
                            Name = "sights",
                            SuperCategoryId = new Guid("ea371a4e-6c45-40b1-a12f-78e343009039")
                        },
                        new
                        {
                            Id = new Guid("719d1000-7c0b-4240-8494-4d202e88edda"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("c0b4551c-6c1b-40e5-aee5-11a747f19fb7"),
                            Name = "church",
                            SuperCategoryId = new Guid("719d1000-7c0b-4240-8494-4d202e88edda")
                        },
                        new
                        {
                            Id = new Guid("e0bf98c8-88b2-4e7c-9f56-c250b48b1a29"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("719d1000-7c0b-4240-8494-4d202e88edda")
                        },
                        new
                        {
                            Id = new Guid("0ff538ac-491a-42df-a9df-0a2df3cfa1fc"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("719d1000-7c0b-4240-8494-4d202e88edda")
                        },
                        new
                        {
                            Id = new Guid("33a9c3cb-d28a-4db7-850f-046ec510360d"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("719d1000-7c0b-4240-8494-4d202e88edda")
                        },
                        new
                        {
                            Id = new Guid("fcc728cf-d8fd-424a-9f1d-f50e8aef5ccb"),
                            Name = "temple",
                            SuperCategoryId = new Guid("719d1000-7c0b-4240-8494-4d202e88edda")
                        },
                        new
                        {
                            Id = new Guid("bab02717-b97d-4f6e-acc1-d20c958483a1"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("719d1000-7c0b-4240-8494-4d202e88edda")
                        },
                        new
                        {
                            Id = new Guid("9fc0ce3b-97a7-4005-a50b-ba6b373c5de4"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("719d1000-7c0b-4240-8494-4d202e88edda")
                        },
                        new
                        {
                            Id = new Guid("9a699ca0-78c7-4fbc-befb-e1c5eec26611"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("a855e7a0-3177-42ef-a0c3-e1fc79c14052"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("da42985a-f451-4dd1-9403-ff6a037376ef"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("85b9e725-a668-424e-82bf-305fdfd33ed5"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("54eb9d7d-0f8a-46df-be33-07b9c2e81913"),
                            Name = "tower",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("5cc50071-cecc-49b4-b426-50937a3007d1"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("7143196b-ee8b-409d-8f8b-b4827f77ec45"),
                            Name = "fort",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("0f4ada9b-be8b-4a3c-81a8-87b14761a656"),
                            Name = "castle",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("55b04922-84ab-4113-8781-feee4740d2f8"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("d91914ec-10cb-4311-9435-2c9b07b8cdf3"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("0d8d3606-79d9-47f2-805e-bb21aebaeb44"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("dd6dd7d6-1a4c-4b8b-ae1c-abca98ac11c4"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("d81cebb2-1a7d-40e7-9d41-e65aaf8a62ee")
                        },
                        new
                        {
                            Id = new Guid("7f251a2d-2318-4bf8-89ad-ceabce800c0d"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("0f4c5feb-7577-47d7-85e1-1efde43ceef4"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("139f261a-9956-4c92-b18e-fd0422e21da6"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("3a4641ca-1314-480e-9ce0-8cca2d682f43"),
                            Name = "ship",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("939497ad-275f-4e12-b842-032329eefcb1"),
                            Name = "tank",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("75dc3a4a-9bbf-4aa4-aa32-c5ab1620ac21"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("880e78b4-21df-42aa-b112-56e08fd9bfa2"),
                            Name = "monument",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("f2e55cfa-47ad-4798-b2df-c01cf25330bb"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("d3149fa1-96dc-47ec-a447-9bab06891186"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("8a5d8481-b78e-4696-9a61-360097a4c67f"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("fac2d528-82ef-4354-ab17-b1a7bf6f2445"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("a75817ad-c3cc-49d5-bb74-fc4830a0d505")
                        },
                        new
                        {
                            Id = new Guid("6e03eaca-ed11-4693-8acb-41fc22a29210"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("2b581a28-f373-472b-9b87-88ec337680f5"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("6e03eaca-ed11-4693-8acb-41fc22a29210")
                        },
                        new
                        {
                            Id = new Guid("0b169ab3-6324-4c3b-8cbc-ae6de6207c64"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("4259a098-0110-4842-9165-fb21fa8aea83"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("cbefde6a-b2cc-4278-b0e6-2395e1d7f8e6"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("678b98f3-0757-495e-a2e8-2b174f1de7d5"),
                            Name = "islam",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("9cdb556b-56fa-4e4e-843b-50b015036b62"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("e8c5bfe9-ec35-401d-ad29-4455039248a0"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("795728f2-6039-4f64-9bfb-fc596186c689"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("6ec6810e-1df7-4c51-8d78-b400d0f39db0"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("2b581a28-f373-472b-9b87-88ec337680f5")
                        },
                        new
                        {
                            Id = new Guid("8480b204-2e57-4422-8437-e9ef0dfb4d5d"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("30ff3d97-d387-414b-b907-b1f0034f1111"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("8480b204-2e57-4422-8437-e9ef0dfb4d5d")
                        },
                        new
                        {
                            Id = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("e8c0268f-32ae-4984-a496-ccd58c24c754"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("cb005e69-a190-4039-a123-aa7e49f50372"),
                            Name = "burger",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("4ad140fc-ec5f-4fb5-9c9e-4ee59db1145f"),
                            Name = "regional",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("7eafdf7c-7fdf-44f4-adeb-ff31b793a785"),
                            Name = "italian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("2cd2647a-57ca-48e5-ba8e-bc7363968b0b"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("4af07964-dc53-407f-a587-ad6e5ebdca0e"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("97b62641-faf5-4ae5-b39c-bffb20605fc2"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("94be7884-17c4-4eaa-bfc5-29f1c62f11cb"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("986fa736-7fbf-45b8-96a0-2f9461263e90"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("4bcb958c-4032-49dc-bb84-a117bf1a41ac"),
                            Name = "american",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("d3e30bce-cd84-4329-a649-96b15a491698"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("d8fcdd81-3edd-4547-a58a-2b85ca6ce8dd"),
                            Name = "indian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("30144bc6-8d70-45db-bd1d-ba2e7b9c4f68"),
                            Name = "asian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("a22eb6bd-5de7-4e72-9ba2-290979478780"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("77373772-808d-4752-ac8f-74ddd05f44af"),
                            Name = "french",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("6121665a-e2e1-45cc-91a6-2a0d80dc3b16"),
                            Name = "german",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("77922a46-26b4-4abb-bfe1-b525ca90af34"),
                            Name = "thai",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("6ba68a0b-f458-476a-8bf5-7d1fa9c8896e"),
                            Name = "greek",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("5d3d4f11-0e53-4443-a2f0-fdc6fe73f29a"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("b855a71e-5b13-4b8f-9b04-352fd40e8e23"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("7d38c981-8c93-4753-a9db-16e5901f7f9d"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("b377dbcc-86db-40ed-babf-c1566e7e01e4"),
                            Name = "international",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("6c2a4f82-d726-4c07-a389-ab7e27618d13"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("b551781e-8b8b-4ab6-9c87-8007bb526c76"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("77c6c46d-4337-4731-8785-7a9aba63259d"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("d26c6a39-ba28-4987-b079-60914bbcf659"),
                            Name = "korean",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("aee1dc46-6dbe-4243-a4c5-d73dc2fde036"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("8fd555a1-b6a1-475d-8658-7f16e129027b"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("e2f2fa6f-a4f2-4163-9e10-27dbaaa0f5c0"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("b2e3afcc-526a-453d-9795-f42663d9b358"),
                            Name = "fish",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("5e356471-a127-4bbf-b05b-aee0210912ce"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("708f4c60-807d-4606-ac59-5444c5a70039"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("5cd694b5-2a8b-4651-a0dd-c63feff462ea"),
                            Name = "friture",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("5aa3bf1a-23ed-4083-bb9e-e647fc92feb6"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("1ec3654f-2f3e-4f88-9675-3235484f3822"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("dbdbc8b5-ec6a-4dce-92e3-387a496e9ad5"),
                            Name = "wings",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("326a3b6b-e86a-4dac-971a-77df4a92afc4"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("aadfc87a-e467-4cc2-88b2-f7c07e79be96"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("40693abc-7715-4bbb-9082-62f3b5364cf5"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("7c547f89-d616-4cd9-8cd0-7e51e43f29b5"),
                            Name = "arab",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("cc7299e1-12d6-49f0-bdba-f1698c4c544e"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("b7ac8d16-73b1-4e5d-877e-bb6c745ec4e3"),
                            Name = "russian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("1ad73b10-a7f4-4a31-b34f-6d651edd82d6"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("f1575336-86e7-4e50-90e7-6cefc42a292b"),
                            Name = "african",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("07a7c62b-1ad9-49e0-8c2f-3df47730dd1d"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("adfa39a0-732f-4afd-9fb7-c947abc6aba4"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("000d6879-1b18-4920-b389-9e598ac88324"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("df405199-eeb6-40a0-a98e-896078900530"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("5ce0357e-02f7-478b-b070-74e4568be136"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("ff7e9700-bdeb-4c26-b7de-12de9810d0cb"),
                            Name = "curry",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("b6ea66db-9500-494f-a3cb-28e5f6269c63"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("e0e478ab-609e-4c24-b851-2d36d2e87151"),
                            Name = "persian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("afdad68d-045e-4aca-ba53-0e11473edbc7"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("aaede9c3-0b1f-42f8-bb7b-a7859385fb75"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("77becb5d-de7b-4350-b290-8911009e6bce"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("82b2e90c-816e-4b1d-813d-0d6ee5718d6a"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("058be9a1-2015-45c1-8866-6bb7e9f14b1f"),
                            Name = "pita",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("d806a7eb-0692-4d71-be40-fbecbcb69760"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("7cd424be-d2fe-4110-8281-30af1e418050"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("3ffda866-e1db-4873-978e-293cb6116b77"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("3eb18b73-2c34-4cb5-bb34-a984fbfccb31"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("edcda755-de0b-484c-be55-0994df0d3b90"),
                            Name = "irish",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("345c9df5-7401-4ba9-9dec-8f348b96b164"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("43c189a3-fc95-410c-adf5-b480872cb309"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("e9a5e4e2-9048-41b3-8e6c-d3624af285a2"),
                            Name = "danish",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("10bb26fc-c84d-4400-8e39-9352cb196f5d"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("3cf8a56a-3fa0-48c5-ac1f-77a5e0efe08e"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("034625e1-3ddf-4b6c-9130-36a9a76b93ff"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("678fbdc1-5b19-4ee3-a572-11d8c27fb431"),
                            Name = "western",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("155a3772-e465-4866-9bcc-158e00885c9b"),
                            Name = "european",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("1b19afa9-421e-4f53-b756-f63571288df3"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("55112d2f-8490-4d50-9740-17513f5c2ce9"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("c988f65a-5735-4cb7-b3b1-cfda8441391a"),
                            Name = "soup",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("da482464-4b7b-4978-94ab-b6e39e9f60e0"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("dab41082-7c50-4991-825e-c92507283019"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("2a188e17-c0e8-46de-9788-863f50ea9134"),
                            Name = "czech",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("6dc45b5e-49ff-45fe-a94b-b3c5af4d88c7"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("8cc9d0b8-4e9b-4450-a8cf-1612acf15ac7"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("5f21bf7f-0c3e-48df-bea8-60feeab78956"),
                            Name = "malay",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("c0bb5f4b-adfb-4238-a78d-38e5862455a4"),
                            Name = "chili",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("f80d21b0-bf65-496d-9ee7-1b74a37bfb95"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("be49ab21-44f1-46d7-ab03-774023ed9e74"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("4c84c8a7-3c8e-4bd4-a93f-ac313887b9d2"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("16bd1f54-7f9f-4fb2-961d-fe6750c82935"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("86d7a827-d368-4689-897a-b4274c2f1dbf")
                        },
                        new
                        {
                            Id = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("2077068d-c455-4eac-91e0-5357d5631e3a"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("cf43fa9d-3e1f-4b88-8e8d-2ba451293863"),
                            Name = "burger",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("4c34c382-9fb9-4abf-bfff-2ef269559816"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("a511a03e-6fdb-4cc3-95f0-4bde2cc84416"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("8dc34f44-b3af-4894-905c-7ed2e99f37c6"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("e86c175b-2ab1-4546-a630-00413d4162fc"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("844ecdeb-9cf0-452a-92ce-2433d3d2eef8"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("a0109f9e-bdff-45fc-8bda-5240935bc992"),
                            Name = "wings",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("40fa4b2c-bb39-4830-8f64-38f8cbbdbf85"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("5c75fdb9-4a5d-4669-95a4-f1f3a0312b25"),
                            Name = "pita",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("646ec468-65b9-41ac-baf1-588ed41d6157"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("2cef8a04-177e-44d5-995d-58a900a5a05b"),
                            Name = "soup",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("0ea38022-24fc-4809-ac83-b55c36f08d16"),
                            Name = "salad",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("00928257-aea3-44a8-985d-17647fccc368"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("aa07a3fc-2328-449b-9b5b-ea94ddc26779")
                        },
                        new
                        {
                            Id = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("d6d85ba0-226b-458b-be13-2dc81ac856e4"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("25cd65e8-dc91-49a4-a6b4-f708a9529e5a"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("bc7c4571-912d-4586-8a64-73c0d5e72902"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("f1dafc39-e5f3-4885-946c-fe4175a2bb0f"),
                            Name = "donut",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("15759d91-ba30-48e1-8abd-ab1fd567968a"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("66804a0f-b989-4541-8e74-ddb41653836d"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("62a05337-53ed-4f66-a94b-0908dd5ca287"),
                            Name = "cake",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("e15811ff-a45c-407b-8168-f9dbf05fa905"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("0cb7c2f5-3d1a-489f-aa48-1845d11a5c7f"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("03c4f25f-54aa-461c-b126-c5277ade3f2e"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("5305a945-c48d-40cf-83a7-ea9300639a4d"),
                            Name = "tea",
                            SuperCategoryId = new Guid("cc1cc64f-1115-4794-a777-23c1c6aa1682")
                        },
                        new
                        {
                            Id = new Guid("d116a411-1426-4060-8ba0-4860cb19c469"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("cb040d75-9d2a-4e8e-9b5f-a05429187332"),
                            Name = "bar",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("5a8ba2de-8579-4db7-9c82-ea406ff26e5a"),
                            Name = "pub",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("99a09249-9d98-4cc3-bd27-56f78284b207"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("aa2af664-3d0a-469e-90dd-8672fcfa82d3"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        },
                        new
                        {
                            Id = new Guid("4d836fc8-9c59-4a94-ab90-a66054bf3390"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("7540a161-4201-435a-8d43-ebf8cc48dfa4")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3b3582a3-42d6-401e-8afe-6a14f49330fe"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("d85d36fa-b661-4173-b57a-4c5b422140c6"),
                            Name = "free",
                            SuperConditionId = new Guid("3b3582a3-42d6-401e-8afe-6a14f49330fe")
                        },
                        new
                        {
                            Id = new Guid("eedcf29c-c68a-4eeb-b2f1-0b212943dfd3"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("3b3582a3-42d6-401e-8afe-6a14f49330fe")
                        },
                        new
                        {
                            Id = new Guid("4f069954-3bc2-4cb4-b734-b546dab9e1c8"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("ba23a3fe-a569-454d-a807-90341a1aefa0"),
                            Name = "yes",
                            SuperConditionId = new Guid("4f069954-3bc2-4cb4-b734-b546dab9e1c8")
                        },
                        new
                        {
                            Id = new Guid("42822ace-76a0-4bb0-ab92-ed0353fdbf45"),
                            Name = "limited",
                            SuperConditionId = new Guid("4f069954-3bc2-4cb4-b734-b546dab9e1c8")
                        },
                        new
                        {
                            Id = new Guid("5d1375d5-239f-449f-952a-953fe7987ce9"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("6a7b9336-d1a5-4619-8cc4-c79720a85e58"),
                            Name = "yes",
                            SuperConditionId = new Guid("5d1375d5-239f-449f-952a-953fe7987ce9")
                        },
                        new
                        {
                            Id = new Guid("0a287b1d-0c64-49a9-824e-0bbf6bea2774"),
                            Name = "leashed",
                            SuperConditionId = new Guid("5d1375d5-239f-449f-952a-953fe7987ce9")
                        },
                        new
                        {
                            Id = new Guid("f2ec922c-9af2-44d3-b8c7-1f42ac921668"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("776e39d8-d656-4920-abc4-626d098bab66"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("98a4b0f1-7e55-42ce-9697-ea5f2f61914d"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("776e39d8-d656-4920-abc4-626d098bab66")
                        },
                        new
                        {
                            Id = new Guid("d3a0342d-5477-44ee-aa73-f4f99c8b444d"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("776e39d8-d656-4920-abc4-626d098bab66")
                        },
                        new
                        {
                            Id = new Guid("9ce3462c-06be-486c-9f6d-20dde051bf60"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("d9f64b1c-5731-455a-ada1-a2675bc59eae"),
                            Name = "customers",
                            SuperConditionId = new Guid("9ce3462c-06be-486c-9f6d-20dde051bf60")
                        },
                        new
                        {
                            Id = new Guid("d20ba0e2-5165-4b9c-a068-85fea5169711"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("8be7060d-d94c-47cb-8988-b79d579072b7"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("0219979a-74f6-473d-bdf0-33532950c079"),
                            Name = "no",
                            SuperConditionId = new Guid("8be7060d-d94c-47cb-8988-b79d579072b7")
                        },
                        new
                        {
                            Id = new Guid("56f660d1-c2b7-4ba1-a2c7-f13c5bbbaf58"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("8be7060d-d94c-47cb-8988-b79d579072b7")
                        },
                        new
                        {
                            Id = new Guid("90fc9416-c949-4ac7-9152-cefd5ab821e9"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("c76a6da2-d0bb-4b4f-8c15-37506346e447"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("6d54db0a-aaed-4652-a86f-6fc914b8bede"),
                            Name = "only",
                            SuperConditionId = new Guid("c76a6da2-d0bb-4b4f-8c15-37506346e447")
                        },
                        new
                        {
                            Id = new Guid("62754fd3-6155-4bd6-a7e4-f6916da892d9"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("74207d8f-4b19-4b5b-911a-67e98cf36e11"),
                            Name = "only",
                            SuperConditionId = new Guid("62754fd3-6155-4bd6-a7e4-f6916da892d9")
                        },
                        new
                        {
                            Id = new Guid("bdd551c4-0f7b-4c8e-803d-b40f0b9f4662"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("c7ca2726-3ad6-414f-b1ea-2ada64e34649"),
                            Name = "only",
                            SuperConditionId = new Guid("bdd551c4-0f7b-4c8e-803d-b40f0b9f4662")
                        },
                        new
                        {
                            Id = new Guid("d797fcab-7c73-4d7a-96aa-84e02e15adad"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("073424e8-06b6-475d-9ae5-33886e0c5dc6"),
                            Name = "only",
                            SuperConditionId = new Guid("d797fcab-7c73-4d7a-96aa-84e02e15adad")
                        },
                        new
                        {
                            Id = new Guid("da516081-ac5e-4569-af39-06f2414cee41"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("54f7406b-c96e-408d-b023-60c1f4069cf2"),
                            Name = "only",
                            SuperConditionId = new Guid("da516081-ac5e-4569-af39-06f2414cee41")
                        },
                        new
                        {
                            Id = new Guid("2795e7d6-52f6-4b45-afff-d74c9ccd4c93"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("1276bcc8-2651-439d-b9e8-90f3beed9d09"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("f103c833-abc2-4747-9d02-3be721cc187d"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("58eac5b6-02b2-4898-9810-ed8c62a02c98"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f517bf-6df7-4d21-a018-c49ba20d628c"),
                            FromTripPointId = new Guid("80924960-535a-4dc6-9f70-2dfdcde65d1b"),
                            StartTime = new TimeOnly(10, 20, 0),
                            ToTripPointId = new Guid("00b3654e-0d28-460c-976d-74903450c7e8"),
                            TransferTime = new TimeSpan(0, 0, 30, 0, 0),
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("7808ddba-eb9d-4ac1-a71e-6b5fd73252f9"),
                            FromTripPointId = new Guid("ea8798d4-14f0-4ed5-8866-7e01598f9808"),
                            StartTime = new TimeOnly(12, 0, 0),
                            ToTripPointId = new Guid("fb8dc205-d56f-477b-93f4-a180504d4e18"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("4145ae8a-b646-4267-a88e-aaa1efa2e490"),
                            FromTripPointId = new Guid("fb8dc205-d56f-477b-93f4-a180504d4e18"),
                            StartTime = new TimeOnly(13, 0, 0),
                            ToTripPointId = new Guid("69d15820-9d63-47c5-9aad-2358ec57ca3c"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("5be9f004-1054-40d9-b464-8a77bc75e94d"),
                            FromTripPointId = new Guid("7cf674f9-0517-4d83-822a-721a083685e2"),
                            StartTime = new TimeOnly(12, 40, 0),
                            ToTripPointId = new Guid("0e6e5696-28f3-4661-8505-21f60ead91b3"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("40107dfe-42a8-43d9-b8a5-549cf31584c9")
                        },
                        new
                        {
                            Id = new Guid("967b9b10-93e2-4d84-bc5b-5fe7234512bf"),
                            FromTripPointId = new Guid("0e6e5696-28f3-4661-8505-21f60ead91b3"),
                            StartTime = new TimeOnly(13, 10, 0),
                            ToTripPointId = new Guid("f0fe2ac5-0d7d-4f13-b686-b1f19ab55993"),
                            TransferTime = new TimeSpan(0, 0, 45, 0, 0),
                            TripDayId = new Guid("40107dfe-42a8-43d9-b8a5-549cf31584c9")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("423d0bc6-3ec2-47e3-8632-6e2edc59c0a4"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("7a9f9b48-3399-4b85-9b86-3919fabdb184"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("423d0bc6-3ec2-47e3-8632-6e2edc59c0a4")
                        },
                        new
                        {
                            Id = new Guid("40107dfe-42a8-43d9-b8a5-549cf31584c9"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("423d0bc6-3ec2-47e3-8632-6e2edc59c0a4")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("80924960-535a-4dc6-9f70-2dfdcde65d1b"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("e001b34f-263b-4a2d-a9c3-8c9bbe79aa11"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("00b3654e-0d28-460c-976d-74903450c7e8"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("853a45d7-9a74-4c37-8f52-122f5ce37e86"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("ea8798d4-14f0-4ed5-8866-7e01598f9808"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("e2191d06-6fd6-4a15-9a8d-5d06c783f2fc"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("fb8dc205-d56f-477b-93f4-a180504d4e18"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("6dc2007a-f6bb-49d5-9fc1-474e747cdb64"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("69d15820-9d63-47c5-9aad-2358ec57ca3c"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("07d4df4f-b251-407e-9861-1a6082285541"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("e619c9e3-ad5d-473a-ad02-ba6be80804b7")
                        },
                        new
                        {
                            Id = new Guid("7cf674f9-0517-4d83-822a-721a083685e2"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("5f190689-b7cc-4fb6-945f-1ae4be3c621d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("40107dfe-42a8-43d9-b8a5-549cf31584c9")
                        },
                        new
                        {
                            Id = new Guid("0e6e5696-28f3-4661-8505-21f60ead91b3"),
                            Comment = "Ciekawe skąd ta nazwa ulicy",
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("5a993a80-2464-43a7-aa23-2135368a896a"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("40107dfe-42a8-43d9-b8a5-549cf31584c9")
                        },
                        new
                        {
                            Id = new Guid("f0fe2ac5-0d7d-4f13-b686-b1f19ab55993"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("7fcec66f-f53e-4207-9210-3da308ac4f43"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("40107dfe-42a8-43d9-b8a5-549cf31584c9")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6dc2007a-f6bb-49d5-9fc1-474e747cdb64"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.42426m,
                            Longitude = 17.43164m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("07d4df4f-b251-407e-9861-1a6082285541"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a9f9b48-3399-4b85-9b86-3919fabdb184"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("e001b34f-263b-4a2d-a9c3-8c9bbe79aa11"),
                            City = "Raszkówek",
                            Country = "Poland",
                            Latitude = 51.73393750m,
                            Longitude = 17.74069633m,
                            Name = "Kaplica loretańska",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("853a45d7-9a74-4c37-8f52-122f5ce37e86"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("e2191d06-6fd6-4a15-9a8d-5d06c783f2fc"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("5f190689-b7cc-4fb6-945f-1ae4be3c621d"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("5a993a80-2464-43a7-aa23-2135368a896a"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            State = "Greater Poland Voivodeship",
                            Street = "60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("7fcec66f-f53e-4207-9210-3da308ac4f43"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
