// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    partial class TravelBuddyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0df85826-d181-497a-953f-f6fa4aeb03de"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("9866c833-f702-44e2-8123-0c7f5dd7d226"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("082da384-dc0e-4e71-9c84-550a0825a763"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("9866c833-f702-44e2-8123-0c7f5dd7d226")
                        },
                        new
                        {
                            Id = new Guid("6cd848a7-73a0-4c91-b23d-755936a87cdc"),
                            Name = "art",
                            SuperCategoryId = new Guid("9866c833-f702-44e2-8123-0c7f5dd7d226")
                        },
                        new
                        {
                            Id = new Guid("e5af6568-be3d-4aea-98d3-4975559bb318"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a"),
                            Name = "culture",
                            SuperCategoryId = new Guid("e5af6568-be3d-4aea-98d3-4975559bb318")
                        },
                        new
                        {
                            Id = new Guid("2915e2a3-64be-453c-9081-d42fbbac1a67"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a")
                        },
                        new
                        {
                            Id = new Guid("6dc21a22-3316-4b0b-a2e4-db5c89ff6fa8"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a")
                        },
                        new
                        {
                            Id = new Guid("c293fec7-7164-4d8b-b597-8a82c3332f70"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a")
                        },
                        new
                        {
                            Id = new Guid("f8a42c5b-01d3-4557-9205-4cd6f8a9f09c"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a")
                        },
                        new
                        {
                            Id = new Guid("b52c00bb-d7eb-4722-a8c0-050a9374941d"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a")
                        },
                        new
                        {
                            Id = new Guid("0a521877-3bbd-4528-ba60-cb9e6af87239"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a")
                        },
                        new
                        {
                            Id = new Guid("6273df88-cccb-4bee-8a1d-adc04e0a06e5"),
                            Name = "museum",
                            SuperCategoryId = new Guid("a3a136c2-8935-4df9-b47c-3b62b2c38d8a")
                        },
                        new
                        {
                            Id = new Guid("56b68043-8f1e-4f9c-a54b-7d8fd3c064cb"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("1d7cabb1-e5ce-4f7f-a7b9-d474f3adc90a"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("56b68043-8f1e-4f9c-a54b-7d8fd3c064cb")
                        },
                        new
                        {
                            Id = new Guid("9be99271-ef61-45d1-b878-5c6cb17e7212"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("56f68478-00f7-4f35-8111-eb84035091e9"),
                            Name = "park",
                            SuperCategoryId = new Guid("9be99271-ef61-45d1-b878-5c6cb17e7212")
                        },
                        new
                        {
                            Id = new Guid("68e5c8af-de55-4827-9145-1c8b4fa39860"),
                            Name = "garden",
                            SuperCategoryId = new Guid("56f68478-00f7-4f35-8111-eb84035091e9")
                        },
                        new
                        {
                            Id = new Guid("20d47aed-0e66-45f1-b301-3400192dcee1"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("56f68478-00f7-4f35-8111-eb84035091e9")
                        },
                        new
                        {
                            Id = new Guid("612ed3a4-526b-47fc-b03a-ebe6dafaa160"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("dad8a726-9e13-4d30-85a7-68fd015b303b"),
                            Name = "forest",
                            SuperCategoryId = new Guid("612ed3a4-526b-47fc-b03a-ebe6dafaa160")
                        },
                        new
                        {
                            Id = new Guid("cd973f61-2ba1-47a1-af04-f419b61c6a9c"),
                            Name = "water",
                            SuperCategoryId = new Guid("612ed3a4-526b-47fc-b03a-ebe6dafaa160")
                        },
                        new
                        {
                            Id = new Guid("ab4378e7-ff94-4b8c-a346-b288e0dfc7e2"),
                            Name = "spring",
                            SuperCategoryId = new Guid("cd973f61-2ba1-47a1-af04-f419b61c6a9c")
                        },
                        new
                        {
                            Id = new Guid("4ed8e914-10aa-4f63-b11e-d41556411838"),
                            Name = "reef",
                            SuperCategoryId = new Guid("cd973f61-2ba1-47a1-af04-f419b61c6a9c")
                        },
                        new
                        {
                            Id = new Guid("63fe2a3a-de7d-477a-a618-d5e424695347"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("cd973f61-2ba1-47a1-af04-f419b61c6a9c")
                        },
                        new
                        {
                            Id = new Guid("ee8977e4-2689-4b88-bb2c-0a29f2793d52"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("cd973f61-2ba1-47a1-af04-f419b61c6a9c")
                        },
                        new
                        {
                            Id = new Guid("3e770725-694b-4945-bfc0-67949e99d2e2"),
                            Name = "sea",
                            SuperCategoryId = new Guid("cd973f61-2ba1-47a1-af04-f419b61c6a9c")
                        },
                        new
                        {
                            Id = new Guid("c8543bb0-715b-413f-94e4-3070b2549c31"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("612ed3a4-526b-47fc-b03a-ebe6dafaa160")
                        },
                        new
                        {
                            Id = new Guid("97f4be91-f29e-454e-8aa5-d78ad9b3008f"),
                            Name = "peak",
                            SuperCategoryId = new Guid("c8543bb0-715b-413f-94e4-3070b2549c31")
                        },
                        new
                        {
                            Id = new Guid("6c26e83c-4035-421d-9505-78b788433d30"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("c8543bb0-715b-413f-94e4-3070b2549c31")
                        },
                        new
                        {
                            Id = new Guid("635c95aa-ad9c-4f4f-86a5-5df177f70d9d"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("c8543bb0-715b-413f-94e4-3070b2549c31")
                        },
                        new
                        {
                            Id = new Guid("081d2a14-f043-4539-b378-dd00e753b013"),
                            Name = "rock",
                            SuperCategoryId = new Guid("c8543bb0-715b-413f-94e4-3070b2549c31")
                        },
                        new
                        {
                            Id = new Guid("c0342338-627c-4c96-926e-62f95f72eba9"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("c8543bb0-715b-413f-94e4-3070b2549c31")
                        },
                        new
                        {
                            Id = new Guid("b6f97384-6eea-4d2a-a538-982cff19c11a"),
                            Name = "sand",
                            SuperCategoryId = new Guid("612ed3a4-526b-47fc-b03a-ebe6dafaa160")
                        },
                        new
                        {
                            Id = new Guid("a3af1055-bc8e-48b2-b3a4-59f61ee1166a"),
                            Name = "dune",
                            SuperCategoryId = new Guid("b6f97384-6eea-4d2a-a538-982cff19c11a")
                        },
                        new
                        {
                            Id = new Guid("66f16150-c10c-44c1-845f-611cf8a7fedb"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("f449a82f-e537-4fc1-beb8-71523de76886"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("4b66010c-fc6b-4e40-a4d1-3ae3f9811eca"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("f449a82f-e537-4fc1-beb8-71523de76886")
                        },
                        new
                        {
                            Id = new Guid("a296145d-0bc6-44a8-a568-339985d4e426"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("4b66010c-fc6b-4e40-a4d1-3ae3f9811eca")
                        },
                        new
                        {
                            Id = new Guid("3031f781-7a1d-4782-9e04-0245604c1726"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("4b66010c-fc6b-4e40-a4d1-3ae3f9811eca")
                        },
                        new
                        {
                            Id = new Guid("82a0fd11-6a90-4752-b96e-b89c2c8cb026"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("4b66010c-fc6b-4e40-a4d1-3ae3f9811eca")
                        },
                        new
                        {
                            Id = new Guid("6a729e71-094f-4bd5-ad1a-ef66d3dd14a1"),
                            Name = "clock",
                            SuperCategoryId = new Guid("4b66010c-fc6b-4e40-a4d1-3ae3f9811eca")
                        },
                        new
                        {
                            Id = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9"),
                            Name = "sights",
                            SuperCategoryId = new Guid("f449a82f-e537-4fc1-beb8-71523de76886")
                        },
                        new
                        {
                            Id = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("43af890d-5859-4b6b-8b96-d81a654e971b"),
                            Name = "church",
                            SuperCategoryId = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7")
                        },
                        new
                        {
                            Id = new Guid("63d199b5-faed-4423-b9cd-f5b7f3db7971"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7")
                        },
                        new
                        {
                            Id = new Guid("18259948-9c5e-4130-900d-998cdbba15ab"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7")
                        },
                        new
                        {
                            Id = new Guid("69bc0c72-c8d6-47e2-b12b-c4b0ebdf6a3a"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7")
                        },
                        new
                        {
                            Id = new Guid("a4e8d42e-bb37-4715-b7a6-4afc6f775eff"),
                            Name = "temple",
                            SuperCategoryId = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7")
                        },
                        new
                        {
                            Id = new Guid("107fcf80-eee8-487f-a031-497764a3a3cf"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7")
                        },
                        new
                        {
                            Id = new Guid("a0764d30-d51b-4604-ad56-1ef096f3b7ac"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("4e2895ca-5978-4908-8f11-ba37a63610a7")
                        },
                        new
                        {
                            Id = new Guid("93337de3-84b9-47a4-a5bb-26d75a7b8d3b"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("33c50148-a9f6-4b45-b3b3-0cb4c4cc8597"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("1f57dfac-dff5-4f65-8f16-d26c8865aa30"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("2ba7bac6-2aea-40f9-bf63-99ca2fdd52f5"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("75659750-c371-425e-9b01-7eeee2343d8c"),
                            Name = "tower",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("4f5418da-b367-4299-b7c3-9e9132910fd9"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("cfd90dc0-cb55-44e3-ac13-a4d5c6349edd"),
                            Name = "fort",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("111bc6cf-6fb8-4437-b323-fc27f2d838ed"),
                            Name = "castle",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("b5f3e3f7-8c2a-408e-b8aa-830918445f44"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("6e5a8d4e-1256-4aa2-a854-5505122e0ebc"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("cb617ea0-e46b-49db-a54d-c658ec276b9b"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("ef8bf9f8-86cc-4a65-9b4b-c91581cbf28f"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("50f2b060-d4ff-4e2b-92db-57ed9efe66a9")
                        },
                        new
                        {
                            Id = new Guid("c514c87b-750b-43ba-ab70-45f7e1c9ba1a"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("728daec2-9437-484d-a96c-e989e2a0b2bd"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("4ad96051-e2b0-48b9-be53-bbd3fe6a325f"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("42047adf-4ded-417e-9332-1c18674a71a7"),
                            Name = "ship",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("f1b9e7fc-90d0-4729-8891-b2f59d76c94d"),
                            Name = "tank",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("d82221db-d841-48ae-8083-19ec9c3a2521"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("17021dee-e72a-4114-b253-255b9a4ffb0c"),
                            Name = "monument",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("1de645bf-e01d-4cd2-bba6-307767db25b9"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("426392f4-2589-489f-b4e1-f9153fb7f74a"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("32bbae7d-fe63-4cb4-b7a5-9d01e72b79dc"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("24bececa-036c-4efb-a7fb-993e55ae441e"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("fea19b39-844e-4a3e-aaac-e186076f37d8")
                        },
                        new
                        {
                            Id = new Guid("8da1ce66-07f4-4731-bfcf-e8c6a4589845"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("8da1ce66-07f4-4731-bfcf-e8c6a4589845")
                        },
                        new
                        {
                            Id = new Guid("8f5f02cc-0907-438f-9810-97fe9975cffd"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("9a2a1f91-77de-4a75-83b1-69c4cf86f710"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("f6da6c92-349c-42ae-8620-ed838a32f290"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("8f7d6a34-9fa3-43a0-ba2e-78c59e93cdbc"),
                            Name = "islam",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("f565c58f-73c2-44da-bd57-0b6267ebe62f"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("e3fd88eb-cca9-4c04-9018-0e781cc9dc96"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("14555d46-5641-4b6b-b799-6a66996af478"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("014e6702-6f3f-4eff-b95e-3e34198052b8"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("897ff12d-acbc-4053-a9ac-541b1067d892")
                        },
                        new
                        {
                            Id = new Guid("51b29bab-fe41-492c-8d00-c44bbf0e5315"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("458d0ae4-af2e-4469-a631-b5ed4956cc9b"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("51b29bab-fe41-492c-8d00-c44bbf0e5315")
                        },
                        new
                        {
                            Id = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("50e1c161-99cd-4335-ac02-079061513724"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("f065afef-09cc-42c4-80c9-aa06d2e7c2a1"),
                            Name = "burger",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("f7c0d545-2f76-451f-87d3-28e00c502533"),
                            Name = "regional",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("dadd36b4-742f-43f3-a406-bf32ab232b9d"),
                            Name = "italian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("de1c533d-f014-4271-ac5f-bf71a0ca255e"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("b0567192-a280-4f6d-a7a1-8570df2b92d0"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("06e5a9e1-9e09-4b24-bd56-cb4db637028a"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("a5962610-ef49-4a28-8c1a-67a946cb385d"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("912c7966-2574-4fc4-a6eb-531b52c3422d"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("e81b2a53-0b74-4bc8-a311-7ac1e1ab25dc"),
                            Name = "american",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("6f6ab8b0-4698-4abd-bd50-9da11754b14b"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("f5ef79e1-22ed-481e-805e-67dc6c7a9b4d"),
                            Name = "indian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("44c7c881-0002-4ea1-b724-61ea6d6814c7"),
                            Name = "asian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("5fd68b38-40b7-42b5-b491-b51fd5b4bc98"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("5351b74e-1349-4dd7-bc89-30b0b44dffac"),
                            Name = "french",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("76a7dd72-e74f-4daf-a667-31eea52d72c7"),
                            Name = "german",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("db8ba6ee-c820-4874-9383-b0f8bff5b106"),
                            Name = "thai",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("4d0a36ad-9cb6-4898-8180-dd6e841d8ee5"),
                            Name = "greek",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("3cae3b9a-2504-4002-80f5-19be37aa72b1"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("e936f2f8-5860-44d3-8b07-a7e645b1d393"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("b424b299-2762-40ac-9d6d-3ce4cb22caa7"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("77e77f17-9db9-4603-8970-341e46947858"),
                            Name = "international",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("350e485e-22ed-46c4-89ac-eb0cbf0e6d47"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("e3d83594-2eaf-4b24-8fa1-72f0fcf6304d"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("4ccaa337-a983-45bf-b5d4-d9a7d264b992"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("823ad377-3797-4b7a-a02f-b5a68e72ac31"),
                            Name = "korean",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("521fc5ec-b07d-4edc-881a-e1ea67b22ba8"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("09d1efcc-5f59-49ca-9b41-f3145fdf59ce"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("1411d39b-7d10-4624-a27f-7f50b36b2371"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("af68c5e7-85fe-478a-a830-03dbad1c0bae"),
                            Name = "fish",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("9899737f-df50-4483-96b5-730e0ade7cff"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("0d2818f0-a865-4d34-a4db-229c1c053367"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("16b36a36-d7d9-4447-bd73-b81a7c6634d8"),
                            Name = "friture",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("79d690c7-c11a-407a-9c53-fdd8d566594a"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("613b556c-2b5a-40ed-96e4-cfa6cbeb9eae"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("14ee93a6-f926-47ac-9f88-582c49aa1ba4"),
                            Name = "wings",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("ced26e76-a781-429e-901b-49f07c200973"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("42e05bd1-ef2b-434e-ae79-d3b8fd6dd754"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("54a21e2a-2eb4-4ce3-99ea-b17ca64d16cc"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("8fac0ac9-ea7c-49cf-9979-fb97f4a1ce36"),
                            Name = "arab",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("3caf2fdb-c2f1-4b66-b8b6-621f6873cf6e"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("c44fd1d4-7331-4529-bfaf-038fc92b8729"),
                            Name = "russian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("f7035c1c-8d69-42f0-9de0-9840a7da840a"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("3d329301-bf53-4234-882d-762a4ee321e3"),
                            Name = "african",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("0364e26e-90ca-4add-bff8-729f24aefa40"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("5481403d-2bda-4995-9b44-6269070673c4"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("0986f8bd-52a5-475f-884f-c21598e5fefc"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("6a8cb65a-2679-4ff5-98ff-3820e326ec2d"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("3b21782a-6e97-48a2-8af8-56a48ad3721b"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("bc3d6471-63f8-4a87-89bd-eaf0c5d8d949"),
                            Name = "curry",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("42a0fbe6-d45a-455f-a6b6-24c79d7dbc24"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("d8a4627c-a017-4795-ba85-cd32ebc67dc4"),
                            Name = "persian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("9ff99985-7b1b-4187-9b20-ae0c6650ca44"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("3eb032ac-2380-480e-8147-5ba5d4e24fde"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("ea0d6775-dd83-4a9e-af63-1591edee2fcc"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("5915000e-0360-4274-8876-b4c8f4a1adaa"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("8b9b1bbc-ee1c-4e0a-8501-845ada9059cc"),
                            Name = "pita",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("9bf12612-f163-4e13-a1f9-d125de755dce"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("f726c5fd-9056-493b-9873-d211aaf6864a"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("08d4b46d-095c-4c7a-a2e8-3a29892bd1e0"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("0de6a1c8-6580-4fc3-9075-609c27c96dfc"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("231ad6c8-0cf4-4179-b71f-16d35ce55528"),
                            Name = "irish",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("c59681b7-0165-413b-88fe-45cfc8a3f30a"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("ece2cc68-2044-4d4f-883b-0947452560d4"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("09ef7435-cd21-4b6b-8ca3-f8ed23fae003"),
                            Name = "danish",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("26b5a928-33cc-40e8-bfb3-e8e9544d4205"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("8f0d9719-3369-4d80-be79-139733adba0e"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("302bb281-df2c-4965-9655-7295976d9ea3"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("28f75241-80e2-4be3-b62e-fba70c08c1e3"),
                            Name = "western",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("fc693179-4905-48d8-9b40-822d29b28eab"),
                            Name = "european",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("43f51765-5d95-4227-ac58-d1c78f331e33"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("e44343a3-d069-4383-80ae-07224dbd7d8e"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("2d15a183-3dac-482d-8b80-41352d81c299"),
                            Name = "soup",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("e05deac9-e3ab-4d27-9463-b6f196fa9cab"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("c9d667a1-1845-4602-8b3b-453708cbe21f"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("6fddfbf9-ddbd-4f2a-803a-e68352ba6a05"),
                            Name = "czech",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("a3dfdbe3-4743-4b62-9030-ceb8fbaedcd3"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("d45d779a-2893-493a-950c-dc16014a3f73"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("cb9040e4-3587-4c05-af48-b930b5137391"),
                            Name = "malay",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("b2479138-28b4-417b-a051-5157142d1930"),
                            Name = "chili",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("57159781-5698-41d8-8752-ebe9d834d4cc"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("38c763ca-74e8-4d7b-a734-be2085251902"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("25905a2b-c04c-4b19-8ded-7eaeac5f0417"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("9e92f202-b594-4029-8a8f-bc3c27d705ab"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("d67f3142-83fa-4a47-a4d4-f3432826d7e1")
                        },
                        new
                        {
                            Id = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("28f81015-1de9-4ba3-b519-b1229982d97b"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("d71f7644-5902-434e-b06b-d3f5633eeae5"),
                            Name = "burger",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("f84373ee-e711-4ea4-b067-f0614ec5bd11"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("0f1ca678-7795-4804-a374-78d0ef569266"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("29519409-a442-4a41-bcc0-756be088fed8"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("0c6f678a-84ff-4bcc-b082-dcad01327cd5"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("9f890607-7022-4362-881e-c2b01b5608a1"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("a465a3c0-55fa-4146-b8bb-df64c06b5328"),
                            Name = "wings",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("d4513423-a422-4411-8468-8add05a7d8e5"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("99099b8d-faee-4c7c-888a-fd19a6de10bc"),
                            Name = "pita",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("ee4c11d7-b752-4550-95f6-a24597f16714"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("505c1279-aca1-46cf-9028-4b20288a6f9b"),
                            Name = "soup",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("d378d2f7-1485-46d9-bf5b-37ead7f95cd6"),
                            Name = "salad",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("cc68c3c3-0364-415f-9287-93d1b8a273b4"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("3ae2e6ca-df74-41a8-9594-5f3a063a510a")
                        },
                        new
                        {
                            Id = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("912ac37e-477e-4fbb-a403-7777896bd34c"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("cf536027-9d06-447a-b80d-1234d352a954"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("00ad3264-1cac-4865-9384-d67e5cd42bd7"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("b47d6970-c2ac-4085-a99e-7194a4918339"),
                            Name = "donut",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("a1ac2871-5f5b-4d6b-8756-33e9e352c5e2"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("c2601e3c-c214-403b-9650-f075b2a7693c"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("a529eed8-abd5-42a5-9f42-b8f6dff0b299"),
                            Name = "cake",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("2f2ad4dc-9d94-49f8-8c76-9c5ea2230154"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("a2a4bd2e-70f0-4e3f-8849-c4ee30ece0ef"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("a11fe733-c0b2-4102-afb5-985937b6c75d"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("ef6e36f7-ef19-48ca-b47a-abe991975ae4"),
                            Name = "tea",
                            SuperCategoryId = new Guid("20c77637-e657-4b79-985d-ab96cb4b96e9")
                        },
                        new
                        {
                            Id = new Guid("3b746e62-deeb-44fc-b897-b6e74741af16"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("4d22169c-0b94-47a8-bbea-75f2e8713a32"),
                            Name = "bar",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("61fde017-a877-44e4-b51c-3408f1333ca3"),
                            Name = "pub",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("7082b43d-55e9-4a20-8e5c-e7635576d6af"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("f29dbbb6-b647-4a4a-b35f-859a23768565"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        },
                        new
                        {
                            Id = new Guid("db3796a8-8e68-4fcc-970f-5abb958df9d9"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("fdf2388a-1102-48fd-9472-af8e399e6dd6")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f021c3f-872c-4ffe-9176-110e2f4ce1a6"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("413fc715-2014-4b3d-8353-f77874c9b453"),
                            Name = "free",
                            SuperConditionId = new Guid("7f021c3f-872c-4ffe-9176-110e2f4ce1a6")
                        },
                        new
                        {
                            Id = new Guid("70d7866d-8ff7-4681-817d-16b21fa0a6f6"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("7f021c3f-872c-4ffe-9176-110e2f4ce1a6")
                        },
                        new
                        {
                            Id = new Guid("179a9586-6a31-4c1c-9e26-6b491117d7e5"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("3ae99fe9-7692-4946-bc85-07c683fa3601"),
                            Name = "yes",
                            SuperConditionId = new Guid("179a9586-6a31-4c1c-9e26-6b491117d7e5")
                        },
                        new
                        {
                            Id = new Guid("8acd9e84-70d4-4489-a9ef-d957e1185836"),
                            Name = "limited",
                            SuperConditionId = new Guid("179a9586-6a31-4c1c-9e26-6b491117d7e5")
                        },
                        new
                        {
                            Id = new Guid("ecaf112b-2ab2-4b26-9b69-ccee63b44ed2"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("8fc52170-643f-469f-80c6-74b4efef47ab"),
                            Name = "yes",
                            SuperConditionId = new Guid("ecaf112b-2ab2-4b26-9b69-ccee63b44ed2")
                        },
                        new
                        {
                            Id = new Guid("7c4992a8-cdfe-4dfa-ba8d-a248ff955c9b"),
                            Name = "leashed",
                            SuperConditionId = new Guid("ecaf112b-2ab2-4b26-9b69-ccee63b44ed2")
                        },
                        new
                        {
                            Id = new Guid("6df629a8-16c9-4c9e-a2a2-f718595fb7c3"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("dd5625b2-dc3d-47fa-9617-77a31a41e492"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("06533b85-5677-40b0-b7f0-65fbcd0e712a"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("dd5625b2-dc3d-47fa-9617-77a31a41e492")
                        },
                        new
                        {
                            Id = new Guid("558eed72-a1f1-40c1-9c2d-5fd76a05e951"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("dd5625b2-dc3d-47fa-9617-77a31a41e492")
                        },
                        new
                        {
                            Id = new Guid("edd5ea1d-46a6-418c-b5d0-e6ceb8a91074"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("772a4001-5f1f-47e5-827a-ff7555f6c269"),
                            Name = "customers",
                            SuperConditionId = new Guid("edd5ea1d-46a6-418c-b5d0-e6ceb8a91074")
                        },
                        new
                        {
                            Id = new Guid("6e00977b-65d4-4b85-a170-030357666e34"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("d99f38be-a761-4e90-a5e1-eb1118038656"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("9e982c8d-2cbc-4c9e-accf-e57cd14cef71"),
                            Name = "no",
                            SuperConditionId = new Guid("d99f38be-a761-4e90-a5e1-eb1118038656")
                        },
                        new
                        {
                            Id = new Guid("ed7d9ad2-a037-46f6-9cca-e6f8dc423067"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("d99f38be-a761-4e90-a5e1-eb1118038656")
                        },
                        new
                        {
                            Id = new Guid("9976899c-4618-46b8-b3ef-21c0eaf3625a"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("9a095474-4f69-429a-af6d-ea275f0959e8"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("0d2bd15b-1374-48b8-9a41-421b81c59a42"),
                            Name = "only",
                            SuperConditionId = new Guid("9a095474-4f69-429a-af6d-ea275f0959e8")
                        },
                        new
                        {
                            Id = new Guid("93ba3d4c-86be-4789-b411-6f80d67f5ad0"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("23e84d42-c222-48ac-bd15-50d6e9123099"),
                            Name = "only",
                            SuperConditionId = new Guid("93ba3d4c-86be-4789-b411-6f80d67f5ad0")
                        },
                        new
                        {
                            Id = new Guid("57fb4dbc-71af-4bb4-8e3e-1f5dcd72f07b"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("03de56c9-0be5-4fcf-b20d-1723f725c118"),
                            Name = "only",
                            SuperConditionId = new Guid("57fb4dbc-71af-4bb4-8e3e-1f5dcd72f07b")
                        },
                        new
                        {
                            Id = new Guid("1a267463-6da9-460b-b744-c67da5b23ba3"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("c4012af2-4400-43cf-af05-058ff1f1d607"),
                            Name = "only",
                            SuperConditionId = new Guid("1a267463-6da9-460b-b744-c67da5b23ba3")
                        },
                        new
                        {
                            Id = new Guid("4ccb306c-d07e-425f-9aa1-fe0fc65e2986"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("1b9bdb77-f44b-44a0-8a0a-a1f54897655a"),
                            Name = "only",
                            SuperConditionId = new Guid("4ccb306c-d07e-425f-9aa1-fe0fc65e2986")
                        },
                        new
                        {
                            Id = new Guid("cbfdbdfa-489a-4a1a-bfe3-de63dc31f554"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("b7b582c1-366b-4247-867f-4d2e443643a8"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("13de4348-eaf6-49fe-a1d5-625cbd08b4e9"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("21c4c466-7157-488b-9c07-00a90ca4c11d"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
