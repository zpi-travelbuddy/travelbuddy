// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    partial class TravelBuddyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);

                    b.HasData(
                        new
                        {
                            PlaceCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b"),
                            ProviderPlaceId = new Guid("f11cb634-0ec2-4093-8b89-db9a02946774")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("1794fa91-0f91-4798-b668-1f86eea20a42"),
                            ProviderPlaceId = new Guid("f11cb634-0ec2-4093-8b89-db9a02946774")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d"),
                            ProviderPlaceId = new Guid("f11cb634-0ec2-4093-8b89-db9a02946774")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("d9ac2d7d-ee8e-4ca0-997f-a73c62d3fea8"),
                            ProviderPlaceId = new Guid("f11cb634-0ec2-4093-8b89-db9a02946774")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b"),
                            ProviderPlaceId = new Guid("07329306-ee33-4503-ad60-631641248da4")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325"),
                            ProviderPlaceId = new Guid("07329306-ee33-4503-ad60-631641248da4")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d"),
                            ProviderPlaceId = new Guid("07329306-ee33-4503-ad60-631641248da4")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b"),
                            ProviderPlaceId = new Guid("ae559f8f-cb5c-4087-a3dc-119a280e495d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325"),
                            ProviderPlaceId = new Guid("ae559f8f-cb5c-4087-a3dc-119a280e495d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d"),
                            ProviderPlaceId = new Guid("ae559f8f-cb5c-4087-a3dc-119a280e495d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b"),
                            ProviderPlaceId = new Guid("6e5a189b-490d-4c3a-9e1a-428a469b6f9c")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325"),
                            ProviderPlaceId = new Guid("6e5a189b-490d-4c3a-9e1a-428a469b6f9c")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d"),
                            ProviderPlaceId = new Guid("6e5a189b-490d-4c3a-9e1a-428a469b6f9c")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b"),
                            ProviderPlaceId = new Guid("91d6f73a-53e1-4de3-b64d-b8ec59a57565")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325"),
                            ProviderPlaceId = new Guid("91d6f73a-53e1-4de3-b64d-b8ec59a57565")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d"),
                            ProviderPlaceId = new Guid("91d6f73a-53e1-4de3-b64d-b8ec59a57565")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7"),
                            ProviderPlaceId = new Guid("151ac055-1d1e-4076-b232-bdce26a05230")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6"),
                            ProviderPlaceId = new Guid("151ac055-1d1e-4076-b232-bdce26a05230")
                        });
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b4028241-10c6-49f8-9fa5-f3bb1f942d19"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("edc7849b-3a1e-4c80-8eb7-8051a5c74f17"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("882e821f-4cdc-4d9b-9ac0-9a395ef4dfaf"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("edc7849b-3a1e-4c80-8eb7-8051a5c74f17")
                        },
                        new
                        {
                            Id = new Guid("12d8c96b-af71-4ce4-aa11-31e01fd12c70"),
                            Name = "art",
                            SuperCategoryId = new Guid("edc7849b-3a1e-4c80-8eb7-8051a5c74f17")
                        },
                        new
                        {
                            Id = new Guid("5f4a7bb9-aefa-44c5-8d6d-f67b530bd397"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("32f817f2-7272-49cc-9f93-8fe3d9fad1ee"),
                            Name = "culture",
                            SuperCategoryId = new Guid("5f4a7bb9-aefa-44c5-8d6d-f67b530bd397")
                        },
                        new
                        {
                            Id = new Guid("e4871bb4-7963-4010-93d9-879861121af3"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("32f817f2-7272-49cc-9f93-8fe3d9fad1ee")
                        },
                        new
                        {
                            Id = new Guid("341f12de-8850-4106-b986-d78f994f638c"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("32f817f2-7272-49cc-9f93-8fe3d9fad1ee")
                        },
                        new
                        {
                            Id = new Guid("f9c06365-4252-4f24-854b-3b1356deefb4"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("32f817f2-7272-49cc-9f93-8fe3d9fad1ee")
                        },
                        new
                        {
                            Id = new Guid("1f08516a-df75-44fa-b05b-dac61a2fd884"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("5f4a7bb9-aefa-44c5-8d6d-f67b530bd397")
                        },
                        new
                        {
                            Id = new Guid("ee1a6ed3-849e-49c9-be8f-c9529225d3fe"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("5f4a7bb9-aefa-44c5-8d6d-f67b530bd397")
                        },
                        new
                        {
                            Id = new Guid("34473868-3e60-42f7-9fea-6a26acdf2d7c"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("5f4a7bb9-aefa-44c5-8d6d-f67b530bd397")
                        },
                        new
                        {
                            Id = new Guid("e9deed57-f916-4294-9053-330efddbad7a"),
                            Name = "museum",
                            SuperCategoryId = new Guid("5f4a7bb9-aefa-44c5-8d6d-f67b530bd397")
                        },
                        new
                        {
                            Id = new Guid("80e85eb2-daea-4f00-b0dd-c717b385e4cd"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("836e6c3d-c57a-43fc-a7d6-c8083d1beec4"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("80e85eb2-daea-4f00-b0dd-c717b385e4cd")
                        },
                        new
                        {
                            Id = new Guid("08f56c25-e139-4872-a00a-3c5160f849ac"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("0be79d01-986e-409a-9cf8-5aff7d9d3f35"),
                            Name = "park",
                            SuperCategoryId = new Guid("08f56c25-e139-4872-a00a-3c5160f849ac")
                        },
                        new
                        {
                            Id = new Guid("ab55640c-8f68-4f53-beb6-5955cd7540ef"),
                            Name = "garden",
                            SuperCategoryId = new Guid("0be79d01-986e-409a-9cf8-5aff7d9d3f35")
                        },
                        new
                        {
                            Id = new Guid("e69ae47e-24f5-424f-856b-d84cfd82ebe0"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("0be79d01-986e-409a-9cf8-5aff7d9d3f35")
                        },
                        new
                        {
                            Id = new Guid("a76c0ea8-6b08-4ebd-8cd6-e9a668985737"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("751971f3-d3e4-4cf7-9577-ec235c52e7ff"),
                            Name = "forest",
                            SuperCategoryId = new Guid("a76c0ea8-6b08-4ebd-8cd6-e9a668985737")
                        },
                        new
                        {
                            Id = new Guid("d4e22aa8-4984-49a9-a5fc-e33f052745a4"),
                            Name = "water",
                            SuperCategoryId = new Guid("a76c0ea8-6b08-4ebd-8cd6-e9a668985737")
                        },
                        new
                        {
                            Id = new Guid("f833c7f5-25af-49bc-a5f6-bbb090722aaf"),
                            Name = "spring",
                            SuperCategoryId = new Guid("d4e22aa8-4984-49a9-a5fc-e33f052745a4")
                        },
                        new
                        {
                            Id = new Guid("491ef2d0-3ce0-4511-b6aa-91ca2671cb49"),
                            Name = "reef",
                            SuperCategoryId = new Guid("d4e22aa8-4984-49a9-a5fc-e33f052745a4")
                        },
                        new
                        {
                            Id = new Guid("09b830da-4132-435a-a1f5-a650215b1fd0"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("d4e22aa8-4984-49a9-a5fc-e33f052745a4")
                        },
                        new
                        {
                            Id = new Guid("dd3add1a-772c-4cac-a71b-68732d86c3ba"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("d4e22aa8-4984-49a9-a5fc-e33f052745a4")
                        },
                        new
                        {
                            Id = new Guid("58b8332a-9070-4dd5-b1a5-809bf8cbbb75"),
                            Name = "sea",
                            SuperCategoryId = new Guid("d4e22aa8-4984-49a9-a5fc-e33f052745a4")
                        },
                        new
                        {
                            Id = new Guid("c153ecf8-c901-4946-8239-b4c9997df8c4"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("a76c0ea8-6b08-4ebd-8cd6-e9a668985737")
                        },
                        new
                        {
                            Id = new Guid("6dd93d16-4a09-4a9b-a385-820e4a71a7da"),
                            Name = "peak",
                            SuperCategoryId = new Guid("c153ecf8-c901-4946-8239-b4c9997df8c4")
                        },
                        new
                        {
                            Id = new Guid("5f052a63-34b3-4c52-a452-ef69a4b10b33"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("c153ecf8-c901-4946-8239-b4c9997df8c4")
                        },
                        new
                        {
                            Id = new Guid("8d3ec67b-341e-4fe8-9c5c-b05b3555fedd"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("c153ecf8-c901-4946-8239-b4c9997df8c4")
                        },
                        new
                        {
                            Id = new Guid("429e296f-6dc6-4e4e-9b56-89e9ad1ae083"),
                            Name = "rock",
                            SuperCategoryId = new Guid("c153ecf8-c901-4946-8239-b4c9997df8c4")
                        },
                        new
                        {
                            Id = new Guid("a01e8a5b-7acc-42ed-8580-ba22e788a896"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("c153ecf8-c901-4946-8239-b4c9997df8c4")
                        },
                        new
                        {
                            Id = new Guid("37a6dc87-a783-45db-b144-d1759b465ef3"),
                            Name = "sand",
                            SuperCategoryId = new Guid("a76c0ea8-6b08-4ebd-8cd6-e9a668985737")
                        },
                        new
                        {
                            Id = new Guid("64d67116-ff0a-4d7f-8336-c1748cc016b1"),
                            Name = "dune",
                            SuperCategoryId = new Guid("37a6dc87-a783-45db-b144-d1759b465ef3")
                        },
                        new
                        {
                            Id = new Guid("e9f50e3a-3cea-4dcf-a986-da777dcff506"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("1794fa91-0f91-4798-b668-1f86eea20a42"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d")
                        },
                        new
                        {
                            Id = new Guid("ad97fd2c-59e1-476d-967a-68e7ca048edb"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("1794fa91-0f91-4798-b668-1f86eea20a42")
                        },
                        new
                        {
                            Id = new Guid("ba7c5a14-6531-456c-b59b-35e24b33a3f1"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("1794fa91-0f91-4798-b668-1f86eea20a42")
                        },
                        new
                        {
                            Id = new Guid("2e03cfc2-d3fb-4a0c-9436-d0b8698e069b"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("1794fa91-0f91-4798-b668-1f86eea20a42")
                        },
                        new
                        {
                            Id = new Guid("0458fb2e-c48a-48bc-86ca-1d8f9115aea8"),
                            Name = "clock",
                            SuperCategoryId = new Guid("1794fa91-0f91-4798-b668-1f86eea20a42")
                        },
                        new
                        {
                            Id = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b"),
                            Name = "sights",
                            SuperCategoryId = new Guid("b95b551c-f0e7-4914-9ccb-2a7dbf24ef7d")
                        },
                        new
                        {
                            Id = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("f27ab3f6-9fde-4f51-a38b-f4e45264457b"),
                            Name = "church",
                            SuperCategoryId = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c")
                        },
                        new
                        {
                            Id = new Guid("b13cfa90-81fb-46e6-9241-f7dbb8a2c5ea"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c")
                        },
                        new
                        {
                            Id = new Guid("88bdc1d0-dae8-4abd-ae64-5ab56a492ec4"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c")
                        },
                        new
                        {
                            Id = new Guid("e23b39cb-5e78-4ebc-88c0-f808d6cadb60"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c")
                        },
                        new
                        {
                            Id = new Guid("778f73cf-4a1c-4561-bf5b-65f7abbbd430"),
                            Name = "temple",
                            SuperCategoryId = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c")
                        },
                        new
                        {
                            Id = new Guid("6ee5f320-4623-4884-86b0-e077a9fc2359"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c")
                        },
                        new
                        {
                            Id = new Guid("7e1bcffd-98ff-4e14-9f4a-45c7979f4a79"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("d56f7cf8-5a76-432a-a0dc-253561126e0c")
                        },
                        new
                        {
                            Id = new Guid("1f131cb7-1a7b-4c61-96e9-e7d6e80b50ad"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("a8f75d74-2145-41c0-adbc-4806214438f7"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("17e98354-f6b6-4857-a4e5-c8bd01bce39f"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("199fee46-cbfa-4abc-9ad0-3edefdc3ffd0"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("9fd0629a-0f25-4cde-b4ad-300c72cb2120"),
                            Name = "tower",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("04dcb3d7-1b15-4ca3-b0af-15dc022af4ed"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("9d7eedc1-6dad-4a69-8bb2-01f8f4ccda23"),
                            Name = "fort",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("66509610-52b6-41c3-b8e6-1fc1836b7cc7"),
                            Name = "castle",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("d9ac2d7d-ee8e-4ca0-997f-a73c62d3fea8"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("0b8239ed-d9f2-435d-81d1-b66e8a5c56b8"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("e8808d91-a6c4-496c-9767-b90f089656d7"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("e9f8b7c3-1d04-416e-8185-2b4175e85ceb"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("c25eda38-cdc5-44ff-aa54-6b1f7ce6576b")
                        },
                        new
                        {
                            Id = new Guid("6d7743df-876a-432f-a17d-b5b7413460f0"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("1e482ad5-ea03-411b-b556-b3fe557b2b0e"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("47225852-e75e-4039-9b79-8f104cbc35ee"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("78b7840a-a661-44f2-8d73-6b451d50aed7"),
                            Name = "ship",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("673d1a32-40fc-488f-a6bf-f034efc49d15"),
                            Name = "tank",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("43596b43-e051-4370-999b-a267416b625d"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("d8de6fd6-52dd-481f-a26b-b24694e2cec6"),
                            Name = "monument",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("502ff6c1-a8cd-4fea-870c-72ff9fd5c3d7"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("7bee7563-36f2-4682-8e94-d3818b068ef0"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("dc54bd72-ebde-4b8b-a53c-cc475fc77e8c"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("c548b7a8-6c78-47f8-915b-6ac2d729c7e8"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("2dd55a4e-48ee-43c5-bf41-2dd12d086325")
                        },
                        new
                        {
                            Id = new Guid("8113f978-06dc-4ed8-87b8-dc4ef82d3445"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("8113f978-06dc-4ed8-87b8-dc4ef82d3445")
                        },
                        new
                        {
                            Id = new Guid("bd33e96a-0cb4-46a6-9b25-f4e64b71e446"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("2916462f-7763-4e8d-8cb9-5977cba01847"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("f5e6154a-1eda-4360-8076-b1c01c6c6cf2"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("6c385ab1-6689-4e9b-9d82-b87ded0a8bb0"),
                            Name = "islam",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("c54cb763-c4ab-4260-9355-7eaeecb1da72"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("a4011f17-aa4f-45fa-8adc-afaf9428618c"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("63ffafd2-728d-4810-9385-455bcd7c41da"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("91ef4ee2-458a-4de1-a6c7-541651793ea5"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("02a18789-47d0-4e4a-b4fa-0c0037983974")
                        },
                        new
                        {
                            Id = new Guid("684c4d39-1729-4cb6-b4bb-3752815ba886"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("0b8e8aad-eea3-4c96-b600-e52f2525fa78"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("684c4d39-1729-4cb6-b4bb-3752815ba886")
                        },
                        new
                        {
                            Id = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("78903729-9c17-4ae2-8d3b-397dbcc524d9"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("6ed0840c-aa96-40e7-8e1d-6e12832e1603"),
                            Name = "burger",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("4af3aef4-bb14-4b5e-9342-05b918c8ee6d"),
                            Name = "regional",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("a9d03c32-ac4d-4a31-9887-542a48145f26"),
                            Name = "italian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("5b2c37ae-e1bc-43e2-8252-7313683d2ff8"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("39e4fb5f-bfa9-449c-af53-7daf7a0529f7"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("523c5e38-a44c-4400-bdbf-fdae919c93be"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("7ec66cc3-ed91-4e35-a95f-142359fa608b"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("f6a271e0-bed3-4fac-b1a7-70298d2e86c6"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("2ad9afec-cfc6-4b0e-b6e0-806ad81e8072"),
                            Name = "american",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("b086dcbf-8e70-4b15-8990-144b74ce113b"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("0834bd73-6510-4c17-9f5b-59511a29ff48"),
                            Name = "indian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("fced948a-03df-4bec-83b7-ddba04974d3c"),
                            Name = "asian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("357043e1-986a-4c1c-bcc4-058fda927d58"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("89d3d649-5f16-4595-88b8-9ee58126e421"),
                            Name = "french",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("525765bf-7a06-4679-8ce1-f3adee9ff131"),
                            Name = "german",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("4933c5d0-ee41-4183-81e9-e1bdd27038d6"),
                            Name = "thai",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("fa267ec5-5adf-41b6-8ed5-daf8f47e0b25"),
                            Name = "greek",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("e95ac08a-a532-4123-bf0b-815a7997fd93"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("9bc1af6e-51da-45c1-91f6-1e341385809a"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("458b9253-960e-44ba-a6cb-1ce7d7bdd4a5"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("e063c713-0c74-4a62-ba14-176777f2ba35"),
                            Name = "international",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("968a0669-e32e-4f2f-9876-6123519587c9"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("be7a2aa2-e3e6-48f6-adb0-ebf21769ad5e"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("be76ec05-da94-4d6f-adea-46e7a7336d08"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("ea3ba415-6d57-4a94-b4d6-42efe77af0b4"),
                            Name = "korean",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("926f01ca-53c5-4041-ba9e-d22d331f18c3"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("a5714602-be6c-424b-b92c-bea54ed87bdf"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("41222fe7-0157-45b9-b869-f95e98841d02"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("f1d291c4-5651-4941-85d3-a3748bcc6c48"),
                            Name = "fish",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("bce9d937-8338-49ec-947e-2b78846edcc5"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("ec1399fc-c188-4080-ad72-bc57b8f9b68e"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("2f310161-8d23-4a92-a32e-5e2713821962"),
                            Name = "friture",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("991888dc-6f05-49cf-814d-3ef6619e99dc"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("9ebb29a4-140f-4e3a-bc1e-bf5f721c2718"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("1d750782-23c2-4862-9418-600ea6500b7a"),
                            Name = "wings",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("6fd94e70-87f8-4efe-8e33-642f68d7b8b3"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("22a2444a-28a9-45ef-a868-45f1cdad8544"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("61571cfa-89e3-4fea-b327-18d1c4c14b80"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("f5339b88-822b-469b-b61d-8d1528a40a8b"),
                            Name = "arab",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("de1a2f15-83d9-415a-a888-72b3b1f78a4b"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("d307b234-cf09-4e23-b740-ab8943e18490"),
                            Name = "russian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("22492506-e889-4332-8ba5-155643ecf4c8"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("955e772e-a418-479b-867c-f75d14d41622"),
                            Name = "african",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("052ec867-3254-40a9-a899-d6ad2249fc30"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("9505320b-be30-4498-abc3-abbbe54fbee3"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("d472f1cf-7860-4b60-a9c0-9a031fdf805b"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("114e69ed-526d-4bf1-aab4-f9a1bfdd2bab"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("bbd3954b-1746-49d8-95c2-3aee638b6c4e"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("45f0c4e5-f065-4e49-8c77-2604db8494f4"),
                            Name = "curry",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("9c034120-c70e-4aa5-b235-68c30081a4dd"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("a3ed765a-a8d3-47f6-9316-ac53614697f7"),
                            Name = "persian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("caef0594-2337-4c23-95d8-fe1f0b2e2919"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("a04b8aa3-e32b-4364-a18b-18473bf521cb"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("d50243f3-a98e-4588-b135-7bab8925f407"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("411335bb-358b-491b-bab0-ea8797638388"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("ca84c07f-c83f-4018-9a06-edabd896f1bd"),
                            Name = "pita",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("3fc84717-3c4a-4a91-b112-3a044ec067c0"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("2efe5d2a-66a4-4ca5-80eb-6106e367341c"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("cfa85278-4858-4800-8a78-4c15c6411445"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("bdd343f8-cbf3-4d26-a7f9-5a678156057b"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("f8b64bd2-b4a0-4557-82e5-0f8351976c84"),
                            Name = "irish",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("d2ef6eb6-940f-4459-a976-fc78c60217ec"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("a6b5a031-768b-4486-86a7-d0c1bcb00b06"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("cb271b7e-3519-468a-a2b4-f4324d444683"),
                            Name = "danish",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("46a721a6-5ac6-43a8-ad00-5a514537a601"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("4ebe7a27-5cc4-4ff1-bd7e-5d380bc8d972"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("50c1e528-0589-4f40-a03b-ccdbdeca0dd7"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("1287b467-7909-4687-a140-748b0e5f6512"),
                            Name = "western",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("55bfac84-3cc1-4ad3-a59f-d419c4e92343"),
                            Name = "european",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("857eb968-f17b-4791-afd2-c49445099023"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("ba937fe8-8e23-416c-9b11-fbc4352a8297"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("1f129cfe-b903-4f94-a3dc-782c3f5ad968"),
                            Name = "soup",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("e25df910-97d7-4b2b-a5c4-b4ce14dab0cd"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("5d168d79-f5d1-4f90-a7e3-5f6edbf1dfca"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("655a207f-8a90-413a-bda5-306763e4f1ee"),
                            Name = "czech",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("ac18f3bb-4b45-4814-adc0-5d503bc2024f"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("472b543d-1481-48fd-9e24-80bce0fe338c"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("614c062f-dbc6-4b8d-9553-da622bc8fa8a"),
                            Name = "malay",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("03e31e0b-ffdb-45e7-8c21-39747dd0b6e8"),
                            Name = "chili",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("7502a9ec-acf2-41ca-a11f-488bbba03103"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("211f4054-7536-4acb-b1ab-f3eb2b538ef6"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("f6b13072-e6e8-4155-8035-c70a7611ff2a"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("c97f7937-b362-4e1b-b27c-8ab0d740d0db"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("f0f5771f-cee3-4e15-bd17-76e0f10a30a7")
                        },
                        new
                        {
                            Id = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("10f88d4e-e618-4030-8275-cd3710efe562"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("fdd47872-db4a-41e7-adb2-a39195081d4f"),
                            Name = "burger",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("18c964cf-28ca-4b4e-ad53-5b4ebca06bb6"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("307aa4d5-5b5d-4bd0-83bd-8d0b89633b2c"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("f958b20a-e2b6-43f9-9f45-14d5d4de1f06"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("51dcc686-0f32-44e1-ac05-577a930410a5"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("6136d038-5e04-462c-8dd6-39ac191283d5"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("5e817807-b373-4836-9675-75f6b9c09096"),
                            Name = "wings",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("b74a66d5-69e7-4d5f-8156-ee9127f45171"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("350b2aa7-c24a-4a0b-98ec-33bb2addd3e8"),
                            Name = "pita",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("05dbbd40-ff6e-4b75-b577-6e2a99e03df4"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("d2285b70-809e-4ef1-ac58-0e8b3a458165"),
                            Name = "soup",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("1ab2e758-98a4-4814-be15-afba51656135"),
                            Name = "salad",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("e72471ea-7b9f-49d4-80af-dbf3635d6f6d"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("f986caae-ebcc-4673-9a8a-3a87e6deb346")
                        },
                        new
                        {
                            Id = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("bb53a044-eda0-4523-aa09-c1ff6dc4274b"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("b9a72ce3-07c1-40f8-abe1-feda9c627ba2"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("63a17f7a-06b4-4a71-a56b-983c9e7d46a0"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("19a47bf1-2c88-4396-9911-a7ebb78f18c7"),
                            Name = "donut",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("fba83f70-9105-44ea-9d97-ee58c3d158aa"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("43f92418-203a-463b-9789-7830f949b60c"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("af754faa-a532-4398-b20a-ef52d89d4102"),
                            Name = "cake",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("7bb0e10b-4b6a-418d-beb1-d691766a387b"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("12a73074-4e0d-43b6-bedc-cd2007ff7599"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("c78045d3-4fa3-427d-80b5-1f5bce2d4438"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("5894d0d3-6935-4234-bfa1-3d140e3a3b21"),
                            Name = "tea",
                            SuperCategoryId = new Guid("d5c9f5dc-e1d2-4026-b25f-79a7681ff062")
                        },
                        new
                        {
                            Id = new Guid("c4f37729-41fc-461c-aca1-8473a2570804"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("6e4e721c-0d1f-40d8-b92d-7bf004c82b17"),
                            Name = "bar",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("975fbb15-c5ab-4937-9591-86ab07a51b18"),
                            Name = "pub",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("68000558-4c2f-47a7-914a-0e0a4a0a173c"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("35e92f23-8972-46c1-a7e1-ae2b3699c576"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        },
                        new
                        {
                            Id = new Guid("8e07a448-492d-4cbb-a698-e6d6caa7920e"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("f4c21296-2a6a-490c-80bb-120304dea1c6")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("78c2e086-a11e-4b0a-9740-f4a9fc85d3f1"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("2501d957-82b1-4eac-a6e1-530a1c88532b"),
                            Name = "free",
                            SuperConditionId = new Guid("78c2e086-a11e-4b0a-9740-f4a9fc85d3f1")
                        },
                        new
                        {
                            Id = new Guid("82e4baf4-766e-4e0b-bbbe-526c5638011c"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("78c2e086-a11e-4b0a-9740-f4a9fc85d3f1")
                        },
                        new
                        {
                            Id = new Guid("72ce4718-331c-4f5c-9088-6bf7938e8865"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("299074ac-f43e-4689-895e-fecf59c15020"),
                            Name = "yes",
                            SuperConditionId = new Guid("72ce4718-331c-4f5c-9088-6bf7938e8865")
                        },
                        new
                        {
                            Id = new Guid("dbe64c17-fe2f-4d2c-a2d5-9bd84dd0630a"),
                            Name = "limited",
                            SuperConditionId = new Guid("72ce4718-331c-4f5c-9088-6bf7938e8865")
                        },
                        new
                        {
                            Id = new Guid("01663309-885a-481d-ac4f-88bcab0e95c9"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("155392d0-a1e7-4cf4-aa19-849f6791e477"),
                            Name = "yes",
                            SuperConditionId = new Guid("01663309-885a-481d-ac4f-88bcab0e95c9")
                        },
                        new
                        {
                            Id = new Guid("2db78452-9ce4-4cf8-ba95-7f6ec1c80ec1"),
                            Name = "leashed",
                            SuperConditionId = new Guid("01663309-885a-481d-ac4f-88bcab0e95c9")
                        },
                        new
                        {
                            Id = new Guid("39e31b42-4764-4059-9bb0-96a9cfdb8658"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("dbe5a9d6-144a-430a-a5f4-069010a83ccb"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("0921909e-50fd-481b-86e5-43c9413903f7"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("dbe5a9d6-144a-430a-a5f4-069010a83ccb")
                        },
                        new
                        {
                            Id = new Guid("649efd4d-d6c6-4373-b431-7d523fc41cbe"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("dbe5a9d6-144a-430a-a5f4-069010a83ccb")
                        },
                        new
                        {
                            Id = new Guid("930bf3d6-25a7-4f13-a733-9470802569a5"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("64087e58-6828-4a01-8724-a64b432714c4"),
                            Name = "customers",
                            SuperConditionId = new Guid("930bf3d6-25a7-4f13-a733-9470802569a5")
                        },
                        new
                        {
                            Id = new Guid("761eaf28-cf40-4e4d-bf6b-f005e5482bff"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("cea86681-7ad8-47b9-9f24-c0c0a0aed640"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("9bacbdfd-4c87-4581-99c6-679c4c761021"),
                            Name = "no",
                            SuperConditionId = new Guid("cea86681-7ad8-47b9-9f24-c0c0a0aed640")
                        },
                        new
                        {
                            Id = new Guid("c14971ed-cb32-43a8-b774-aa7416e115e0"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("cea86681-7ad8-47b9-9f24-c0c0a0aed640")
                        },
                        new
                        {
                            Id = new Guid("9854a677-6bce-43bf-9f4e-dea84f85be8a"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("13c4fbc9-3a9d-43ea-9573-34e97ce73b7e"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("622ed97a-e5de-4493-b8d2-eebd423f5e11"),
                            Name = "only",
                            SuperConditionId = new Guid("13c4fbc9-3a9d-43ea-9573-34e97ce73b7e")
                        },
                        new
                        {
                            Id = new Guid("84839285-b012-42a9-8ea3-94e166409823"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("4cb9a661-a596-4409-99b8-aa549f15e20a"),
                            Name = "only",
                            SuperConditionId = new Guid("84839285-b012-42a9-8ea3-94e166409823")
                        },
                        new
                        {
                            Id = new Guid("e9eda27a-d158-4b3f-872f-26c8db1f2485"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("8a21656c-dec3-4070-9526-5b2c7cd27fb5"),
                            Name = "only",
                            SuperConditionId = new Guid("e9eda27a-d158-4b3f-872f-26c8db1f2485")
                        },
                        new
                        {
                            Id = new Guid("9dfaf84e-0c65-4642-a449-524545520031"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("b134c2a9-c14e-4ee4-973e-6f50f33a418b"),
                            Name = "only",
                            SuperConditionId = new Guid("9dfaf84e-0c65-4642-a449-524545520031")
                        },
                        new
                        {
                            Id = new Guid("0bfade11-a9a6-4c14-92e4-a1b4160eaa83"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("b244fe53-59b9-4d4f-8fa6-f6e5e214223e"),
                            Name = "only",
                            SuperConditionId = new Guid("0bfade11-a9a6-4c14-92e4-a1b4160eaa83")
                        },
                        new
                        {
                            Id = new Guid("fcfdba2a-6bb1-4f0f-aa23-ef2a92f277a0"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("a2b7089f-6912-4b76-bfdf-1d4ec95c1ab9"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("2323ca23-e2ab-447a-9139-b7fbbd3e9c61"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("feb561fa-7a9e-45fe-a977-8d6924d64a0a"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ec6d5cea-b254-420b-846e-2e6e71a30777"),
                            FromTripPointId = new Guid("176cc878-a8de-4f73-be44-7bddfceae62c"),
                            Mode = 0,
                            StartTime = new TimeOnly(10, 20, 0),
                            ToTripPointId = new Guid("fcbba43f-b000-4a56-bfab-2a90cece5ffc"),
                            TransferTime = new TimeSpan(0, 0, 14, 21, 0),
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("ccd15f3d-b8fb-4e2f-a2cf-d7ccda672e84"),
                            FromTripPointId = new Guid("62e1b231-2174-4fea-994c-dea5132880d3"),
                            Mode = 1,
                            StartTime = new TimeOnly(12, 0, 0),
                            ToTripPointId = new Guid("6c07d4b5-030b-47bd-9359-dfed8e55ad58"),
                            TransferTime = new TimeSpan(0, 0, 0, 55, 0),
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("a914becc-6d71-42ab-b168-66ec85e1b186"),
                            FromTripPointId = new Guid("6c07d4b5-030b-47bd-9359-dfed8e55ad58"),
                            StartTime = new TimeOnly(13, 0, 0),
                            ToTripPointId = new Guid("9fbb0c66-be16-404e-86aa-3ce654e373b2"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("1cccd723-e77f-4e56-8842-abd6fe0c852a"),
                            FromTripPointId = new Guid("f812e00d-e1f5-472a-9fe6-2303f1cced56"),
                            Mode = 2,
                            StartTime = new TimeOnly(12, 40, 0),
                            ToTripPointId = new Guid("9c650e18-76db-495c-a9bf-07b622a850c0"),
                            TransferTime = new TimeSpan(0, 0, 3, 13, 0),
                            TripDayId = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a")
                        },
                        new
                        {
                            Id = new Guid("a9cf702a-424f-4a2d-87c1-2aaec5ba3a81"),
                            FromTripPointId = new Guid("9c650e18-76db-495c-a9bf-07b622a850c0"),
                            Mode = 3,
                            StartTime = new TimeOnly(13, 10, 0),
                            ToTripPointId = new Guid("7d1ffbc4-e64f-4f46-a66b-519d7042c656"),
                            TransferTime = new TimeSpan(0, 0, 8, 18, 0),
                            TripDayId = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a")
                        },
                        new
                        {
                            Id = new Guid("c518bd7d-da5b-430a-b183-a170799baff2"),
                            FromTripPointId = new Guid("7d1ffbc4-e64f-4f46-a66b-519d7042c656"),
                            Mode = 4,
                            StartTime = new TimeOnly(15, 30, 0),
                            ToTripPointId = new Guid("6597f931-3195-44e4-82b8-66fe73e957d9"),
                            TransferTime = new TimeSpan(0, 0, 13, 30, 0),
                            TripDayId = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2f1570b-fca7-4c57-a337-5de6742de5f8"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("68b8ee11-353b-47a7-942a-6d2e7914b81a"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("d2f1570b-fca7-4c57-a337-5de6742de5f8")
                        },
                        new
                        {
                            Id = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("d2f1570b-fca7-4c57-a337-5de6742de5f8")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("176cc878-a8de-4f73-be44-7bddfceae62c"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("f11cb634-0ec2-4093-8b89-db9a02946774"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("fcbba43f-b000-4a56-bfab-2a90cece5ffc"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("07329306-ee33-4503-ad60-631641248da4"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("62e1b231-2174-4fea-994c-dea5132880d3"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("ae559f8f-cb5c-4087-a3dc-119a280e495d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("6c07d4b5-030b-47bd-9359-dfed8e55ad58"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("37a596d9-e1dd-402e-884b-d14ce6971802"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("9fbb0c66-be16-404e-86aa-3ce654e373b2"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("324904e3-2401-4ca1-acc5-34686182f20a"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("2ee65b73-51e7-442c-b364-a6160643be8a")
                        },
                        new
                        {
                            Id = new Guid("f812e00d-e1f5-472a-9fe6-2303f1cced56"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("6e5a189b-490d-4c3a-9e1a-428a469b6f9c"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a")
                        },
                        new
                        {
                            Id = new Guid("9c650e18-76db-495c-a9bf-07b622a850c0"),
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("91d6f73a-53e1-4de3-b64d-b8ec59a57565"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a")
                        },
                        new
                        {
                            Id = new Guid("7d1ffbc4-e64f-4f46-a66b-519d7042c656"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("151ac055-1d1e-4076-b232-bdce26a05230"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a")
                        },
                        new
                        {
                            Id = new Guid("6597f931-3195-44e4-82b8-66fe73e957d9"),
                            EndTime = new TimeOnly(17, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Parowóz TKi3-120",
                            PlaceId = new Guid("642d88a2-8c74-4fe3-a74d-7005f9f8fbcd"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(16, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("c16ee35f-c3b6-421e-ab26-1f5ee061061a")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37a596d9-e1dd-402e-884b-d14ce6971802"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.711806m,
                            Longitude = 17.721194m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("324904e3-2401-4ca1-acc5-34686182f20a"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        },
                        new
                        {
                            Id = new Guid("642d88a2-8c74-4fe3-a74d-7005f9f8fbcd"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6514858m,
                            Longitude = 17.810879178559084m,
                            Name = "Parowóz TKi3-120"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("68b8ee11-353b-47a7-942a-6d2e7914b81a"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("f11cb634-0ec2-4093-8b89-db9a02946774"),
                            City = "Raszkówek",
                            Country = "Poland",
                            Latitude = 51.73393750m,
                            Longitude = 17.74069633m,
                            Name = "Kaplica loretańska",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("07329306-ee33-4503-ad60-631641248da4"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("ae559f8f-cb5c-4087-a3dc-119a280e495d"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("6e5a189b-490d-4c3a-9e1a-428a469b6f9c"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("91d6f73a-53e1-4de3-b64d-b8ec59a57565"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("151ac055-1d1e-4076-b232-bdce26a05230"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
