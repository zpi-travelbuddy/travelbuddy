// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241031114718_ChangePlaceRequirements")]
    partial class ChangePlaceRequirements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9d82498c-b9ca-4a81-8f7c-a9ae22fd3491"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("ed1b1cba-6cbf-47fa-8930-d33889a6bf67"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("5d33ad4b-3245-494d-b2c8-4ca5cd2e84da"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("ed1b1cba-6cbf-47fa-8930-d33889a6bf67")
                        },
                        new
                        {
                            Id = new Guid("a88992a4-34a5-446c-b77b-805fae0a50ea"),
                            Name = "art",
                            SuperCategoryId = new Guid("ed1b1cba-6cbf-47fa-8930-d33889a6bf67")
                        },
                        new
                        {
                            Id = new Guid("8dd6431b-e715-4a9b-b376-52b6f98016b8"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("fa35eaed-bf12-4e13-a2c4-c15106bd1d0a"),
                            Name = "culture",
                            SuperCategoryId = new Guid("8dd6431b-e715-4a9b-b376-52b6f98016b8")
                        },
                        new
                        {
                            Id = new Guid("6623a55f-b780-4e5e-92b3-f55e4dd6337b"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("fa35eaed-bf12-4e13-a2c4-c15106bd1d0a")
                        },
                        new
                        {
                            Id = new Guid("f0ff4e4e-2afa-4338-95eb-71c4addcbadd"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("fa35eaed-bf12-4e13-a2c4-c15106bd1d0a")
                        },
                        new
                        {
                            Id = new Guid("7577bc27-1c26-45c5-bf01-8372223f324b"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("fa35eaed-bf12-4e13-a2c4-c15106bd1d0a")
                        },
                        new
                        {
                            Id = new Guid("20a7a04c-bd1f-4622-b866-f0aec410b3a1"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("8dd6431b-e715-4a9b-b376-52b6f98016b8")
                        },
                        new
                        {
                            Id = new Guid("25f98c91-0a99-47d9-89d7-6e3230104c82"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("8dd6431b-e715-4a9b-b376-52b6f98016b8")
                        },
                        new
                        {
                            Id = new Guid("e0a31581-07a2-47c9-8332-708d747911ef"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("8dd6431b-e715-4a9b-b376-52b6f98016b8")
                        },
                        new
                        {
                            Id = new Guid("85ad6bce-9577-42a1-8789-7789d461526a"),
                            Name = "museum",
                            SuperCategoryId = new Guid("8dd6431b-e715-4a9b-b376-52b6f98016b8")
                        },
                        new
                        {
                            Id = new Guid("9db8be88-aa06-4ee0-a2ec-fe255d2790bf"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("6f207dfe-26f6-48a9-8f83-2c722755f41a"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("9db8be88-aa06-4ee0-a2ec-fe255d2790bf")
                        },
                        new
                        {
                            Id = new Guid("9f3a4b1b-68bf-4b11-af8b-d10a4de3c354"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("04d4b36b-3775-4d55-8785-9884c89328a3"),
                            Name = "park",
                            SuperCategoryId = new Guid("9f3a4b1b-68bf-4b11-af8b-d10a4de3c354")
                        },
                        new
                        {
                            Id = new Guid("0b409f98-f45b-4896-b504-d395f817f4ea"),
                            Name = "garden",
                            SuperCategoryId = new Guid("04d4b36b-3775-4d55-8785-9884c89328a3")
                        },
                        new
                        {
                            Id = new Guid("50f79b1b-7e20-4630-ac03-c40ab6bc339f"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("04d4b36b-3775-4d55-8785-9884c89328a3")
                        },
                        new
                        {
                            Id = new Guid("f1dc8bc4-4238-4eb4-abb3-67a2bfe0b9e1"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("ded194cb-4a71-477c-be15-f534a05dcf3a"),
                            Name = "forest",
                            SuperCategoryId = new Guid("f1dc8bc4-4238-4eb4-abb3-67a2bfe0b9e1")
                        },
                        new
                        {
                            Id = new Guid("a7ac3b22-9484-4d7d-b2d2-cad3312ea9d9"),
                            Name = "water",
                            SuperCategoryId = new Guid("f1dc8bc4-4238-4eb4-abb3-67a2bfe0b9e1")
                        },
                        new
                        {
                            Id = new Guid("c18b85ce-a76e-46cd-93e6-e9e6435a2cb9"),
                            Name = "spring",
                            SuperCategoryId = new Guid("a7ac3b22-9484-4d7d-b2d2-cad3312ea9d9")
                        },
                        new
                        {
                            Id = new Guid("08da4354-d8f2-4d0a-8542-df0ef60d6c16"),
                            Name = "reef",
                            SuperCategoryId = new Guid("a7ac3b22-9484-4d7d-b2d2-cad3312ea9d9")
                        },
                        new
                        {
                            Id = new Guid("0dc1f79d-dbee-412d-9061-565d0d12f8f6"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("a7ac3b22-9484-4d7d-b2d2-cad3312ea9d9")
                        },
                        new
                        {
                            Id = new Guid("3902dd20-e199-40fe-91ae-4be76c938f8f"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("a7ac3b22-9484-4d7d-b2d2-cad3312ea9d9")
                        },
                        new
                        {
                            Id = new Guid("6586d29a-0f8c-4525-b182-3e0a197a8da2"),
                            Name = "sea",
                            SuperCategoryId = new Guid("a7ac3b22-9484-4d7d-b2d2-cad3312ea9d9")
                        },
                        new
                        {
                            Id = new Guid("de5d8d99-cd21-42aa-973b-ab5a5efe521c"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("f1dc8bc4-4238-4eb4-abb3-67a2bfe0b9e1")
                        },
                        new
                        {
                            Id = new Guid("50d3b57a-427a-49ab-82c4-2762e01797a8"),
                            Name = "peak",
                            SuperCategoryId = new Guid("de5d8d99-cd21-42aa-973b-ab5a5efe521c")
                        },
                        new
                        {
                            Id = new Guid("ae277749-2d77-4523-8fa3-414d978ff0f4"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("de5d8d99-cd21-42aa-973b-ab5a5efe521c")
                        },
                        new
                        {
                            Id = new Guid("14b1925d-205d-4b8d-bc38-1340ef12944a"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("de5d8d99-cd21-42aa-973b-ab5a5efe521c")
                        },
                        new
                        {
                            Id = new Guid("d2807e61-a019-4f59-a263-eb6c0402d535"),
                            Name = "rock",
                            SuperCategoryId = new Guid("de5d8d99-cd21-42aa-973b-ab5a5efe521c")
                        },
                        new
                        {
                            Id = new Guid("a358d970-e58a-4b66-8f59-f5e6ea40f71a"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("de5d8d99-cd21-42aa-973b-ab5a5efe521c")
                        },
                        new
                        {
                            Id = new Guid("f1b66934-5539-4430-8fb8-41cd4c247808"),
                            Name = "sand",
                            SuperCategoryId = new Guid("f1dc8bc4-4238-4eb4-abb3-67a2bfe0b9e1")
                        },
                        new
                        {
                            Id = new Guid("f6692cee-bfdc-4bd0-bfe5-d34be8303ac3"),
                            Name = "dune",
                            SuperCategoryId = new Guid("f1b66934-5539-4430-8fb8-41cd4c247808")
                        },
                        new
                        {
                            Id = new Guid("e40a600f-8673-4dc5-96e8-7d818e5a897e"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("ed45d6e9-e8f6-4fbe-95cf-6a3c7622f1f7"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("62a48e04-d094-457c-ab11-75827c54cf6f"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("ed45d6e9-e8f6-4fbe-95cf-6a3c7622f1f7")
                        },
                        new
                        {
                            Id = new Guid("f41919b8-1e82-4e26-be97-6d63f81a6c09"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("62a48e04-d094-457c-ab11-75827c54cf6f")
                        },
                        new
                        {
                            Id = new Guid("503e96f3-1777-4c20-a16a-4a1750696067"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("62a48e04-d094-457c-ab11-75827c54cf6f")
                        },
                        new
                        {
                            Id = new Guid("018a09e5-6ba9-4b29-ba79-0803feba0f5e"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("62a48e04-d094-457c-ab11-75827c54cf6f")
                        },
                        new
                        {
                            Id = new Guid("95e7879a-1d52-4650-b48e-a02f3616ff87"),
                            Name = "clock",
                            SuperCategoryId = new Guid("62a48e04-d094-457c-ab11-75827c54cf6f")
                        },
                        new
                        {
                            Id = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c"),
                            Name = "sights",
                            SuperCategoryId = new Guid("ed45d6e9-e8f6-4fbe-95cf-6a3c7622f1f7")
                        },
                        new
                        {
                            Id = new Guid("ae05c208-09c8-4432-b137-394210902ce6"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("3fc9ab0a-f620-47e8-b314-991b9d5fe11d"),
                            Name = "church",
                            SuperCategoryId = new Guid("ae05c208-09c8-4432-b137-394210902ce6")
                        },
                        new
                        {
                            Id = new Guid("ba28eccf-18a0-4ba5-8674-565cbb9284b7"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("ae05c208-09c8-4432-b137-394210902ce6")
                        },
                        new
                        {
                            Id = new Guid("ae3fb6db-f746-4667-a704-2ff817df5f56"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("ae05c208-09c8-4432-b137-394210902ce6")
                        },
                        new
                        {
                            Id = new Guid("d83d0f3a-a155-495f-9d04-a249a35dc314"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("ae05c208-09c8-4432-b137-394210902ce6")
                        },
                        new
                        {
                            Id = new Guid("6d2b8f9d-799f-4eaa-b448-8864fab16bd4"),
                            Name = "temple",
                            SuperCategoryId = new Guid("ae05c208-09c8-4432-b137-394210902ce6")
                        },
                        new
                        {
                            Id = new Guid("8f73ffec-308c-4dc9-8da3-7230528c3531"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("ae05c208-09c8-4432-b137-394210902ce6")
                        },
                        new
                        {
                            Id = new Guid("a41ff4a7-f012-40ae-99ed-c70e2806640a"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("ae05c208-09c8-4432-b137-394210902ce6")
                        },
                        new
                        {
                            Id = new Guid("3e272a9d-4ec8-457b-8d2a-dc387f94a16b"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("579d50c6-a335-4fd3-a369-3e548e754358"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("7bf26778-ff1d-49db-a47f-786ec3690b3a"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("9a42dcc2-4d3a-440a-96f7-1f126fa99dfb"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("3d83b5a7-96c1-4ffb-958f-dbe9b5701442"),
                            Name = "tower",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("ad40ad35-dd85-4dbf-b2e1-fc30dbe41282"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("cd5375bd-7ebe-45e0-b0f2-a4e86c563cdf"),
                            Name = "fort",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("4fb09d8d-372b-42a2-98f1-1e3a346e6aac"),
                            Name = "castle",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("0ea0ce41-e53d-4176-9a5b-195848ec4629"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("932c6579-c760-4951-9973-f59d3aa5271b"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("8548c01e-173e-4f13-87dd-2a1a43b5b3e3"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("b42aa0e0-4ad5-4f5e-8dbe-5a12df3a8c61"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("98a06960-d7f9-45c7-b1f9-b6f98fe13e3c")
                        },
                        new
                        {
                            Id = new Guid("6fdd7a4c-c350-4ec4-862f-6a95853c3f65"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("48e07f55-2fe1-4f99-9cf3-84236d0c4616"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("e0bdf8bf-af6c-42c9-af22-e445a63c35c0"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("e8ca3b7c-1904-43b9-9a06-aafed1d2ac4d"),
                            Name = "ship",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("83cc8def-126e-4c30-8c6b-975f2e643aad"),
                            Name = "tank",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("dc9d3ee2-4ccf-46ec-898d-891e3b8e4026"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("76ff4ef9-dd4b-4b27-89a1-16a0c3de0d6a"),
                            Name = "monument",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("f155b796-e947-4b69-b4c7-00ba5ed7db46"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("2a522f64-1334-409b-a101-6976cb9692c4"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("b72957bd-1626-45b2-b2ed-ec02022d7348"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("dbb3ceab-f5ea-4bf7-bce2-40fdc58e710e"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("f9dfd197-fb2b-4896-96bf-0039edd8451f")
                        },
                        new
                        {
                            Id = new Guid("e657d813-86fa-481b-a3bb-b0aae9a5f249"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("45807a74-d366-456c-b377-cefeb6862e00"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("e657d813-86fa-481b-a3bb-b0aae9a5f249")
                        },
                        new
                        {
                            Id = new Guid("4f91b06d-70a0-403c-9ef2-42a1bff16233"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("ea6dacb9-8e97-4807-a531-d78285f7c56f"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("a99f4b1b-7169-4345-a611-530dc8da0b13"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("fe008a13-117d-4be0-ac76-c4647b2e3ff6"),
                            Name = "islam",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("abd074bc-4ef7-422f-9114-af8f03c58c4a"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("78a3fa5f-e2e9-434b-ad50-7592b8b9e152"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("29740d75-4e89-4008-9cbc-4b31a804a0ea"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("f2ed258f-daf6-4e16-af2e-0fb64a9b542f"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("45807a74-d366-456c-b377-cefeb6862e00")
                        },
                        new
                        {
                            Id = new Guid("fb72906b-5164-4a37-86b3-b0e3cdda6737"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("d70a9852-72af-4a52-9e0a-08918d05ef4a"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("fb72906b-5164-4a37-86b3-b0e3cdda6737")
                        },
                        new
                        {
                            Id = new Guid("5259b681-3f24-4486-8d03-736ed1590e40"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("cae7cfab-89c4-496a-8939-da49a3020638"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("fd912528-a116-4021-b9a1-39ce66bafbec"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("b77b85a7-db40-46b5-88f4-9e698833694e"),
                            Name = "burger",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("1f2c4a85-4633-464e-bd07-74e2f0347fb2"),
                            Name = "regional",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("d757b0b9-9a76-4ae7-a97d-f988f35c6436"),
                            Name = "italian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("7d80207e-c275-4f91-a3b5-bc7da0f740d5"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("f087ada7-2be2-41c1-b219-485d750a43f9"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("087a9136-4eaf-4329-a201-e8edb64454ed"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("73e1a74d-62d0-408d-bd1a-77441416cb94"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("c3d8dfab-48ed-4ada-90c1-5bb0b50ce103"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("58be8552-90a7-42b2-b7c7-855f0d836d9e"),
                            Name = "american",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("9ee9ab66-024a-415c-ad5a-294df5c34a8d"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("b65bf9d7-42c4-4f72-8b46-f17b8a3a2d98"),
                            Name = "indian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("4c174a16-f85d-45a1-a198-fd63dbd7868a"),
                            Name = "asian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("ceb2ed33-5d6d-47eb-a0ff-f3ac354f1ccd"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("72b505cc-c4b1-4788-9c24-22b5e936a3db"),
                            Name = "french",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("d5dc398b-552f-4156-8f53-e8d506f5a8c3"),
                            Name = "german",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("1fd1a6f5-fd5e-4e8a-8b3a-4d8113e4194e"),
                            Name = "thai",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("193bab09-2ee6-4e96-a63f-e03dbda130c0"),
                            Name = "greek",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("71afbc68-9675-4789-9d27-57a2bbcc5818"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("7ef25206-7b3b-487f-84ec-8023d989f92a"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("8e5737cb-ab50-4717-99e4-ae893983d902"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("f7c245db-a7f7-4471-bd3c-4363fb486879"),
                            Name = "international",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("3948a637-9df0-435f-bc8b-48e2d8e85754"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("7434be14-b9c4-4e30-a242-e1b60dbb7466"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("2b3f24ba-44e5-4fbf-b1ec-602facbef939"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("72dc254b-470c-4505-a062-99c5aece5cdf"),
                            Name = "korean",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("c3fe6515-41a2-4ee3-980c-f1abf2f33449"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("bdce18ea-6f9b-4f24-b3db-6a3b164c15f4"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("b7f6c03c-7c79-4a33-b5d2-f2806c3d4a63"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("d306464a-15be-4d7b-9ad8-9dbde0a24e2e"),
                            Name = "fish",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("6334f933-463f-4b48-be54-0b8be954aff3"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("8b78cd59-31ff-488f-9d8e-71b19e35e9e1"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("afdc2bae-c40e-4e83-8903-aebcc2522e0f"),
                            Name = "friture",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("2579afa4-b0de-4501-92a1-9585190a07fb"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("361d3ea2-805c-4a96-be73-87006d596667"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("f9fd46c8-1f1e-469b-8ab1-7fb841948109"),
                            Name = "wings",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("f0e7b2fe-45ad-4503-9ad0-1528bf974dc6"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("52e9d582-2fa2-4b77-8c71-d7ada63f69ef"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("8265e83d-12f1-4edc-ad12-383532c86e9d"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("c5a25aa8-0d48-4379-95f0-4f1416ce80c2"),
                            Name = "arab",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("0e1d2beb-44b6-4d5b-a49a-251fb6629c54"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("60986c4a-0a2d-47a4-bc40-651bacf94348"),
                            Name = "russian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("ca5d4118-77d2-4b04-b2bf-e95f226d0932"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("b368b9aa-0e2e-419c-88ea-dca21621ebe1"),
                            Name = "african",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("17e5dfc8-1b9a-4829-b21a-7edfcdd2f0b1"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("c57af3bc-b38b-4bb4-b068-6d8fc9822ce3"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("8f877ca8-41a0-4d3f-8193-d78aba252c17"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("cf8ef81b-aae5-424c-b151-213d183742e7"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("539e04ac-ca27-4783-b750-547dcb37adb5"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("91b81e55-3fb3-4198-a4df-ddf99b7dacf1"),
                            Name = "curry",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("90b93164-d4d0-464e-95b9-b1da03fb27d2"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("9c58d9d9-cfc5-4e81-aa76-4249e6555ce2"),
                            Name = "persian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("99b85dd9-a34a-4c2f-89cd-5c0678900876"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("8765381f-1b6c-452c-bd09-9cd933a014d2"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("c451e700-6117-459e-8f4d-f3419285e64f"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("b036fad2-03f0-418e-a213-da54e394a522"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("3f65c286-0e0a-40b3-8c77-5375d1f51e4f"),
                            Name = "pita",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("625ad2c7-94cb-40ee-9070-6c7b4e413872"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("1c9684a1-ef58-4995-97e1-d8b17ec491ae"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("e719bfbc-f310-429f-a811-b81fbd032101"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("9296dfec-14d8-4925-845f-b4279c84a48c"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("08df1de9-f93b-4735-a670-7bdae53bbbb7"),
                            Name = "irish",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("1662de7d-6867-421b-99c0-ceb5d070d275"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("4bea744d-afb8-419a-81f3-974cfdd33d46"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("23571e0f-9900-4154-b2e0-69e9b3c59491"),
                            Name = "danish",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("9d439fd0-b48a-487a-888d-53e12d326a3a"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("b046df55-dbde-40b3-a31d-ce5d6afbe72b"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("cf897367-02da-4cd4-86b2-6443d18d3a0a"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("93f9b2da-a3ff-4f74-ad76-503d5447917d"),
                            Name = "western",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("1c9abf07-3218-456d-8560-17d21b416c71"),
                            Name = "european",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("46ae060a-678a-4a07-a5e7-612cfefcdd30"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("7bf69a7a-8e6c-41a9-8b6a-a40809862a4c"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("f9861c30-462f-40ab-8d34-53544ac2bcbb"),
                            Name = "soup",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("b1d35d04-7fc4-43a9-b86d-74dc87fc2248"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("208e0fb8-56e5-419a-90bf-fbe3b0cf0ddd"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("afd55c4a-1bb3-453c-9ce7-80eb765f5512"),
                            Name = "czech",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("4eee0e53-3353-41c2-b40b-1af1f745f2b9"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("80abc24f-4051-4880-ba7c-2038d25ab812"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("785ddc09-994e-47f4-ba3e-212ae46cb08c"),
                            Name = "malay",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("6204a866-9a02-4156-bc46-64abf6b43554"),
                            Name = "chili",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("ee12dab6-5704-463a-9213-e319b18c4b98"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("08b2e0b1-876e-42fc-9973-d2fcba83af91"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("e0ab1cf1-ac85-4bc7-a18d-1ede0e91f6e4"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("0e908597-4145-4eae-a6a3-9ac2a1a275fd"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("cae7cfab-89c4-496a-8939-da49a3020638")
                        },
                        new
                        {
                            Id = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("cfd63502-8d39-4573-a253-0efbf248d41a"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("2558d8d3-ac4e-4b32-b179-60c9c57ad559"),
                            Name = "burger",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("a3d10c94-0193-455d-8032-f4a6a507ac2d"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("60543c78-43cf-45d1-be9e-aa61858f1758"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("4c676268-2671-4a4f-8ab8-baf80382601d"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("23cc62ca-0582-4b17-9a24-ef1effa88bbd"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("3be856d1-38fe-4d5d-bea4-ff4fa32e0fc2"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("d0b332a2-e578-459a-9d9b-068bb10f25a4"),
                            Name = "wings",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("b9512e9e-d2ef-471a-80aa-816249be1410"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("4bd0d9a4-fc68-44a1-a9a8-3155414ee55b"),
                            Name = "pita",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("c3d03dd8-00fa-41ba-a2ab-859f536a8cd9"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("60b9468b-4e7a-4b88-80eb-7e69ec5215b0"),
                            Name = "soup",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("982b55ff-24af-4d6f-9823-8932dc648f93"),
                            Name = "salad",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("e57e56a0-df97-4b24-9ea9-00eab1ca13b6"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("edac3b6b-7e56-47a2-a68b-f911c0ab73f6")
                        },
                        new
                        {
                            Id = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("177a53c0-48f5-46e7-97e2-bc429ea12dc0"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("681d288e-6e55-47dc-a812-fb6338ff899b"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("2c2b577d-0f94-4785-8a1e-17b72a1e1642"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("12d05c93-85fb-4163-a25a-b8c4e6489d79"),
                            Name = "donut",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("38ed95d8-8e32-4dce-9bb0-29091ed4643b"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("07ef91d0-0be4-4022-9b50-659c025ebf97"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("f641e2cf-fca2-497f-b532-8f1fd100a84e"),
                            Name = "cake",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("2c14a939-2a0f-4c71-86e1-4685a855fdd0"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("301676d6-0e43-4894-8799-a70763bbecef"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("798c8af7-f8df-4bc0-893a-606c897c759d"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("0c70d085-68a6-4400-af68-513248057d34"),
                            Name = "tea",
                            SuperCategoryId = new Guid("a70fca93-ecf4-458b-b0f2-c21a3abced23")
                        },
                        new
                        {
                            Id = new Guid("968db041-c011-4761-b4a4-8c132f8aebac"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("4291f2e3-d14c-44af-b666-ca5e97684c91"),
                            Name = "bar",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("f8d1d0c3-58ca-49db-b528-3fcb6390f1d6"),
                            Name = "pub",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("d4214fc5-3d2a-41e3-8052-7401a53281d2"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("5150e63c-2588-4e04-bcc0-57f42e786a68"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        },
                        new
                        {
                            Id = new Guid("37e98797-61ba-4db9-b74f-dbe695f781a1"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("5259b681-3f24-4486-8d03-736ed1590e40")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a5f959bc-74a8-4466-bc65-cfb473ba8775"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("f6ba1742-a983-40b8-a83a-11c9f09e0476"),
                            Name = "free",
                            SuperConditionId = new Guid("a5f959bc-74a8-4466-bc65-cfb473ba8775")
                        },
                        new
                        {
                            Id = new Guid("22450057-4a1e-4b08-906c-9858f144c38b"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("a5f959bc-74a8-4466-bc65-cfb473ba8775")
                        },
                        new
                        {
                            Id = new Guid("01ffca24-2564-4c68-8319-bdda5e47c0ef"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("23b73b33-f632-4a80-9b6e-b0b199161145"),
                            Name = "yes",
                            SuperConditionId = new Guid("01ffca24-2564-4c68-8319-bdda5e47c0ef")
                        },
                        new
                        {
                            Id = new Guid("b797d732-0c95-44e7-a782-29b98cd7b015"),
                            Name = "limited",
                            SuperConditionId = new Guid("01ffca24-2564-4c68-8319-bdda5e47c0ef")
                        },
                        new
                        {
                            Id = new Guid("1823743a-0843-41d4-ae98-57a1c8baa51c"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("12b1e798-4357-4b04-a86f-f4f95c073c93"),
                            Name = "yes",
                            SuperConditionId = new Guid("1823743a-0843-41d4-ae98-57a1c8baa51c")
                        },
                        new
                        {
                            Id = new Guid("224a554a-1dbf-463a-9953-825bc76077aa"),
                            Name = "leashed",
                            SuperConditionId = new Guid("1823743a-0843-41d4-ae98-57a1c8baa51c")
                        },
                        new
                        {
                            Id = new Guid("9ab8e070-c021-4e2d-a142-3db2b883e785"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("320b286d-767a-4fb3-b8df-275bd0fa6d23"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("769a45a0-e704-4200-aace-976c46858a85"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("320b286d-767a-4fb3-b8df-275bd0fa6d23")
                        },
                        new
                        {
                            Id = new Guid("46140631-f915-4d34-a645-e3eb0105dd20"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("320b286d-767a-4fb3-b8df-275bd0fa6d23")
                        },
                        new
                        {
                            Id = new Guid("3a32ffe2-5101-4e25-abc4-d25064f616be"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("56335b38-65e0-4b8f-b411-d84b564a2901"),
                            Name = "customers",
                            SuperConditionId = new Guid("3a32ffe2-5101-4e25-abc4-d25064f616be")
                        },
                        new
                        {
                            Id = new Guid("c70eaa6a-b2d5-4666-81a5-5ff777a4d08a"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("752aa33f-e155-4f4f-917b-34bdf35923d6"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("bc8f1b64-3107-41cf-88eb-926e0eb27747"),
                            Name = "no",
                            SuperConditionId = new Guid("752aa33f-e155-4f4f-917b-34bdf35923d6")
                        },
                        new
                        {
                            Id = new Guid("a5a77c54-183c-4294-9180-94efb4be3e9c"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("752aa33f-e155-4f4f-917b-34bdf35923d6")
                        },
                        new
                        {
                            Id = new Guid("843b8d83-902e-4340-aab8-4996dac8e4d7"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("f8808f01-73a1-4272-8940-75d5bf397ece"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("02b1eeb2-c742-4493-a0b8-e62a5ff5f475"),
                            Name = "only",
                            SuperConditionId = new Guid("f8808f01-73a1-4272-8940-75d5bf397ece")
                        },
                        new
                        {
                            Id = new Guid("3f3ec582-660c-4d34-ad0a-885e60c285db"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("09c23e83-6de9-42d4-bd5f-50abe8bf832f"),
                            Name = "only",
                            SuperConditionId = new Guid("3f3ec582-660c-4d34-ad0a-885e60c285db")
                        },
                        new
                        {
                            Id = new Guid("792e20ab-68b6-4d50-be5c-754ad81714ca"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("91043061-8f99-4b48-b0e6-801c16cb906d"),
                            Name = "only",
                            SuperConditionId = new Guid("792e20ab-68b6-4d50-be5c-754ad81714ca")
                        },
                        new
                        {
                            Id = new Guid("4955790a-36b1-4913-9a80-1c978cb8c6fa"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("e86ef87e-8a0a-4927-8da7-4b4f340720b5"),
                            Name = "only",
                            SuperConditionId = new Guid("4955790a-36b1-4913-9a80-1c978cb8c6fa")
                        },
                        new
                        {
                            Id = new Guid("8b8c5359-d182-42dd-b78c-1c7a417310b9"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("70459bb8-d643-4f4a-b880-f70f50e667b8"),
                            Name = "only",
                            SuperConditionId = new Guid("8b8c5359-d182-42dd-b78c-1c7a417310b9")
                        },
                        new
                        {
                            Id = new Guid("95ccf064-02d7-4be9-8815-bd12706fbea7"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("dc0252ec-4386-4b83-8e50-18a94c9efdb9"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("abaa0e18-d926-4e80-9afe-aedb9e234c01"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("16c04489-8103-4cfa-b3c2-bcc7cd6bf7f0"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpenningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
