// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241029122253_AddExchangeRateAndOpenningHours")]
    partial class AddExchangeRateAndOpenningHours
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7b63f310-9be6-4ac5-970e-09f655419d1d"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("7b34d625-526c-40e9-a82e-db84f4da6fa9"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("3188ff7f-35b7-4302-a2c4-4807bea4c705"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("7b34d625-526c-40e9-a82e-db84f4da6fa9")
                        },
                        new
                        {
                            Id = new Guid("9efb426a-77f4-466a-9903-0a318f1b6047"),
                            Name = "art",
                            SuperCategoryId = new Guid("7b34d625-526c-40e9-a82e-db84f4da6fa9")
                        },
                        new
                        {
                            Id = new Guid("47e2919a-a41a-446b-b54d-4105afcd39af"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("640137a6-8c86-4108-8c3a-ff4617c57e00"),
                            Name = "culture",
                            SuperCategoryId = new Guid("47e2919a-a41a-446b-b54d-4105afcd39af")
                        },
                        new
                        {
                            Id = new Guid("74de5c1e-b23f-4830-96c8-05e1fdaed45e"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("640137a6-8c86-4108-8c3a-ff4617c57e00")
                        },
                        new
                        {
                            Id = new Guid("e9fbd2e5-2905-4134-a8da-debe36a6d17d"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("640137a6-8c86-4108-8c3a-ff4617c57e00")
                        },
                        new
                        {
                            Id = new Guid("860f4d42-5bd6-4466-8840-40f51ccd5b71"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("640137a6-8c86-4108-8c3a-ff4617c57e00")
                        },
                        new
                        {
                            Id = new Guid("b0358881-cd9d-4d74-8343-cc26a367f17d"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("47e2919a-a41a-446b-b54d-4105afcd39af")
                        },
                        new
                        {
                            Id = new Guid("7e5e68ed-f576-4097-b722-61c6dec8408b"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("47e2919a-a41a-446b-b54d-4105afcd39af")
                        },
                        new
                        {
                            Id = new Guid("b9692ab7-ae93-4169-9ed0-7f9a0e18a3ac"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("47e2919a-a41a-446b-b54d-4105afcd39af")
                        },
                        new
                        {
                            Id = new Guid("bf66ff01-07d1-4dff-83c2-efb659d16a61"),
                            Name = "museum",
                            SuperCategoryId = new Guid("47e2919a-a41a-446b-b54d-4105afcd39af")
                        },
                        new
                        {
                            Id = new Guid("8ed0eca7-a44b-4e52-bd88-aeb7571cd136"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("224261f0-83bb-498f-a41b-e66c11da2d12"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("8ed0eca7-a44b-4e52-bd88-aeb7571cd136")
                        },
                        new
                        {
                            Id = new Guid("de52c115-2f67-4922-9b0a-7e06ad6ab07b"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("74ffabb5-a3af-45b0-bc4e-d2a843a13e8e"),
                            Name = "park",
                            SuperCategoryId = new Guid("de52c115-2f67-4922-9b0a-7e06ad6ab07b")
                        },
                        new
                        {
                            Id = new Guid("50e55a17-8692-4e49-99fe-d22a19923915"),
                            Name = "garden",
                            SuperCategoryId = new Guid("74ffabb5-a3af-45b0-bc4e-d2a843a13e8e")
                        },
                        new
                        {
                            Id = new Guid("f16bdfbc-94b9-4c44-a3c7-e5a4fdcea38c"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("74ffabb5-a3af-45b0-bc4e-d2a843a13e8e")
                        },
                        new
                        {
                            Id = new Guid("39baab07-f1fe-43c6-9e59-bf005e4a3366"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("6d5ea62c-2982-4690-9adb-9adb0822ac43"),
                            Name = "forest",
                            SuperCategoryId = new Guid("39baab07-f1fe-43c6-9e59-bf005e4a3366")
                        },
                        new
                        {
                            Id = new Guid("04bca61a-8de7-4fbc-bba3-1681fd0fb009"),
                            Name = "water",
                            SuperCategoryId = new Guid("39baab07-f1fe-43c6-9e59-bf005e4a3366")
                        },
                        new
                        {
                            Id = new Guid("99889dc9-8f30-413c-8e9c-5c745d907047"),
                            Name = "spring",
                            SuperCategoryId = new Guid("04bca61a-8de7-4fbc-bba3-1681fd0fb009")
                        },
                        new
                        {
                            Id = new Guid("8ff85d72-5c90-4d0e-a9c4-0328d240f541"),
                            Name = "reef",
                            SuperCategoryId = new Guid("04bca61a-8de7-4fbc-bba3-1681fd0fb009")
                        },
                        new
                        {
                            Id = new Guid("59ed98c7-e6a6-4181-a224-785d3160f10c"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("04bca61a-8de7-4fbc-bba3-1681fd0fb009")
                        },
                        new
                        {
                            Id = new Guid("78052fcd-0856-42d8-bcca-754d0f86d6e3"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("04bca61a-8de7-4fbc-bba3-1681fd0fb009")
                        },
                        new
                        {
                            Id = new Guid("b2412c01-f669-4c60-91b5-b21900ab2387"),
                            Name = "sea",
                            SuperCategoryId = new Guid("04bca61a-8de7-4fbc-bba3-1681fd0fb009")
                        },
                        new
                        {
                            Id = new Guid("7beb4c48-72ba-4626-86d8-87d98a25db66"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("39baab07-f1fe-43c6-9e59-bf005e4a3366")
                        },
                        new
                        {
                            Id = new Guid("69ef5a8b-8f2e-45db-a7b8-137317c2798e"),
                            Name = "peak",
                            SuperCategoryId = new Guid("7beb4c48-72ba-4626-86d8-87d98a25db66")
                        },
                        new
                        {
                            Id = new Guid("84d001cc-fefc-4524-9bbe-97f08ba53b7e"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("7beb4c48-72ba-4626-86d8-87d98a25db66")
                        },
                        new
                        {
                            Id = new Guid("ef712ac1-946e-4f80-95a6-ceb4d07718a5"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("7beb4c48-72ba-4626-86d8-87d98a25db66")
                        },
                        new
                        {
                            Id = new Guid("cefe00f0-baa7-438a-b6d7-eb9de037c3ef"),
                            Name = "rock",
                            SuperCategoryId = new Guid("7beb4c48-72ba-4626-86d8-87d98a25db66")
                        },
                        new
                        {
                            Id = new Guid("6117d8bb-e05a-459c-a4ff-8bc683d2e615"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("7beb4c48-72ba-4626-86d8-87d98a25db66")
                        },
                        new
                        {
                            Id = new Guid("c528a2ed-3581-4d5a-b0c9-1852d071449d"),
                            Name = "sand",
                            SuperCategoryId = new Guid("39baab07-f1fe-43c6-9e59-bf005e4a3366")
                        },
                        new
                        {
                            Id = new Guid("66aeb66e-5ba6-4317-98ff-cbd1ef754d5a"),
                            Name = "dune",
                            SuperCategoryId = new Guid("c528a2ed-3581-4d5a-b0c9-1852d071449d")
                        },
                        new
                        {
                            Id = new Guid("c99e4fe4-ba3f-4615-a144-d68f286da3bc"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("b89da128-1f9a-4c13-8d0e-13e18f2f6401"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("153af551-e8ef-4c83-962e-1aebb3dee381"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("b89da128-1f9a-4c13-8d0e-13e18f2f6401")
                        },
                        new
                        {
                            Id = new Guid("8b9eff9e-34f3-4d60-a606-a2f9cc2f68a0"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("153af551-e8ef-4c83-962e-1aebb3dee381")
                        },
                        new
                        {
                            Id = new Guid("198065ef-37eb-4c60-9f09-593b28e05d86"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("153af551-e8ef-4c83-962e-1aebb3dee381")
                        },
                        new
                        {
                            Id = new Guid("b05560f6-f2e2-41e7-a458-8a69fe6342fe"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("153af551-e8ef-4c83-962e-1aebb3dee381")
                        },
                        new
                        {
                            Id = new Guid("c44b5751-e2f2-4480-92d6-4ea6cd304f7d"),
                            Name = "clock",
                            SuperCategoryId = new Guid("153af551-e8ef-4c83-962e-1aebb3dee381")
                        },
                        new
                        {
                            Id = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c"),
                            Name = "sights",
                            SuperCategoryId = new Guid("b89da128-1f9a-4c13-8d0e-13e18f2f6401")
                        },
                        new
                        {
                            Id = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("8d5f95be-3afa-4e4f-90ae-237be3aa847c"),
                            Name = "church",
                            SuperCategoryId = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307")
                        },
                        new
                        {
                            Id = new Guid("16116a7d-8843-457f-a70b-c314451be43a"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307")
                        },
                        new
                        {
                            Id = new Guid("322eb816-49c7-43ae-a148-d44a9611544a"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307")
                        },
                        new
                        {
                            Id = new Guid("33b1c9e8-b746-4197-9b3b-205bc991a1e6"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307")
                        },
                        new
                        {
                            Id = new Guid("2fed79f7-72a6-44e4-9233-c55c5ce0e750"),
                            Name = "temple",
                            SuperCategoryId = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307")
                        },
                        new
                        {
                            Id = new Guid("8482bcb7-15eb-4be4-86f9-b73ad2872af3"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307")
                        },
                        new
                        {
                            Id = new Guid("876e4e1e-0454-45b3-83ed-5e9724cbf65c"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("09d9562a-038a-4e09-b6b2-769745bc1307")
                        },
                        new
                        {
                            Id = new Guid("f805f3f9-56a7-4b0f-8f07-4fd8afe7ee23"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("e80c0d49-cf0a-4989-9539-22ed46dc3568"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("45d13e55-b13d-40a8-80e2-028c22af61fd"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("f8735471-84ab-44ac-9a32-b635cac4f9f8"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("1464f53a-04cf-4484-8b23-6a43a197f867"),
                            Name = "tower",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("71114f7e-ead5-4381-9e9b-9dfd7717b3e2"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("2ed6d158-40ec-4564-bd19-e0bb687e621a"),
                            Name = "fort",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("1576c6c7-1279-4863-8764-76dc6181bcfc"),
                            Name = "castle",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("8fb95840-51d3-4ec6-b096-0b870cc57d80"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("ffa60165-62cd-43d7-a931-44ff165a94fd"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("9360e0c7-349a-43e4-809a-ae7d6349603d"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("524c3c6b-d8d7-40d6-969f-62e88824e336"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("7aaa4edf-bc2c-414a-8b42-6f62d0f06b5c")
                        },
                        new
                        {
                            Id = new Guid("7daf9360-f839-43e8-a1ae-bfe77d6fd8d3"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("a288d7b8-1072-4e3d-a263-9a36519eed3e"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("8e78623c-23a5-4d0e-940c-cbe99383807d"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("0624085a-bc0a-4ded-b853-848a4ad3bb09"),
                            Name = "ship",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("c6888b3e-b9bb-488d-baf2-015c8eb5efbf"),
                            Name = "tank",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("d0165731-f2e7-49e4-b4a7-bef79e640bdb"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("b4fb6ccf-cbd8-4dba-aec9-d06801ef5cab"),
                            Name = "monument",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("ebe1f45b-b40d-4fe6-8e17-685bf3580de0"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("8577b89e-ac29-4362-baaf-621ad2a26248"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("98949c80-e684-4da7-97d9-00cd6f9646c7"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("03f07365-d547-4a1a-b081-3292777bfa6c"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("c89ef122-c3b9-4003-bcc8-1ec3dea0c586")
                        },
                        new
                        {
                            Id = new Guid("5a9e850d-04b3-425f-a347-3ed537f08e35"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("5a9e850d-04b3-425f-a347-3ed537f08e35")
                        },
                        new
                        {
                            Id = new Guid("1ca8156b-8da5-462e-971f-fad73c389fdf"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("ac4912ea-ebcf-428e-b25b-e72cf4e6f5d8"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("c929ff7c-ccf4-4be6-8894-6db1bec147db"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("290a38b4-ed6f-48d1-8764-df3652ed6548"),
                            Name = "islam",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("21d69215-6f42-40b7-a1cb-05ed03e779ca"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("1d5ea2e7-341d-4a67-8a63-71b66954ccc0"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("4c0ab2e9-8183-46f6-ae85-5c7052cba7ce"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("8503f02d-310a-40e9-9504-a7fbc97ec401"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("75cec86b-2f25-4d2e-bbb0-b892c970c28d")
                        },
                        new
                        {
                            Id = new Guid("bb7b8b34-0223-4347-acfc-aa6712d00072"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("cdfeca1b-a56b-40ce-8531-02925fa83eca"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("bb7b8b34-0223-4347-acfc-aa6712d00072")
                        },
                        new
                        {
                            Id = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("2492de00-9f09-4dcc-92e6-834c6f2a056f"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("28efd463-1796-406e-91d0-3d1698cb82a0"),
                            Name = "burger",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f20cbe3f-233d-4a1d-ad54-41927f62ebe4"),
                            Name = "regional",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("483dbc2e-847f-4c71-a731-8194696ea893"),
                            Name = "italian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("a7e582f4-1bd9-4097-a0ea-2c505f4d47b4"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("e27466c7-54ca-4623-a03e-4a091c05fa38"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("2b201a67-714e-4adc-b2ee-89524ff6b9f1"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("6b933567-dee1-45ba-9f92-660fedac61c0"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("0bba74e3-2863-484d-b5db-3f0b7b350848"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("52320bee-e8a3-4c57-b877-d5afc6b39d5f"),
                            Name = "american",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("d59013bd-57f9-4f11-9e68-eedd9908f46a"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("7e9c4c80-7fd3-4176-86b3-c3ac2df667ef"),
                            Name = "indian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("a62c08a4-bdc0-40db-b22a-5aed85331b11"),
                            Name = "asian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("e8187f9e-bd6a-4ae1-bce8-bb7eb5cfb979"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("00509118-e725-402a-bb3e-3f3cd65bed9b"),
                            Name = "french",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("0092b07d-4524-43c9-9051-da05984063bd"),
                            Name = "german",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("522dc9b8-a603-442e-becc-95bc9b5d782f"),
                            Name = "thai",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("183e00d6-fb7b-4bda-89bb-dab3b4d84c28"),
                            Name = "greek",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("5c3e8305-75ef-44a3-86fd-38e75f56ab02"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("fcc9f5b9-f8e4-47ab-beb0-c7be07300822"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("d6319ef4-d1c8-4d54-af2f-9fce5cb5fd89"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("9ec02a06-fff5-494b-ac54-ecbbb1fbc411"),
                            Name = "international",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("43ccec56-2c20-47f1-be17-b1f04f44d047"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("7d80dbf4-99be-4aa0-9a0c-9318a7f7559f"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("3ce10d37-e4e2-4b02-8965-88b673b17388"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f8494eb5-031f-4f2c-b92f-97a2d233459c"),
                            Name = "korean",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("cd55e421-863f-408a-a3f6-e103fad2e26a"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("1efbee3d-9149-4416-a63d-874014103c8d"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("1d004e3d-056b-4987-a0a6-3d134421d847"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("64deee27-714b-4c8e-9449-ce6be610dc65"),
                            Name = "fish",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("e9ccc5ec-74f5-4271-b060-7f18154efd2d"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("6d9cc24f-f0af-467a-9d9b-802fa4463dff"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f20888cd-8ce6-4aad-b805-23172e828dfc"),
                            Name = "friture",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("a89f7803-0a46-4de4-866d-575cdcd3c25f"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("711c1c65-d62b-40a9-878e-fe364c0b86e8"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("09a6e7b6-45cd-45f5-a61f-6999775b1134"),
                            Name = "wings",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("e0e7d620-f895-4d58-9805-badfb149a54c"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("06b2bc0f-436b-4b44-89bb-08f61eeea188"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("98a7a582-3217-4f43-845b-54ca7fd54811"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("20ce2baf-6ec9-41af-9215-62092fee9844"),
                            Name = "arab",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("ea60cd0b-2836-4533-9528-0646768bf869"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("a6f829a0-90d2-44e8-afcb-01f8a51243e3"),
                            Name = "russian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("43503354-a65b-4bca-962a-106dd5fe86d3"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("d381564d-8254-4d1d-9986-f94da65d8e71"),
                            Name = "african",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("c84c86b8-fb66-415c-9f22-3a7b4ee8b75a"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("ad8acd63-0491-4af9-bcf0-0fada2acae7b"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("c3a786f7-0aed-4a70-8a7a-163c8f0932e8"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("b965c4d6-06b6-4935-b5fa-f1a5bb54bdd6"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("9b003dd3-e06a-4aae-a078-72dd14fab3ff"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("29ed1573-6a49-4f71-a3e5-d9973fa61a9e"),
                            Name = "curry",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f033fd7a-6a96-4400-abaa-b498482ce343"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("fdf7ac95-4b7d-47e7-aaa5-4f32a4c1bde6"),
                            Name = "persian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("4afaf282-e9ab-4319-9574-b8c5fae92770"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("337c3482-93b4-4557-b064-4182837c679f"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("688da2be-340c-44e4-a447-97c2fa8a26a1"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("cafe07c8-2275-44b9-bb13-9f2d8249b8e8"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f14705b9-48be-48ae-9877-baf0495436a0"),
                            Name = "pita",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("6d7dd8ee-06db-401a-8e06-5ab3e4d76894"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("3cc7a8de-45ef-4804-8927-15ff7acc2cb2"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("28e1142f-e6d8-49b7-b62d-cdc4d9a9dec2"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f638c855-914c-4b23-a1dd-8c19b6a7adf5"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("a2798f26-fe25-45fd-8c78-f78dfd77c4d9"),
                            Name = "irish",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("9f04f2ee-3e50-46c6-9357-a0a2b1eb417a"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("06755ee1-7f38-4e33-9297-b69abcbbe4ec"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("c0f99d8e-0705-4d89-bae2-7740265d37b2"),
                            Name = "danish",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("655aff7f-aed4-44ef-b8d6-fd0a87aa649a"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("7bcbddc8-2d42-4223-a782-cdf6ca92f296"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("21de2ee3-2d91-468b-a498-c727c0dad0be"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("5d016bb4-b562-455c-bbcc-1fdbfe1c5ef0"),
                            Name = "western",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("c4f74de1-1a17-4d89-9547-f53843a1088a"),
                            Name = "european",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("95d577a1-7e2d-4748-b575-eba43cb16a99"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("d2eae245-0568-4643-9193-b060ff313578"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f180facd-8b53-4a49-ba94-7be664db5e32"),
                            Name = "soup",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("8855086b-3811-448f-ac39-8ea2f2797a34"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("1f7c444a-4f1e-4539-a8f6-ad1ad850884c"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("0d8bb8df-d8e8-4ecd-9ca7-0d1a234e8b2e"),
                            Name = "czech",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("28f2cd01-2652-4c26-b874-20e223238fa0"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("19a51ae6-1306-463c-a710-b193c555295a"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("e86ceb56-86da-402d-a747-0a368e20197b"),
                            Name = "malay",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("8dab9bad-6288-4434-8a3a-aaa421adbc1b"),
                            Name = "chili",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("e428b954-b820-4c7d-ad3f-61098c5e8401"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("e915f62b-1074-4dfa-a769-1486040e2e06"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("5bb0e54b-c741-49b4-a24f-cb4320af5a68"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("f3a5b6ad-d014-432b-a7d7-84108099f604"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("ce850867-1f7e-4132-bf68-ac0a8d5a44d2")
                        },
                        new
                        {
                            Id = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("b08abce4-9fc3-42fa-85e1-41189cc5afa5"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("8fb7f31b-b681-455c-b2fb-e48fdd39d0b1"),
                            Name = "burger",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("bc1490cb-35db-45a0-98d4-a381331dcbf6"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("77dcffec-3cac-435f-b463-147f9ab9a74c"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("28dd15dd-ab2b-4776-a7b5-96bbeb328b5a"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("95bccdbb-7973-4fd7-bc18-5ac8dd209ebf"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("e53036c1-9862-47e9-8912-7d3b9a5de8d6"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("e1e44376-13f0-4f43-b8a3-86ceb9a4e8ca"),
                            Name = "wings",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("76512d83-9d89-433e-a544-3ea71259abad"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("d7641ccd-0244-43bd-bc81-b1fcfacb9c4c"),
                            Name = "pita",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("3a81952d-2282-400b-88c3-d3acfa7ab0c2"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("7cfd07bb-d2dd-4753-86e5-87c494a105d0"),
                            Name = "soup",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("eddc9af1-8f17-4425-8b01-73ad53ad1aa0"),
                            Name = "salad",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("d1ffa2ed-5176-4b75-b6ea-84d3279e84d0"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("ccf0e982-52ea-4620-8589-9203fd9de0f0")
                        },
                        new
                        {
                            Id = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("c7f6e557-7224-42b8-a698-1856e0cc0864"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("ab319150-275e-4ea2-9577-3d05f459c7b4"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("72916096-9264-4aa1-9c26-1596fe4e50d8"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("44586f05-0e7b-413d-aa53-ace6be0e3bd6"),
                            Name = "donut",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("3021eaf8-7596-442f-8968-99490aebf425"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("b7184b78-6127-4e7a-a214-4478bebf32b0"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("9a90bb3c-d794-40f8-8f2f-a6c44c20c8d7"),
                            Name = "cake",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("457139ad-d08f-4ce0-a97b-b5bee669de8c"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("1422be7e-e450-498a-978a-3593e4c446d4"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("54602918-8c13-4f68-a9cd-6503146d6c6c"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("8b7e36e0-1f24-4784-a77d-90c619a84fd5"),
                            Name = "tea",
                            SuperCategoryId = new Guid("055164b8-7f6c-44b0-9191-ad13d636d079")
                        },
                        new
                        {
                            Id = new Guid("ac95dec3-b6ef-4393-a835-97cdd176cae1"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("76ae9c31-e560-44e6-a18b-8663dde3e890"),
                            Name = "bar",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("aeda9f2c-0095-41ee-a8d2-e1934e2d8d1b"),
                            Name = "pub",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("dc866c73-1fa5-4900-b83b-30312401d23e"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("ad923930-9087-4b54-9855-d2368545ee70"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        },
                        new
                        {
                            Id = new Guid("a6a99287-ccea-40d0-a184-e4dcc31f09f6"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("3ef2d219-2f6b-43ca-9f6e-99809d431533")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0b3080f7-013b-42c1-9735-6e952b8a5cbf"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("88666e4e-4a21-4ccd-99bb-5dd31d614123"),
                            Name = "free",
                            SuperConditionId = new Guid("0b3080f7-013b-42c1-9735-6e952b8a5cbf")
                        },
                        new
                        {
                            Id = new Guid("37b7bf89-6084-4af7-b1a3-ab5e37ce8728"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("0b3080f7-013b-42c1-9735-6e952b8a5cbf")
                        },
                        new
                        {
                            Id = new Guid("1a5cd137-02e7-471d-a21c-3e096573f424"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("9127f886-1f5a-4c31-9097-fa9d0cf47f78"),
                            Name = "yes",
                            SuperConditionId = new Guid("1a5cd137-02e7-471d-a21c-3e096573f424")
                        },
                        new
                        {
                            Id = new Guid("bab24e3a-2ee3-4f27-b5c9-6fab62257cd0"),
                            Name = "limited",
                            SuperConditionId = new Guid("1a5cd137-02e7-471d-a21c-3e096573f424")
                        },
                        new
                        {
                            Id = new Guid("890f19c0-6d47-4b21-9b79-f81fce1c3591"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("a58d39cb-7856-4bf1-acb1-5c25d909215a"),
                            Name = "yes",
                            SuperConditionId = new Guid("890f19c0-6d47-4b21-9b79-f81fce1c3591")
                        },
                        new
                        {
                            Id = new Guid("ca0e51d8-2f2b-4d99-9d50-4a59e8ca7f72"),
                            Name = "leashed",
                            SuperConditionId = new Guid("890f19c0-6d47-4b21-9b79-f81fce1c3591")
                        },
                        new
                        {
                            Id = new Guid("ebc25950-33b9-4ef2-a79b-388e0b96e355"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("c29e393e-3e4b-47d8-8f2a-d5276b56194b"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("e46779a3-92a5-4ec5-8293-0a8408d36106"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("c29e393e-3e4b-47d8-8f2a-d5276b56194b")
                        },
                        new
                        {
                            Id = new Guid("b1055293-12df-4d7d-8276-2763a8f72142"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("c29e393e-3e4b-47d8-8f2a-d5276b56194b")
                        },
                        new
                        {
                            Id = new Guid("059e4dc4-a2bb-43ee-b855-ca45dbb72f98"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("d12552e4-982e-4d5c-a829-5785c9f326be"),
                            Name = "customers",
                            SuperConditionId = new Guid("059e4dc4-a2bb-43ee-b855-ca45dbb72f98")
                        },
                        new
                        {
                            Id = new Guid("89b4324f-85c6-4c3a-8a12-926b36b3a096"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("540481bc-6c9d-4768-b3ff-40fb038aca1f"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("57b62203-ea3a-42f7-a30a-5c3237f98069"),
                            Name = "no",
                            SuperConditionId = new Guid("540481bc-6c9d-4768-b3ff-40fb038aca1f")
                        },
                        new
                        {
                            Id = new Guid("30284b67-32a3-44f9-8bc5-c4fb66e76cd2"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("540481bc-6c9d-4768-b3ff-40fb038aca1f")
                        },
                        new
                        {
                            Id = new Guid("20761c21-21b2-4c3f-b726-65344c45e70b"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("3a457f62-b9f3-4af1-a6e4-1bcdb1b6c556"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("db61fb75-f8c6-4f57-80e2-35125a8f8023"),
                            Name = "only",
                            SuperConditionId = new Guid("3a457f62-b9f3-4af1-a6e4-1bcdb1b6c556")
                        },
                        new
                        {
                            Id = new Guid("79c2758e-6ca8-469b-a533-62e5a86d75d8"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("eef34e8e-1c59-408a-8e46-497d66beab6a"),
                            Name = "only",
                            SuperConditionId = new Guid("79c2758e-6ca8-469b-a533-62e5a86d75d8")
                        },
                        new
                        {
                            Id = new Guid("a16cc817-d96b-4df8-bdb7-d2a9bc3d2972"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("23961331-5dbd-428a-8296-03d8ef07f526"),
                            Name = "only",
                            SuperConditionId = new Guid("a16cc817-d96b-4df8-bdb7-d2a9bc3d2972")
                        },
                        new
                        {
                            Id = new Guid("4e7d7f80-561b-4526-847f-5bfd1e78db27"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("10d95361-5a6b-4334-a3e3-297c485598f0"),
                            Name = "only",
                            SuperConditionId = new Guid("4e7d7f80-561b-4526-847f-5bfd1e78db27")
                        },
                        new
                        {
                            Id = new Guid("7ce8ca5e-8ee3-47fb-9d22-4b70c664f02a"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("7945df8f-9bbc-43e5-b825-c8487b7f3857"),
                            Name = "only",
                            SuperConditionId = new Guid("7ce8ca5e-8ee3-47fb-9d22-4b70c664f02a")
                        },
                        new
                        {
                            Id = new Guid("7a0066a0-d49c-4d03-9ba3-dd620720f05e"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("ecd1d058-d61c-4cc8-8b8f-13a67c00e9af"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("f21ef360-754e-4711-aa99-445fe2a7be99"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("9d30186c-753d-412a-90a4-21413dff1576"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpenningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
