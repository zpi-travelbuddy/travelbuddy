// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241119182411_ChangeRequiredFields")]
    partial class ChangeRequiredFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);

                    b.HasData(
                        new
                        {
                            PlaceCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb"),
                            ProviderPlaceId = new Guid("c4224f9e-725e-44d2-ba7e-2af7177c103d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("e97cdbeb-6077-4bc1-acc8-44363afb446a"),
                            ProviderPlaceId = new Guid("c4224f9e-725e-44d2-ba7e-2af7177c103d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de"),
                            ProviderPlaceId = new Guid("c4224f9e-725e-44d2-ba7e-2af7177c103d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("e83c50e7-281b-4603-94f5-76871958ef11"),
                            ProviderPlaceId = new Guid("c4224f9e-725e-44d2-ba7e-2af7177c103d")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb"),
                            ProviderPlaceId = new Guid("a0459324-4c75-498f-9557-a8bdd7e81419")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879"),
                            ProviderPlaceId = new Guid("a0459324-4c75-498f-9557-a8bdd7e81419")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de"),
                            ProviderPlaceId = new Guid("a0459324-4c75-498f-9557-a8bdd7e81419")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb"),
                            ProviderPlaceId = new Guid("33f84785-cdac-4720-b0ee-0add62802d90")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879"),
                            ProviderPlaceId = new Guid("33f84785-cdac-4720-b0ee-0add62802d90")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de"),
                            ProviderPlaceId = new Guid("33f84785-cdac-4720-b0ee-0add62802d90")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb"),
                            ProviderPlaceId = new Guid("3f1e3334-ebb2-4c24-821d-aef793aa771f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879"),
                            ProviderPlaceId = new Guid("3f1e3334-ebb2-4c24-821d-aef793aa771f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de"),
                            ProviderPlaceId = new Guid("3f1e3334-ebb2-4c24-821d-aef793aa771f")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb"),
                            ProviderPlaceId = new Guid("b0145a76-5c1e-4755-8dce-5c20dbd46493")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879"),
                            ProviderPlaceId = new Guid("b0145a76-5c1e-4755-8dce-5c20dbd46493")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de"),
                            ProviderPlaceId = new Guid("b0145a76-5c1e-4755-8dce-5c20dbd46493")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d"),
                            ProviderPlaceId = new Guid("71c4487f-be90-4834-8484-f0d51bc937a5")
                        },
                        new
                        {
                            PlaceCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8"),
                            ProviderPlaceId = new Guid("71c4487f-be90-4834-8484-f0d51bc937a5")
                        });
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Latitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<decimal?>("Longitude")
                        .HasPrecision(18, 8)
                        .HasColumnType("decimal(18,8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("054e025f-b7ca-4ba4-be5a-6df9a6a2a4f8"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("b82b1f67-a4c6-404e-90d3-a2567930b1b9"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("82c47188-7c08-4faa-84af-15bacef9d606"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("b82b1f67-a4c6-404e-90d3-a2567930b1b9")
                        },
                        new
                        {
                            Id = new Guid("3d92af8f-9f11-4968-86a8-2bbdf73ff2e5"),
                            Name = "art",
                            SuperCategoryId = new Guid("b82b1f67-a4c6-404e-90d3-a2567930b1b9")
                        },
                        new
                        {
                            Id = new Guid("b7f1731c-f91f-46fb-ba88-60ee01381f77"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("bf76dace-5b7f-4d99-bb1d-7153722912d5"),
                            Name = "culture",
                            SuperCategoryId = new Guid("b7f1731c-f91f-46fb-ba88-60ee01381f77")
                        },
                        new
                        {
                            Id = new Guid("68d6c929-c953-4f6d-ab45-946db079c319"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("bf76dace-5b7f-4d99-bb1d-7153722912d5")
                        },
                        new
                        {
                            Id = new Guid("519a19ac-c749-4d4e-8320-c7596e52696f"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("bf76dace-5b7f-4d99-bb1d-7153722912d5")
                        },
                        new
                        {
                            Id = new Guid("17d8ee58-34a7-43dd-8451-122014aeb1bf"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("bf76dace-5b7f-4d99-bb1d-7153722912d5")
                        },
                        new
                        {
                            Id = new Guid("f5d1c2e3-d017-4dc8-b547-9ad5a797f0a3"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("b7f1731c-f91f-46fb-ba88-60ee01381f77")
                        },
                        new
                        {
                            Id = new Guid("76d25ce9-6a92-4ec6-a295-a78164e20748"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("b7f1731c-f91f-46fb-ba88-60ee01381f77")
                        },
                        new
                        {
                            Id = new Guid("739926dc-9daf-4257-a0ca-bf2dcf3e7103"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("b7f1731c-f91f-46fb-ba88-60ee01381f77")
                        },
                        new
                        {
                            Id = new Guid("3b64cd9f-b6c9-472c-966e-c48559cd486b"),
                            Name = "museum",
                            SuperCategoryId = new Guid("b7f1731c-f91f-46fb-ba88-60ee01381f77")
                        },
                        new
                        {
                            Id = new Guid("8340dfb1-b14f-45a2-9137-2e61e7e26871"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("b257bf85-8fec-4ad5-b9f1-5884ca832e57"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("8340dfb1-b14f-45a2-9137-2e61e7e26871")
                        },
                        new
                        {
                            Id = new Guid("b680b490-657e-45c2-b2bc-d43aa768de29"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("5201b2a8-dcd2-4f19-a888-a44208d49c00"),
                            Name = "park",
                            SuperCategoryId = new Guid("b680b490-657e-45c2-b2bc-d43aa768de29")
                        },
                        new
                        {
                            Id = new Guid("6f03b74d-66e6-4a30-8474-6b0f201d322d"),
                            Name = "garden",
                            SuperCategoryId = new Guid("5201b2a8-dcd2-4f19-a888-a44208d49c00")
                        },
                        new
                        {
                            Id = new Guid("42abbc5a-dd22-48a5-82dc-d8b49aec3a6a"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("5201b2a8-dcd2-4f19-a888-a44208d49c00")
                        },
                        new
                        {
                            Id = new Guid("c9e65a8c-8852-4697-ba91-84ac4c4cf4a2"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("ff4018d5-1b84-42c1-ac20-eeb5201789ee"),
                            Name = "forest",
                            SuperCategoryId = new Guid("c9e65a8c-8852-4697-ba91-84ac4c4cf4a2")
                        },
                        new
                        {
                            Id = new Guid("5cbd612d-60ad-4846-92b8-35a7482c7c2e"),
                            Name = "water",
                            SuperCategoryId = new Guid("c9e65a8c-8852-4697-ba91-84ac4c4cf4a2")
                        },
                        new
                        {
                            Id = new Guid("45802a88-0330-45f2-8713-f7c434faa7f8"),
                            Name = "spring",
                            SuperCategoryId = new Guid("5cbd612d-60ad-4846-92b8-35a7482c7c2e")
                        },
                        new
                        {
                            Id = new Guid("967e7270-f51f-4fea-bc54-2fdfddd6d448"),
                            Name = "reef",
                            SuperCategoryId = new Guid("5cbd612d-60ad-4846-92b8-35a7482c7c2e")
                        },
                        new
                        {
                            Id = new Guid("09b3eec9-0033-4480-8b04-15de0567cdd8"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("5cbd612d-60ad-4846-92b8-35a7482c7c2e")
                        },
                        new
                        {
                            Id = new Guid("fb1fef27-00a2-4d11-adb9-6cadce6fb57f"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("5cbd612d-60ad-4846-92b8-35a7482c7c2e")
                        },
                        new
                        {
                            Id = new Guid("18e8e9d2-ec1a-4f43-aa76-6fbea28f9608"),
                            Name = "sea",
                            SuperCategoryId = new Guid("5cbd612d-60ad-4846-92b8-35a7482c7c2e")
                        },
                        new
                        {
                            Id = new Guid("984c0140-80ce-4b4e-905d-8aa1307bf126"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("c9e65a8c-8852-4697-ba91-84ac4c4cf4a2")
                        },
                        new
                        {
                            Id = new Guid("9784b08b-6293-4614-9eb4-c798685ec89a"),
                            Name = "peak",
                            SuperCategoryId = new Guid("984c0140-80ce-4b4e-905d-8aa1307bf126")
                        },
                        new
                        {
                            Id = new Guid("6bfe648c-a660-4ad4-80c1-ca51cb99a4c9"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("984c0140-80ce-4b4e-905d-8aa1307bf126")
                        },
                        new
                        {
                            Id = new Guid("ec923b79-28ec-4694-9778-a16389a2c310"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("984c0140-80ce-4b4e-905d-8aa1307bf126")
                        },
                        new
                        {
                            Id = new Guid("3857b056-bce6-4b00-a61d-9ee69cbeb955"),
                            Name = "rock",
                            SuperCategoryId = new Guid("984c0140-80ce-4b4e-905d-8aa1307bf126")
                        },
                        new
                        {
                            Id = new Guid("e29a6441-6565-400b-8869-122d68b2b354"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("984c0140-80ce-4b4e-905d-8aa1307bf126")
                        },
                        new
                        {
                            Id = new Guid("62e44ffe-c56a-4eb8-8198-d5690daa37fe"),
                            Name = "sand",
                            SuperCategoryId = new Guid("c9e65a8c-8852-4697-ba91-84ac4c4cf4a2")
                        },
                        new
                        {
                            Id = new Guid("b3c568d0-e2a9-425d-84dc-f8cee8a554d7"),
                            Name = "dune",
                            SuperCategoryId = new Guid("62e44ffe-c56a-4eb8-8198-d5690daa37fe")
                        },
                        new
                        {
                            Id = new Guid("20613332-2223-41d8-be43-0051f8e80a8a"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("e97cdbeb-6077-4bc1-acc8-44363afb446a"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de")
                        },
                        new
                        {
                            Id = new Guid("6aac5187-b1f4-4be2-b754-86987051812b"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("e97cdbeb-6077-4bc1-acc8-44363afb446a")
                        },
                        new
                        {
                            Id = new Guid("96d34649-bcdd-43a0-bfa8-6b8e7ea46b8e"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("e97cdbeb-6077-4bc1-acc8-44363afb446a")
                        },
                        new
                        {
                            Id = new Guid("60c1f3fb-2b8a-404a-8b6c-eaf0848d492e"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("e97cdbeb-6077-4bc1-acc8-44363afb446a")
                        },
                        new
                        {
                            Id = new Guid("677b6a74-0f39-4521-8ed2-10d562c7ea88"),
                            Name = "clock",
                            SuperCategoryId = new Guid("e97cdbeb-6077-4bc1-acc8-44363afb446a")
                        },
                        new
                        {
                            Id = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb"),
                            Name = "sights",
                            SuperCategoryId = new Guid("b948cdb1-3603-4d87-84bb-2e13648d20de")
                        },
                        new
                        {
                            Id = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("654da7a0-4b05-405c-85cc-84c150702bb0"),
                            Name = "church",
                            SuperCategoryId = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe")
                        },
                        new
                        {
                            Id = new Guid("99859785-308c-4586-abe5-ae3f820da595"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe")
                        },
                        new
                        {
                            Id = new Guid("ce9f5843-e64c-4c9c-9dd5-d20a782c85e9"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe")
                        },
                        new
                        {
                            Id = new Guid("fb923bf0-3772-4278-aefa-6fb99d75b7d4"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe")
                        },
                        new
                        {
                            Id = new Guid("1b38f3c4-781d-4b56-ae49-ca53178a04a6"),
                            Name = "temple",
                            SuperCategoryId = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe")
                        },
                        new
                        {
                            Id = new Guid("256f3637-742e-4c4f-82d9-912e713d3243"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe")
                        },
                        new
                        {
                            Id = new Guid("142e45e3-2eea-494c-adcc-9ee4be92000a"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("7772b748-e166-46f7-9a4b-d52b83bfe1fe")
                        },
                        new
                        {
                            Id = new Guid("8ef684da-629a-484b-8851-fe605d430f57"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("252955be-1dca-4d2c-9e62-350b764ed409"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("c3ee8773-2c4f-4832-8189-02414dc70649"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("29d0f9ba-9d09-4d4b-854d-e7daf45be1d9"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("51a682e2-e415-4f4e-82f7-eef6bc2167a3"),
                            Name = "tower",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("4212614c-5b9a-4844-b214-0a66a2e43ffc"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("70cb5f2c-6f33-41cd-961e-f30c44b2b269"),
                            Name = "fort",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("171f61e8-6976-4bb7-ae64-fd00d3b02ffd"),
                            Name = "castle",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("e83c50e7-281b-4603-94f5-76871958ef11"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("dd57afad-06f2-43fc-a5cb-3f5d5862be0c"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("076b9ecc-0cd7-4b3b-afce-90a641a8c4aa"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("1c2c6432-5c15-427c-bfe0-be1635ec311d"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("4077c323-7fa5-4348-8db1-aafbb855b5eb")
                        },
                        new
                        {
                            Id = new Guid("70db89b1-c7ad-4b75-acb5-ff42892fd733"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("26de39f5-e86f-4acc-9b7d-7674fe61ca5a"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("785b441c-bfd0-452b-9e68-ecfd6c492cef"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("d9babff3-1e6a-4e3e-ac1a-33b86770ae73"),
                            Name = "ship",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("dcc0201f-375f-4950-9738-13b1f6e116cc"),
                            Name = "tank",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("6bddebb1-229c-421f-a460-bc82fca6dee2"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("8c7b674b-b1b8-4046-aa50-14b46c71b4ca"),
                            Name = "monument",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("d60f5206-0601-4332-87b4-61167d62d25b"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("f4494ee7-55db-421b-b76d-2379aa6c8f2b"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("bf9f338b-e5a3-4eb9-974a-5fc28ae9c5d5"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("e625321d-70ad-422f-93b0-27668a332d25"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("2ef57001-ab14-4a01-aa1b-674ef264c879")
                        },
                        new
                        {
                            Id = new Guid("bc897e3e-fe79-4730-b261-228473ea66a5"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("bc897e3e-fe79-4730-b261-228473ea66a5")
                        },
                        new
                        {
                            Id = new Guid("a0056391-fd99-4811-9222-833e70f7362a"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("2afd74b8-bec6-42bc-8720-2ca9d97963ba"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("e3024e21-a785-4bab-87d2-62c1a1b1d975"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("1a335b97-7d91-4b7e-8c47-2238ac489457"),
                            Name = "islam",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("bd3de7da-332b-4706-844c-f3156e3e1274"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("863d69da-aa6e-4aad-8128-440c9dac25fe"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("73e849b6-314c-4b2a-bba0-fb9d41f7c513"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("b8df470e-c036-44fe-b576-640b2ccad24a"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("db0b0415-2ac5-4c6f-a6c8-9f694537941b")
                        },
                        new
                        {
                            Id = new Guid("168c1ce5-f7b7-4089-a5c7-04ccc06e476b"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("b33b040f-90f9-4397-9de4-b8cb48b2201e"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("168c1ce5-f7b7-4089-a5c7-04ccc06e476b")
                        },
                        new
                        {
                            Id = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("7ab2818b-96a2-45ac-b33b-8ebdd02dc106"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("5005b1bb-7aad-42b5-b6e1-59cc3dcfe2b5"),
                            Name = "burger",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("0471772e-e159-40db-9b42-721221464219"),
                            Name = "regional",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("9683678f-6f9c-471f-8084-0332d47eb2a1"),
                            Name = "italian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("ae50fdba-9471-4b3c-8052-ebfe7d4901d6"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("14777fcc-cc88-4b04-93eb-45bbb1865482"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("b2c9f5af-7816-4703-80f8-e20e6f389d6b"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("b30f0518-a154-44c4-ae0b-7e623fea6010"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("37f30af6-d450-4b83-8c94-068768519cb4"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("6078d6bc-bcbb-48b2-bdc6-404f79a1a2f6"),
                            Name = "american",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("59166b55-b7d7-4ca9-8809-35ab657b1e70"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("7a336e2d-6a01-4f6d-83f1-5a2eb5689191"),
                            Name = "indian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("ee6b669f-9094-400b-a467-ffe8a269815b"),
                            Name = "asian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("55797337-80d0-4ceb-a540-b33578df7437"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("18235900-440e-42e1-9405-1214e5a38410"),
                            Name = "french",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("71a82d89-163b-4a04-826b-5fd09cbf3bb6"),
                            Name = "german",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("4869ab10-4d9f-4f64-821d-b427e9f4ef7f"),
                            Name = "thai",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("a52d3f93-dd9c-4ee9-a8e9-a69d71d7dc4b"),
                            Name = "greek",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("27b761df-e322-4ac3-9626-fa38f8f9afa4"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("c39f784f-2851-4686-8264-7ef28c5f41b0"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("c3ab9117-8a32-4e6a-b445-c47b8d50de65"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("4bcdc541-90b2-4703-b045-6dc0d76b96f0"),
                            Name = "international",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("51e88dbf-720e-47fc-b06a-0dfb13a80562"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("ce7875e7-8661-48b9-ac49-7a19ec8f0b1a"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("d20f41bc-e68a-454e-b2c6-b806652f93d6"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("c0b42b00-4bf2-436d-addd-e454eb148a80"),
                            Name = "korean",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("2d2386da-2cbb-4f08-8c58-0725872d3f57"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("d9d82d05-a64f-46ee-9ea7-da4d3e7a272b"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("2acea7a0-d716-4996-bf52-349ec856edd2"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("5dba8cde-c33e-4037-9bed-da5a49a891fb"),
                            Name = "fish",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("7cf686d7-cf9c-40ad-b013-afdc176e65b4"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("7ab5c8db-f98a-4dd9-a504-245cf9c796c5"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("31ada4b0-b1b9-4d7b-a4b4-dbf9bf4216c9"),
                            Name = "friture",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("7de5fb5c-af65-4a55-9cfe-9948dae4993f"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("c150a718-e901-485d-a054-5e2fa40f395d"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("3d4274b7-8441-4a85-ae3d-d9a65781ad42"),
                            Name = "wings",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("3ff05229-e2e7-414d-8145-29998a3da74f"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("677daed2-e06e-4197-a49d-e7cf15bd56a8"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("23c376e6-1c08-404e-874f-be8d6ea3e5a9"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("c4586b09-5a35-42fa-b32a-bcd084a8215d"),
                            Name = "arab",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("adeeff96-3a6e-4faf-a3a5-03710549421f"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("ed70efc5-617c-475c-909c-287e2c976d86"),
                            Name = "russian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("881bd70a-196e-4abc-bef1-1aae604f50f2"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("fa72155c-c69a-4837-b65d-4cc29168af51"),
                            Name = "african",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("1dc5345d-f9da-4ed4-b46e-85784a85d11e"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("0a674296-e3cb-4e91-a2c0-2c41fcba0430"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("a6e1deae-99b7-4143-b646-54c66b3eaa7e"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("2f48744d-6893-4830-9457-98bb904a95bb"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("bbb135d3-7d8d-4ec9-9d4b-b783335e0df7"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("2ac7205c-2207-4ae2-8367-ffb757ef792f"),
                            Name = "curry",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("ba73732d-9431-4837-bb64-08b747c7810c"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("558d5b90-0036-44dc-a31f-8c921e38f1b5"),
                            Name = "persian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("598c58b7-b4fb-4813-a872-99d8c2bfc3b9"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("874726ab-7b42-43bb-9a38-3e5100e1a83f"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("7e10fb92-96c0-45e3-a9f1-a6d2b4fc7b2d"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("c9e64800-106f-4a6f-9c47-e00f4031833c"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("f99b218b-1042-4c48-b86b-fed7b1d8114a"),
                            Name = "pita",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("29285f6f-d917-4ca4-bebd-cc00d25d4c58"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("e0cc825d-b803-4aca-8820-114615c3273e"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("9f1d28be-d028-4d0e-bd84-e7629d693639"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("e0014a38-ddc4-45ef-91c3-043b4d5de535"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("ae56392e-0cc9-48cf-89b3-4cb4d36c5c12"),
                            Name = "irish",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("358693b8-87db-4782-bb01-e8c8bfeed913"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("6a61c4a3-b8a5-4a5d-b2e6-b4d0861d2146"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("ceab5e81-ecc1-41aa-a7aa-5b9af56fa765"),
                            Name = "danish",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("484686cc-9384-434f-b2a5-f0e69a05591f"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("c2480bd9-68e2-49cf-96f0-6831ae73a0f2"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("2629898f-bab9-4f72-87ed-49552db04f61"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("fa28f204-abcd-4cbf-9fe0-5b7e1176c4df"),
                            Name = "western",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("1dbeb36a-3e98-4174-8cca-e602a687afc4"),
                            Name = "european",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("2402d8be-78a2-4dd9-986f-e4133dd5cc41"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("36b90439-b211-43a8-88d8-2a320704be72"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("fe4b1f15-a0f6-4421-ab72-7e52c12e995d"),
                            Name = "soup",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("64b464ee-424a-4f4d-ad59-385bb939d811"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("5b587f0f-83d3-48fa-8059-fa35c73eef7e"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("844a256b-d8c3-4ca1-8fd5-ac8ea77d4b14"),
                            Name = "czech",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("64cb186d-77bc-44d5-9ce0-831bde161264"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("99b305f0-2e3c-4e71-826b-35751f7ef8cb"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("359497e1-2be8-4fec-a56b-3fdb94558c38"),
                            Name = "malay",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("d76637fe-ec3c-4e3c-a58b-df1e6f220abe"),
                            Name = "chili",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("d8615b80-525a-4d06-a972-b01c2f39c14a"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("97553338-6fcd-49f2-b5cb-05f3876c3c87"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("3f093499-4331-4ae3-ba69-97634ab41c54"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("850a635d-5b15-4096-8aa0-506fa84c8884"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("752a8c24-1319-4b96-a420-cf91f242cb8d")
                        },
                        new
                        {
                            Id = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("20270c4d-dd8b-4a5d-8380-3adfa02fea07"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("d75bfe2f-57c2-42cf-9d7c-c89802bb3f22"),
                            Name = "burger",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("243da07f-d33d-4212-8638-efd9becf2f25"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("3490453f-800b-4a42-881b-3afcbf41665c"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("92b742fe-16b6-47fa-bfbe-eea6b9916fd5"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("0a980402-cbcd-42c8-9cd2-54d3b6d08ecc"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("4722f209-b63a-4314-8277-0059f7d9d88a"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("ec0e12bb-a032-4627-a5ed-e7fc3c558e84"),
                            Name = "wings",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("8e08e52d-49d0-47cd-9acd-63e9dab2c845"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("16e5fd80-0d05-4369-a77f-e7b143f1b365"),
                            Name = "pita",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("c437d4cd-f8ea-4c2f-b4f3-45cb7f93a9a3"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("d713b802-6295-4bea-ab92-07857633e3dc"),
                            Name = "soup",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("45973364-dda2-4325-8224-9aebdde633a1"),
                            Name = "salad",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("d1162d68-be6d-4110-96a2-670331f4c691"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("876e67ab-c623-42ce-8ab1-06c49ec29a2f")
                        },
                        new
                        {
                            Id = new Guid("d54ac254-adab-4492-8154-c08eee817d2f"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("80966716-8b57-40ac-a850-3454876f8ab8"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("5d30a10a-fe1e-49eb-a300-56a4a1fc77bb"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("7cfda43b-1b67-4803-8ff4-7d3e926f2855"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("3a48c2a9-82de-4abf-a7f6-7b933fad1d5c"),
                            Name = "donut",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("5868e1c2-65a6-453f-bcb1-43b9e739095f"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("8ce046ce-5675-47da-b381-a217b37feeab"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("e9fe7c7d-65f9-40c9-b440-705c076f0875"),
                            Name = "cake",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("4060baa8-bd4f-460d-a506-fdea05c0ed33"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("137767a8-ad71-4604-98d7-22465cce3cab"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("b8e15d10-1cf8-4e38-a5b8-4f88babbb370"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("ee5260f0-864d-4e0f-b206-df46e22097b8"),
                            Name = "tea",
                            SuperCategoryId = new Guid("d54ac254-adab-4492-8154-c08eee817d2f")
                        },
                        new
                        {
                            Id = new Guid("63fb3665-40c3-4527-99a6-3dce1ec61f1a"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("ebf515e9-c111-423e-a6c0-2a6ce5eb2c90"),
                            Name = "bar",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("26b18ac6-bc03-478a-834d-1443a5079986"),
                            Name = "pub",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("42c80c5e-c427-4c19-b9c2-f5e897eaa737"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("17ca2bcc-6695-4a02-bda2-a25efd5e2d04"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        },
                        new
                        {
                            Id = new Guid("f8adf366-d896-4f99-8b59-15ab66464f90"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("024f8cd9-29e2-4a99-9e49-5e5fd787a3a8")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d59d33d-d3d9-48dd-bc68-8ede4a1126f7"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("07a5da13-30ab-4198-b9e4-90859258354c"),
                            Name = "free",
                            SuperConditionId = new Guid("2d59d33d-d3d9-48dd-bc68-8ede4a1126f7")
                        },
                        new
                        {
                            Id = new Guid("ffd2c436-ce6c-4964-b18a-5f5104f8df46"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("2d59d33d-d3d9-48dd-bc68-8ede4a1126f7")
                        },
                        new
                        {
                            Id = new Guid("76e2ccc1-034a-422c-9f8b-b12d4e506118"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("002c7607-bdd2-454a-a16d-a55f87ecb4b7"),
                            Name = "yes",
                            SuperConditionId = new Guid("76e2ccc1-034a-422c-9f8b-b12d4e506118")
                        },
                        new
                        {
                            Id = new Guid("47352c45-51a6-4d82-a2bc-6ce660406ba5"),
                            Name = "limited",
                            SuperConditionId = new Guid("76e2ccc1-034a-422c-9f8b-b12d4e506118")
                        },
                        new
                        {
                            Id = new Guid("b78fc36c-8a13-407a-a3cc-c417cfb7291d"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("15f96d22-a2eb-499c-a847-472308ab44d0"),
                            Name = "yes",
                            SuperConditionId = new Guid("b78fc36c-8a13-407a-a3cc-c417cfb7291d")
                        },
                        new
                        {
                            Id = new Guid("35d2225b-377a-4b3d-aaa8-52ec5f879257"),
                            Name = "leashed",
                            SuperConditionId = new Guid("b78fc36c-8a13-407a-a3cc-c417cfb7291d")
                        },
                        new
                        {
                            Id = new Guid("1bb99664-d50a-4b39-a0fb-69a979ac48d2"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("c148165d-9263-4566-9b5a-29f7121eb393"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("b64399e2-9719-4691-bdb9-773284b7e1eb"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("c148165d-9263-4566-9b5a-29f7121eb393")
                        },
                        new
                        {
                            Id = new Guid("4c8e00f2-7ffa-4f56-a197-07b36c0bb2ca"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("c148165d-9263-4566-9b5a-29f7121eb393")
                        },
                        new
                        {
                            Id = new Guid("3a97f26a-850e-4701-90c8-6c83c7f0bef3"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("c08babe5-7c6c-4cfa-a2ef-eec89e6818ec"),
                            Name = "customers",
                            SuperConditionId = new Guid("3a97f26a-850e-4701-90c8-6c83c7f0bef3")
                        },
                        new
                        {
                            Id = new Guid("7045ea38-5399-458d-b595-00484351df60"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("a647202e-80e0-45ef-b265-f27e8c4e0e3e"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("95124566-e43c-4404-b278-c9efeed8e32b"),
                            Name = "no",
                            SuperConditionId = new Guid("a647202e-80e0-45ef-b265-f27e8c4e0e3e")
                        },
                        new
                        {
                            Id = new Guid("a3563a3c-ab98-4cc5-a084-dd36bfe6e393"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("a647202e-80e0-45ef-b265-f27e8c4e0e3e")
                        },
                        new
                        {
                            Id = new Guid("f6ac3cd7-b80d-4828-beaa-0f83fdbbca0f"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("d2540b76-89c4-43a6-8dd3-cc537e89243b"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("7371f042-f567-4caa-8f2d-d044fed09f11"),
                            Name = "only",
                            SuperConditionId = new Guid("d2540b76-89c4-43a6-8dd3-cc537e89243b")
                        },
                        new
                        {
                            Id = new Guid("bef9070a-83ac-4542-b324-2394840c9d72"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("d3e23f5c-544b-43ff-a4d6-910a5e71b6b8"),
                            Name = "only",
                            SuperConditionId = new Guid("bef9070a-83ac-4542-b324-2394840c9d72")
                        },
                        new
                        {
                            Id = new Guid("4e44882d-e478-4ffa-baa7-dd22ff84ee24"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("d3a20d85-7a32-476e-babe-6c6881693cdf"),
                            Name = "only",
                            SuperConditionId = new Guid("4e44882d-e478-4ffa-baa7-dd22ff84ee24")
                        },
                        new
                        {
                            Id = new Guid("b2126673-e2da-4627-ac18-4bd7a075c48e"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("741e339c-30ff-45df-92c9-173b4738d7eb"),
                            Name = "only",
                            SuperConditionId = new Guid("b2126673-e2da-4627-ac18-4bd7a075c48e")
                        },
                        new
                        {
                            Id = new Guid("a450a032-d14f-4f50-9582-689516559d97"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("b54397ec-c1c4-4e72-aba7-eccba7be9882"),
                            Name = "only",
                            SuperConditionId = new Guid("a450a032-d14f-4f50-9582-689516559d97")
                        },
                        new
                        {
                            Id = new Guid("74bd5a25-0655-400e-b7ec-ec7cf55e64ac"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("9f03dfdc-7353-4eaf-b3a3-4d49695f882e"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("a4c5650d-b9e0-4dea-9423-d1af3b8edbbf"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("dbaac515-209d-462d-bca7-c5f8e4d30e67"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("359cf857-095a-4ad0-b08d-4f5be5532055"),
                            FromTripPointId = new Guid("8df5f83c-5c9c-44ff-900c-c08e5e4b49e8"),
                            Mode = 0,
                            ToTripPointId = new Guid("f9446a3f-bc19-44a1-8181-1a7df076e009"),
                            TransferTime = new TimeSpan(0, 0, 4, 21, 0),
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("cada6d36-e7dc-4499-8883-68f9933094df"),
                            FromTripPointId = new Guid("f9446a3f-bc19-44a1-8181-1a7df076e009"),
                            Mode = 1,
                            ToTripPointId = new Guid("fe53aaa6-0c9e-4a72-9a3d-36aec9a5c4d4"),
                            TransferTime = new TimeSpan(0, 0, 0, 55, 0),
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("12a76ba3-e649-47b4-b1ea-8f7261497b02"),
                            FromTripPointId = new Guid("fe53aaa6-0c9e-4a72-9a3d-36aec9a5c4d4"),
                            ToTripPointId = new Guid("8a7a0deb-9a6e-4e5e-a538-181e770ee457"),
                            TransferTime = new TimeSpan(0, 0, 20, 0, 0),
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("970175a9-f949-41ae-9652-dd54f101c52e"),
                            FromTripPointId = new Guid("f2cf56dc-99c4-491e-aecb-e01397041d62"),
                            Mode = 2,
                            ToTripPointId = new Guid("a73a7f44-e440-47b6-bd2a-b99a3b151a53"),
                            TransferTime = new TimeSpan(0, 0, 3, 13, 0),
                            TripDayId = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783")
                        },
                        new
                        {
                            Id = new Guid("396ce916-e5bd-407d-b7ac-09f759a881d1"),
                            FromTripPointId = new Guid("a73a7f44-e440-47b6-bd2a-b99a3b151a53"),
                            Mode = 3,
                            ToTripPointId = new Guid("0e7eb636-5f16-41be-a6d9-22ce45e2c299"),
                            TransferTime = new TimeSpan(0, 0, 8, 18, 0),
                            TripDayId = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783")
                        },
                        new
                        {
                            Id = new Guid("f5b2c46e-379c-44a5-872d-46cf891ad3f2"),
                            FromTripPointId = new Guid("0e7eb636-5f16-41be-a6d9-22ce45e2c299"),
                            Mode = 4,
                            ToTripPointId = new Guid("137bac8d-ba4e-4d59-884a-6d4696fb0ed0"),
                            TransferTime = new TimeSpan(0, 0, 13, 30, 0),
                            TripDayId = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18504468-dea4-45f1-87cb-46045bb91357"),
                            Budget = 100m,
                            CurrencyCode = "PLN",
                            DestinationId = new Guid("5346236b-eeb9-44d8-95b0-c67d139804ac"),
                            EndDate = new DateOnly(2024, 12, 21),
                            ExchangeRate = 1m,
                            Name = "Wycieczka do Moszczanki",
                            NumberOfTravelers = 1,
                            StartDate = new DateOnly(2024, 12, 20),
                            UserId = "c324c822-30c1-7029-7c4f-00799aadf54a"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd"),
                            Date = new DateOnly(2024, 12, 20),
                            TripId = new Guid("18504468-dea4-45f1-87cb-46045bb91357")
                        },
                        new
                        {
                            Id = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783"),
                            Date = new DateOnly(2024, 12, 21),
                            TripId = new Guid("18504468-dea4-45f1-87cb-46045bb91357")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly?>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly?>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0eaa760d-4e22-4e04-b904-e78c87245c0b"),
                            EndTime = new TimeOnly(10, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Kaplica loretanska",
                            PlaceId = new Guid("c4224f9e-725e-44d2-ba7e-2af7177c103d"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(10, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("8df5f83c-5c9c-44ff-900c-c08e5e4b49e8"),
                            EndTime = new TimeOnly(11, 20, 0),
                            ExchangeRate = 1m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            PlaceId = new Guid("a0459324-4c75-498f-9557-a8bdd7e81419"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("f9446a3f-bc19-44a1-8181-1a7df076e009"),
                            EndTime = new TimeOnly(12, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Jana Pawła II",
                            PlaceId = new Guid("33f84785-cdac-4720-b0ee-0add62802d90"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(11, 50, 0),
                            Status = 0,
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("fe53aaa6-0c9e-4a72-9a3d-36aec9a5c4d4"),
                            EndTime = new TimeOnly(13, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Zalew",
                            PlaceId = new Guid("90cac2de-de21-4ee9-90dd-b7cf0896ae92"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("8a7a0deb-9a6e-4e5e-a538-181e770ee457"),
                            EndTime = new TimeOnly(14, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Kościół w parku",
                            PlaceId = new Guid("05213ff1-1e1a-40ed-9725-daefa6ed076e"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("1014fd2d-99dd-492f-b548-5e0e8786afbd")
                        },
                        new
                        {
                            Id = new Guid("f2cf56dc-99c4-491e-aecb-e01397041d62"),
                            Comment = "Czy to lata?",
                            EndTime = new TimeOnly(12, 40, 0),
                            ExchangeRate = 1m,
                            Name = "Samolot MIG",
                            PlaceId = new Guid("3f1e3334-ebb2-4c24-821d-aef793aa771f"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(12, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783")
                        },
                        new
                        {
                            Id = new Guid("a73a7f44-e440-47b6-bd2a-b99a3b151a53"),
                            EndTime = new TimeOnly(13, 10, 0),
                            ExchangeRate = 1m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            PlaceId = new Guid("b0145a76-5c1e-4755-8dce-5c20dbd46493"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(13, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783")
                        },
                        new
                        {
                            Id = new Guid("0e7eb636-5f16-41be-a6d9-22ce45e2c299"),
                            ClosingTime = new TimeOnly(0, 0, 0),
                            Comment = "Czas na jedzonko",
                            EndTime = new TimeOnly(15, 30, 0),
                            ExchangeRate = 1m,
                            Name = "Bistro Bravo",
                            OpeningTime = new TimeOnly(12, 0, 0),
                            PlaceId = new Guid("71c4487f-be90-4834-8484-f0d51bc937a5"),
                            PredictedCost = 30m,
                            StartTime = new TimeOnly(14, 0, 0),
                            Status = 0,
                            TripDayId = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783")
                        },
                        new
                        {
                            Id = new Guid("137bac8d-ba4e-4d59-884a-6d4696fb0ed0"),
                            EndTime = new TimeOnly(17, 0, 0),
                            ExchangeRate = 1m,
                            Name = "Parowóz TKi3-120",
                            PlaceId = new Guid("1c9bee55-62e0-405c-9f5a-80746f579f59"),
                            PredictedCost = 0m,
                            StartTime = new TimeOnly(16, 30, 0),
                            Status = 0,
                            TripDayId = new Guid("0ab0657a-143d-478c-b030-9e2c9a0e4783")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasPrecision(18, 6)
                        .HasColumnType("decimal(18,6)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasPrecision(2, 1)
                        .HasColumnType("decimal(2,1)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90cac2de-de21-4ee9-90dd-b7cf0896ae92"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.711806m,
                            Longitude = 17.721194m,
                            Name = "Zalew"
                        },
                        new
                        {
                            Id = new Guid("05213ff1-1e1a-40ed-9725-daefa6ed076e"),
                            City = "Przybysławice",
                            Country = "Poland",
                            Latitude = 51.707396m,
                            Longitude = 17.720968m,
                            Name = "Kościół w parku"
                        },
                        new
                        {
                            Id = new Guid("1c9bee55-62e0-405c-9f5a-80746f579f59"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6514858m,
                            Longitude = 17.810879178559084m,
                            Name = "Parowóz TKi3-120"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpeningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5346236b-eeb9-44d8-95b0-c67d139804ac"),
                            City = "Moszczanka",
                            Country = "Poland",
                            Latitude = 51.73196580m,
                            Longitude = 17.76554860m,
                            Name = "Moszczanka",
                            State = "Greater Poland Voivodeship",
                            ProviderId = "51a37f38fefac33140592e652a0eb1dd4940f00103f9010828e50100000000c0020792030936332d3434302b706c"
                        },
                        new
                        {
                            Id = new Guid("c4224f9e-725e-44d2-ba7e-2af7177c103d"),
                            Name = "Kaplica loretańska",
                            ProviderId = "51429f46469ebd314059b810faa9f1dd4940f00102f901f7527713000000009203134b61706c696361206c6f72657461c584736b61"
                        },
                        new
                        {
                            Id = new Guid("a0459324-4c75-498f-9557-a8bdd7e81419"),
                            City = "Raszków",
                            Country = "Poland",
                            HouseNumber = "32",
                            Latitude = 51.71827680m,
                            Longitude = 17.72748940m,
                            Name = "Bohaterom I wojny światowej i Poległym za Wolność Ojczyzny",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            ProviderId = "51c92fcdbe3cba31405921e7807ef0db4940f00103f901e5860fed0100000092033e426f68617465726f6d204920776f6a6e7920c59b776961746f77656a206920506f6c6567c582796d207a6120576f6c6e6fc59bc487204f6a637a797a6e79"
                        },
                        new
                        {
                            Id = new Guid("33f84785-cdac-4720-b0ee-0add62802d90"),
                            City = "Raszków",
                            Country = "Poland",
                            Latitude = 51.7165523m,
                            Longitude = 17.7274935m,
                            Name = "Jana Pawła II",
                            State = "Greater Poland Voivodeship",
                            Street = "Kościelna",
                            ProviderId = "51768d96033dba314059315a59fcb7db4940f00103f901262f10ed0100000092030e4a616e6120506177c58261204949"
                        },
                        new
                        {
                            Id = new Guid("3f1e3334-ebb2-4c24-821d-aef793aa771f"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.6550975m,
                            Longitude = 17.8059913m,
                            Name = "Samolot MIG",
                            State = "Greater Poland Voivodeship",
                            Street = "Raszkowska",
                            ProviderId = "514b5c227255ce314059cd461f3cdad34940f00103f901c95100f70000000092030b53616d6f6c6f74204d4947"
                        },
                        new
                        {
                            Id = new Guid("b0145a76-5c1e-4755-8dce-5c20dbd46493"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            Latitude = 51.652452m,
                            Longitude = 17.8150573m,
                            Name = "Pomnik 60 Pułku Piechoty",
                            ProviderId = "51b6dd5f98a7d031405953490f8c83d34940f00103f901c3b040f600000000920319506f6d6e696b203630205075c5826b752050696563686f7479"
                        },
                        new
                        {
                            Id = new Guid("71c4487f-be90-4834-8484-f0d51bc937a5"),
                            City = "Ostrów Wielkopolski",
                            Country = "Poland",
                            HouseNumber = "15",
                            Latitude = 51.6494557m,
                            Longitude = 17.8174638m,
                            Name = "Bistro Bravo",
                            State = "Greater Poland Voivodeship",
                            Street = "Rynek",
                            OpeningHours = "Mo-Th 12:00-24:00; Fr-Su 12:00-24:00+",
                            ProviderId = "51f4a9be4e45d13140596108465d21d34940f00103f901d44b66110100000092030c42697374726f20427261766f"
                        });
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
