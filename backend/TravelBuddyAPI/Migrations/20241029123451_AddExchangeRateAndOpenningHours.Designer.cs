// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TravelBuddyAPI.Data;

#nullable disable

namespace TravelBuddyAPI.Migrations
{
    [DbContext(typeof(TravelBuddyDbContext))]
    [Migration("20241029123451_AddExchangeRateAndOpenningHours")]
    partial class AddExchangeRateAndOpenningHours
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "CategoryProfileId");

                    b.HasIndex("CategoryProfileId");

                    b.ToTable("CategoryProfilePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ConditionProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("ConditionProfilePlaceCondition", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.Property<Guid>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceCategoryId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCategory", (string)null);
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.Property<Guid>("PlaceConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProviderPlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PlaceConditionId", "ProviderPlaceId");

                    b.HasIndex("ProviderPlaceId");

                    b.ToTable("ProviderPlacePlaceCondition", (string)null);
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CategoryProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoryProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ConditionProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConditionProfiles");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.ToTable("Favourites");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HouseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceType")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Places");

                    b.HasDiscriminator<string>("PlaceType").HasValue("Place");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperCategoryId");

                    b.ToTable("PlaceCategories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4d5b73e-ef11-4c35-9311-430cf5668469"),
                            Name = "activity"
                        },
                        new
                        {
                            Id = new Guid("1a07bac2-dfc0-4593-9067-b57a798978b5"),
                            Name = "commercial"
                        },
                        new
                        {
                            Id = new Guid("1d27851c-91c1-47fe-bf02-4c4d6ad6a8bf"),
                            Name = "gift_and_souvenir",
                            SuperCategoryId = new Guid("1a07bac2-dfc0-4593-9067-b57a798978b5")
                        },
                        new
                        {
                            Id = new Guid("48a06fc7-2400-4543-b14e-1876696c142c"),
                            Name = "art",
                            SuperCategoryId = new Guid("1a07bac2-dfc0-4593-9067-b57a798978b5")
                        },
                        new
                        {
                            Id = new Guid("94bebc4e-90c5-473f-bb6a-069b6adda8f1"),
                            Name = "entertainment"
                        },
                        new
                        {
                            Id = new Guid("bcaf5a82-96c6-4c00-93d2-28f4ec9349df"),
                            Name = "culture",
                            SuperCategoryId = new Guid("94bebc4e-90c5-473f-bb6a-069b6adda8f1")
                        },
                        new
                        {
                            Id = new Guid("bc3342e2-034d-48a9-b4cd-987372f0cc31"),
                            Name = "theatre",
                            SuperCategoryId = new Guid("bcaf5a82-96c6-4c00-93d2-28f4ec9349df")
                        },
                        new
                        {
                            Id = new Guid("52d4854a-0585-4a3a-be2a-9a87e87bd14e"),
                            Name = "arts_centre",
                            SuperCategoryId = new Guid("bcaf5a82-96c6-4c00-93d2-28f4ec9349df")
                        },
                        new
                        {
                            Id = new Guid("8d6f2ed4-33ce-4dad-9dbb-1802651bd7bb"),
                            Name = "gallery",
                            SuperCategoryId = new Guid("bcaf5a82-96c6-4c00-93d2-28f4ec9349df")
                        },
                        new
                        {
                            Id = new Guid("3c0bcf74-228a-4e2c-af9d-360396fc41f1"),
                            Name = "zoo",
                            SuperCategoryId = new Guid("94bebc4e-90c5-473f-bb6a-069b6adda8f1")
                        },
                        new
                        {
                            Id = new Guid("e571ff7c-9751-4826-a79b-b2ea4ea29f43"),
                            Name = "aquarium",
                            SuperCategoryId = new Guid("94bebc4e-90c5-473f-bb6a-069b6adda8f1")
                        },
                        new
                        {
                            Id = new Guid("4123a70f-c635-4d9a-86db-87fb55378b47"),
                            Name = "planetarium",
                            SuperCategoryId = new Guid("94bebc4e-90c5-473f-bb6a-069b6adda8f1")
                        },
                        new
                        {
                            Id = new Guid("9c8e7225-0747-4b61-b6de-cf7922ed3398"),
                            Name = "museum",
                            SuperCategoryId = new Guid("94bebc4e-90c5-473f-bb6a-069b6adda8f1")
                        },
                        new
                        {
                            Id = new Guid("4f8a160f-0810-47a4-ae96-5fe86a8d45d5"),
                            Name = "heritage"
                        },
                        new
                        {
                            Id = new Guid("3d8ebd19-7bc6-4bcd-88de-7f91533fbe09"),
                            Name = "unesco",
                            SuperCategoryId = new Guid("4f8a160f-0810-47a4-ae96-5fe86a8d45d5")
                        },
                        new
                        {
                            Id = new Guid("700378ee-daf4-4717-a677-01a4b41626e6"),
                            Name = "leisure"
                        },
                        new
                        {
                            Id = new Guid("f743f3ce-7ff2-4516-9a95-7d5526b73fc7"),
                            Name = "park",
                            SuperCategoryId = new Guid("700378ee-daf4-4717-a677-01a4b41626e6")
                        },
                        new
                        {
                            Id = new Guid("e3fc4eb6-f2d2-42e8-9f23-9033d173b7f0"),
                            Name = "garden",
                            SuperCategoryId = new Guid("f743f3ce-7ff2-4516-9a95-7d5526b73fc7")
                        },
                        new
                        {
                            Id = new Guid("21f5955d-f2be-447c-ab1a-c9f2cdd6aceb"),
                            Name = "nature_reserve",
                            SuperCategoryId = new Guid("f743f3ce-7ff2-4516-9a95-7d5526b73fc7")
                        },
                        new
                        {
                            Id = new Guid("1e59325e-fe66-4564-9cdf-abaee170251e"),
                            Name = "natural"
                        },
                        new
                        {
                            Id = new Guid("913ccef7-0d12-45c7-a58f-ffb8b3fc3e24"),
                            Name = "forest",
                            SuperCategoryId = new Guid("1e59325e-fe66-4564-9cdf-abaee170251e")
                        },
                        new
                        {
                            Id = new Guid("99f2a70f-3456-4cac-b42b-33d71ffbf00f"),
                            Name = "water",
                            SuperCategoryId = new Guid("1e59325e-fe66-4564-9cdf-abaee170251e")
                        },
                        new
                        {
                            Id = new Guid("508411fa-0727-4911-b4c5-042b82ac7748"),
                            Name = "spring",
                            SuperCategoryId = new Guid("99f2a70f-3456-4cac-b42b-33d71ffbf00f")
                        },
                        new
                        {
                            Id = new Guid("c6537ab6-bd41-4ea8-bc2f-b1278cd92626"),
                            Name = "reef",
                            SuperCategoryId = new Guid("99f2a70f-3456-4cac-b42b-33d71ffbf00f")
                        },
                        new
                        {
                            Id = new Guid("cd2e09dc-0748-4ef4-b1c3-6e43e864bde3"),
                            Name = "hot_spring",
                            SuperCategoryId = new Guid("99f2a70f-3456-4cac-b42b-33d71ffbf00f")
                        },
                        new
                        {
                            Id = new Guid("8c681a46-3d56-48b8-82d1-69334f7a90aa"),
                            Name = "geyser",
                            SuperCategoryId = new Guid("99f2a70f-3456-4cac-b42b-33d71ffbf00f")
                        },
                        new
                        {
                            Id = new Guid("c83e844c-6ddf-425b-a558-6f8687d9388a"),
                            Name = "sea",
                            SuperCategoryId = new Guid("99f2a70f-3456-4cac-b42b-33d71ffbf00f")
                        },
                        new
                        {
                            Id = new Guid("ceec0664-4b85-4108-b1fc-b29385386188"),
                            Name = "mountain",
                            SuperCategoryId = new Guid("1e59325e-fe66-4564-9cdf-abaee170251e")
                        },
                        new
                        {
                            Id = new Guid("e4df1fbe-50b3-4851-97f7-361d207f180d"),
                            Name = "peak",
                            SuperCategoryId = new Guid("ceec0664-4b85-4108-b1fc-b29385386188")
                        },
                        new
                        {
                            Id = new Guid("b52e08d0-87c0-4c86-922b-924887ee1255"),
                            Name = "glacier",
                            SuperCategoryId = new Guid("ceec0664-4b85-4108-b1fc-b29385386188")
                        },
                        new
                        {
                            Id = new Guid("fd0321e3-a3a9-4370-bddd-6f420fb28287"),
                            Name = "cliff",
                            SuperCategoryId = new Guid("ceec0664-4b85-4108-b1fc-b29385386188")
                        },
                        new
                        {
                            Id = new Guid("ab55e7b7-457d-4ce9-a1b5-c2c6393cece0"),
                            Name = "rock",
                            SuperCategoryId = new Guid("ceec0664-4b85-4108-b1fc-b29385386188")
                        },
                        new
                        {
                            Id = new Guid("45ce98bd-ce01-4166-9dd7-3e2520861f75"),
                            Name = "cave_entrance",
                            SuperCategoryId = new Guid("ceec0664-4b85-4108-b1fc-b29385386188")
                        },
                        new
                        {
                            Id = new Guid("706bc6a7-f596-4303-a4b1-c376d7a77aaf"),
                            Name = "sand",
                            SuperCategoryId = new Guid("1e59325e-fe66-4564-9cdf-abaee170251e")
                        },
                        new
                        {
                            Id = new Guid("a0b3cd3d-b146-4fb2-8712-394b242e59f5"),
                            Name = "dune",
                            SuperCategoryId = new Guid("706bc6a7-f596-4303-a4b1-c376d7a77aaf")
                        },
                        new
                        {
                            Id = new Guid("39f6371a-0499-4068-bc89-0b2cd966dfcc"),
                            Name = "national park"
                        },
                        new
                        {
                            Id = new Guid("6523405c-43b3-41f0-b2ae-40f8460f12bf"),
                            Name = "tourism"
                        },
                        new
                        {
                            Id = new Guid("cdab002c-0662-474f-9dc4-88da2f6d85aa"),
                            Name = "attraction",
                            SuperCategoryId = new Guid("6523405c-43b3-41f0-b2ae-40f8460f12bf")
                        },
                        new
                        {
                            Id = new Guid("19a3c251-c6f4-4bf3-ad6a-8b0cbefb6e01"),
                            Name = "artwork",
                            SuperCategoryId = new Guid("cdab002c-0662-474f-9dc4-88da2f6d85aa")
                        },
                        new
                        {
                            Id = new Guid("9c677019-baff-403d-bdff-29414c009e8a"),
                            Name = "viewpoint",
                            SuperCategoryId = new Guid("cdab002c-0662-474f-9dc4-88da2f6d85aa")
                        },
                        new
                        {
                            Id = new Guid("0de3eca0-f8b7-49d6-bb3e-792bd44f9cd7"),
                            Name = "fountain",
                            SuperCategoryId = new Guid("cdab002c-0662-474f-9dc4-88da2f6d85aa")
                        },
                        new
                        {
                            Id = new Guid("aa008b5b-6b63-425a-ba4e-e1b481d26f4a"),
                            Name = "clock",
                            SuperCategoryId = new Guid("cdab002c-0662-474f-9dc4-88da2f6d85aa")
                        },
                        new
                        {
                            Id = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666"),
                            Name = "sights",
                            SuperCategoryId = new Guid("6523405c-43b3-41f0-b2ae-40f8460f12bf")
                        },
                        new
                        {
                            Id = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("9a28428f-3499-419d-abb9-6f807d39702d"),
                            Name = "church",
                            SuperCategoryId = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2")
                        },
                        new
                        {
                            Id = new Guid("53580aa4-3b35-4e3e-8474-20be7ae285d2"),
                            Name = "chapel",
                            SuperCategoryId = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2")
                        },
                        new
                        {
                            Id = new Guid("d99f9ce8-0521-4b3f-a80c-77ff562d817a"),
                            Name = "cathedral",
                            SuperCategoryId = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2")
                        },
                        new
                        {
                            Id = new Guid("8a04f8da-2699-4900-8922-c296db641071"),
                            Name = "synagogue",
                            SuperCategoryId = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2")
                        },
                        new
                        {
                            Id = new Guid("4718369e-fabe-4546-9dd4-ea778e5a47c4"),
                            Name = "temple",
                            SuperCategoryId = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2")
                        },
                        new
                        {
                            Id = new Guid("5dff5d59-d151-4763-82b8-73ffdf3ba0f6"),
                            Name = "mosque",
                            SuperCategoryId = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2")
                        },
                        new
                        {
                            Id = new Guid("a13a0331-0bc0-4fc5-856c-9845bcbc9264"),
                            Name = "shrine",
                            SuperCategoryId = new Guid("b3fbb9ca-d373-4777-a710-0fc0590d7ac2")
                        },
                        new
                        {
                            Id = new Guid("fc4d03db-15e8-42b3-b12e-c8497b2910ea"),
                            Name = "monastery",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("f04881b4-4a81-4896-8e9e-e1ac61d0c1f6"),
                            Name = "city_hall",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("27ef47fe-83dc-4187-91c5-8c1ae19a51f4"),
                            Name = "lighthouse",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("868cdb81-794b-45f9-bbfe-639cf8aae862"),
                            Name = "windmill",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("989ba55f-8c00-4275-8841-fb2079f7d9be"),
                            Name = "tower",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("07cb7bf4-ed0d-41d3-a8e4-185969ac733d"),
                            Name = "battlefield",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("d3d0a4db-52ab-44cd-803b-c877c0a26b3e"),
                            Name = "fort",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("03a4cf6c-930e-4b4c-b15c-b5b1e09bfec4"),
                            Name = "castle",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("58c49972-fc79-42a3-83dc-49010ec9a528"),
                            Name = "ruines",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("4356ebc6-381f-4d60-88fc-4e10271b9da5"),
                            Name = "archaeological_site",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("0d08b544-f2ce-46ea-b2f9-8fc364c3a7fa"),
                            Name = "city_gate",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("7c271871-199e-4081-a9a0-8aabdead7df7"),
                            Name = "bridge",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f"),
                            Name = "memorial",
                            SuperCategoryId = new Guid("7ae4d719-3dd0-48f7-88a0-29e24e873666")
                        },
                        new
                        {
                            Id = new Guid("b0678e78-ec01-47a8-8af8-28bea17a6f2e"),
                            Name = "aircraft",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("b484410c-f7b8-482e-9d6d-4b02644923da"),
                            Name = "locomotive",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("8a95df9d-a5da-44cb-b6d7-9965ffa547c3"),
                            Name = "railway_car",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("cd99ca4f-1a53-492c-a8d1-1efe80c094ab"),
                            Name = "ship",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("73560e40-6d12-4cef-bb58-2c8df2e58e71"),
                            Name = "tank",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("32424a78-4a5e-4206-bddc-90956446fac4"),
                            Name = "tomb",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("cd760fa4-86fb-4231-a8b5-f730c6c3fb88"),
                            Name = "monument",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("6549fa9b-bf09-485d-b9d8-d9285c4260e0"),
                            Name = "wayside_cross",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("e59b6d29-b47b-4e83-b338-2d9012d58e8c"),
                            Name = "boundary_stone",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("85bd5dda-2ec9-4fd5-9138-95bb051c9f65"),
                            Name = "pillory",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("ed9041f2-6278-4e7e-9395-62e9af4b69fd"),
                            Name = "milestone",
                            SuperCategoryId = new Guid("5ba3187e-e340-402d-a769-b5b8c51c892f")
                        },
                        new
                        {
                            Id = new Guid("5d866186-94e9-4ca8-b9b2-3d27d7d0afa0"),
                            Name = "religion"
                        },
                        new
                        {
                            Id = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62"),
                            Name = "place_of_worship",
                            SuperCategoryId = new Guid("5d866186-94e9-4ca8-b9b2-3d27d7d0afa0")
                        },
                        new
                        {
                            Id = new Guid("56a8de2d-2f20-4704-93ae-caaa55f749d7"),
                            Name = "buddhism",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("c87b76f1-4ce6-464e-b319-6c6f158181c5"),
                            Name = "christianity",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("5a1f61e2-6e46-4394-9c29-dbb7c75d4a49"),
                            Name = "hinduism",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("9ec0bcbf-9c90-4168-ae6e-8064df5dae92"),
                            Name = "islam",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("73d1be83-29cb-49de-b2df-76ffffee3fe7"),
                            Name = "judaism",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("2947caec-6bf3-48d4-8b9b-ea30d9670d00"),
                            Name = "shinto",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("44316a54-3e10-4d5f-b50a-78457b945ca3"),
                            Name = "sikhism",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("008cb668-b382-4539-bdb5-212b8d39d4ca"),
                            Name = "multifaith",
                            SuperCategoryId = new Guid("c6c83feb-9ba4-492c-b435-0e8d4f45ce62")
                        },
                        new
                        {
                            Id = new Guid("dea0b229-93a4-4bd7-95e2-171997480b99"),
                            Name = "sport"
                        },
                        new
                        {
                            Id = new Guid("5b7f7497-4128-4e76-bcd1-caf0706b5a06"),
                            Name = "stadium",
                            SuperCategoryId = new Guid("dea0b229-93a4-4bd7-95e2-171997480b99")
                        },
                        new
                        {
                            Id = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7"),
                            Name = "catering"
                        },
                        new
                        {
                            Id = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7"),
                            Name = "restaurant",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("380260c0-3459-46ad-87fe-5fa8918aa536"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("1fac5caa-fafe-4de5-9434-e8458a39beec"),
                            Name = "burger",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("f845afb6-76ad-46b9-b70f-487a2efbf278"),
                            Name = "regional",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("aed5f2fd-ce6d-4847-afc1-2b03bb77a117"),
                            Name = "italian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("8644cde1-c44c-4bb0-bfbf-2d4ebe21572b"),
                            Name = "chinese",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("a980578d-b7fc-4af7-b356-80c5687a3505"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("0fcd3d89-7939-4921-bd92-6afd6e89b586"),
                            Name = "chicken",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("9d6a483d-0200-4d00-97b5-9d01251cc5bc"),
                            Name = "mexican",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("1c5788bc-406e-472e-b7eb-dbef62e9f2d1"),
                            Name = "japanese",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("82b53169-23a1-4afe-b0b0-2cb1436c797e"),
                            Name = "american",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("9c45d908-f378-434e-b55c-82c9a36e4869"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("ec4959fd-39fd-4dde-b934-44217ec1727d"),
                            Name = "indian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("0b2fffc8-183d-4725-8f47-f9be63700c5a"),
                            Name = "asian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("8eaa9888-c407-4168-b637-7c494abd0eab"),
                            Name = "sushi",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("6d22975a-c6d5-40f1-86eb-bfd9e5abe3ca"),
                            Name = "french",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("3faf5400-5af6-4384-bd56-b35595a06264"),
                            Name = "german",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("c5b6d5cf-2ad1-467c-a904-cc5e7c61f507"),
                            Name = "thai",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("0dc2173d-89dd-4243-87fa-153496aa68a2"),
                            Name = "greek",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("764cb290-bb0d-49e4-839c-d9f84b9d7c71"),
                            Name = "seafood",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("816f8f07-b8e1-4895-9c17-619762e045f4"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("6ac0f341-74b4-4b1d-88f2-20207dcff997"),
                            Name = "steak_house",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("62d0edbb-257a-4de8-a9f3-cf5a115a3508"),
                            Name = "international",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("1fec6c21-00c3-473e-81ff-bd2135bf9324"),
                            Name = "tex-mex",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("9b102e2f-590c-45bd-afb1-2011bff8f146"),
                            Name = "vietnamese",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("51d1dfe0-eb3e-433d-8192-52f68f3aeb83"),
                            Name = "turkish",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("9b081cc9-9af5-4ad1-8d68-30e2a65e3512"),
                            Name = "korean",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("542ae756-eb7d-4a25-9291-a9c40be292c5"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("00d4d1c4-e6a1-4f83-ab3d-d97d52283083"),
                            Name = "barbecue",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("bf5bf8fe-57a8-46c0-9637-fd9e82280ef7"),
                            Name = "spanish",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("d79d6c57-0aef-47fb-8586-e59441c9c9c1"),
                            Name = "fish",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("19107b41-5fe7-4459-be48-a068de87ebb1"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("8d268f61-bce9-4a93-8d01-0183e8e4b174"),
                            Name = "mediterranean",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("802e048b-dff9-4930-a242-d0658da8fd67"),
                            Name = "friture",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("8c13a6dc-9c68-49e0-90a4-30a86f54832a"),
                            Name = "beef_bowl",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("acba883e-5751-47eb-b77c-160f5bbe6af4"),
                            Name = "lebanese",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("5b43285c-06ac-4fac-bcc6-78b8b6c113e9"),
                            Name = "wings",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("671eef66-8489-41a1-af66-37e377549d26"),
                            Name = "georgian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("1b3e8986-bde4-4ea9-8c97-5d653b3ab4f7"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("2e097e02-d685-48d5-9e96-3fe6a000ed83"),
                            Name = "indonesian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("82d50ad1-4dd6-49f9-aa01-5960a61ab492"),
                            Name = "arab",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("c83d19c6-2522-4990-8c04-00b68ba1b060"),
                            Name = "portuguese",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("5d8bf5ef-9101-4222-96b5-e60e5bae0f68"),
                            Name = "russian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("92f1c2dd-9a59-4cb0-af8d-eb88c133e92f"),
                            Name = "filipino",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("f94e9bba-7d97-4e36-b2bf-d4cba5073777"),
                            Name = "african",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("8ac465b0-007f-4cb9-8b62-d025d01992c4"),
                            Name = "malaysian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("8a45cbd7-cf45-46e1-a200-be4eeb53443f"),
                            Name = "caribbean",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("fed80e2f-a00c-4bc1-a727-c7a29eeb55e4"),
                            Name = "peruvian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("ab6ee76d-125c-4e0c-b5e5-25632ed20ab1"),
                            Name = "bavarian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("982cc056-a060-433f-8a1b-1c1a2b23ee08"),
                            Name = "brazilian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("a7ba4bef-624e-4f79-bbc0-635883794ed6"),
                            Name = "curry",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("9c9a60e3-f093-4a20-b1cb-43f6871b83e1"),
                            Name = "dumpling",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("360d046c-94b3-4368-92d0-1664ccba2bac"),
                            Name = "persian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("6a045503-9ac2-434f-8399-1951096a6a97"),
                            Name = "argentinian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("bbe46a60-79de-413b-b5f1-c6169f2475e3"),
                            Name = "oriental",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("e852876f-9cd1-4d3f-8540-20204a22b409"),
                            Name = "balkan",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("6d9b6280-5506-4d31-9e70-dd8c0a4ff011"),
                            Name = "moroccan",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("da04af91-175c-435f-93d5-1cfbde31faff"),
                            Name = "pita",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("94df45e6-7b7b-4dc9-923f-3bccdd38c833"),
                            Name = "ethiopian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("45c1832e-4901-4c29-a56e-ba7b7073bf20"),
                            Name = "taiwanese",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("5e935ebf-8a8f-4ca3-9965-2ec5b0c4d2bf"),
                            Name = "latin_american",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("05b3e79a-d83a-4480-801b-d2247a91300d"),
                            Name = "hawaiian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("5976f288-f2c4-4c8f-b7c7-0309a841acb2"),
                            Name = "irish",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("eabb28cb-87d8-4c88-896c-87dfb1fb3bec"),
                            Name = "austrian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("82c01d48-8531-44fb-9fd0-299fcf942fc1"),
                            Name = "croatian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("613fafff-35bf-41bf-a0df-083d9df3af4a"),
                            Name = "danish",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("435267d4-68dd-4363-b997-869a63d718d4"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("581020c1-cb93-4d90-8ee1-21c831c87ed1"),
                            Name = "bolivian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("3a659dc0-f56d-4df8-8155-2d758ae03f08"),
                            Name = "hungarian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("000a7da4-018e-469b-bc3e-bfd5fae1ae65"),
                            Name = "western",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("7028cbaf-990b-49cf-a9cc-1187a9cab30e"),
                            Name = "european",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("3abd7e29-f745-4223-996e-ff4f1b03fc7e"),
                            Name = "jamaican",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("e741b064-2d6f-47d5-8609-24a03b9a8091"),
                            Name = "cuban",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("feef391a-ce07-4b7c-81b2-e4e2f5737833"),
                            Name = "soup",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("eb5e76c0-78e3-4858-94f7-28753dc5960b"),
                            Name = "uzbek",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("2c79fab7-76c9-496b-aa85-10c4282b082e"),
                            Name = "nepalese",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("31fdeeb8-a24e-46ab-9433-61dd54a6f05d"),
                            Name = "czech",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("f2b85077-45df-4408-a676-40e0a87293cd"),
                            Name = "syrian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("824a9a9c-6f14-497a-8278-950ec227e38a"),
                            Name = "afghan",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("ff9d94db-4ae4-4dd9-8a90-8a1dfe8d1f43"),
                            Name = "malay",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("d64b14db-7a95-41b8-b266-7c4086cc9606"),
                            Name = "chili",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("ab5c1dee-ae0a-4736-97a2-7103c65d8052"),
                            Name = "belgian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("da750ea6-5327-4795-a521-e7dde380f722"),
                            Name = "ukrainian",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("e4aaece8-937a-48b0-9404-0b5ceb535c72"),
                            Name = "swedish",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("356c09d7-23f8-4d19-9055-ce478fd9fd4f"),
                            Name = "pakistani",
                            SuperCategoryId = new Guid("7a319b08-f49f-4020-a6cc-9450f8de7ee7")
                        },
                        new
                        {
                            Id = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e"),
                            Name = "fast_food",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("60874137-a9c6-49c7-80af-51733a8acb2e"),
                            Name = "pizza",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("d98dee07-7224-4b7a-b750-1574dbbcfa92"),
                            Name = "burger",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("d621ba70-aceb-4381-b5af-8282de83234c"),
                            Name = "sandwich",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("2d071585-f86c-4052-83a6-9fa26027c46a"),
                            Name = "kebab",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("bcdd0166-6928-41e5-8fa6-6e51d82ee923"),
                            Name = "fish_and_chips",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("581d9524-6378-4780-9958-e43f4cd6f70b"),
                            Name = "noodle",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("83ef57d6-021a-4583-a135-7bd77c36841e"),
                            Name = "ramen",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("b71511de-ed5f-4e11-a8e0-7eb5586ff721"),
                            Name = "wings",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("7bed9af3-f550-41c1-bb85-aca9ace2ea3f"),
                            Name = "tapas",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("524b7d8a-b864-4d10-b9e3-41ea11b5c5c2"),
                            Name = "pita",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("587b0ee6-1ea1-46d6-a40d-acf605a12b36"),
                            Name = "tacos",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("e4a0c7e2-7b7e-4221-83ab-b7d3d9701b0e"),
                            Name = "soup",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("ea906f63-c92e-4bd2-92a4-832ce3ade742"),
                            Name = "salad",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("ab5dd236-1a9e-4fea-b933-8488c50ae354"),
                            Name = "hot_dog",
                            SuperCategoryId = new Guid("73bfaa2a-fd65-48ca-a295-a9ab63f7422e")
                        },
                        new
                        {
                            Id = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791"),
                            Name = "cafe",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("c9969533-8f82-4bdf-9024-169ab004691a"),
                            Name = "waffle",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("61781fcd-c97a-41e1-89d4-0a8551402ba3"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("0397e689-0c5e-406e-85d0-e6eedd1496df"),
                            Name = "coffee_shop",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("62359fc6-42e7-4270-bb2a-1aa5a8d39fc0"),
                            Name = "donut",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("e1b4e94f-11b8-4a63-9891-85345bfe4d5c"),
                            Name = "crepe",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("1a8d5c82-f1b8-47c1-b378-b5f76ffcee00"),
                            Name = "bubble_tea",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("c3a4a137-8499-4759-b815-c3baf348b0ab"),
                            Name = "cake",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("ddca919a-1fff-4936-b9dd-48ed7bfbdb40"),
                            Name = "frozen_yogurt",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("7027d670-f007-4259-9295-69afc952b350"),
                            Name = "dessert",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("606900cd-56e8-423a-b8d8-077a291c019f"),
                            Name = "coffee",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("f770679f-6eae-4413-bd9d-a272912428c1"),
                            Name = "tea",
                            SuperCategoryId = new Guid("567f9bc2-c378-4c5e-8b5b-c4a335b85791")
                        },
                        new
                        {
                            Id = new Guid("8d2ca363-c5eb-469f-85dc-96a5e5ea9f91"),
                            Name = "food_court",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("bd30d249-f573-49e5-bed8-1ced12ff7fec"),
                            Name = "bar",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("ccc33ef4-ed24-4a4e-abb0-5216a8501dfb"),
                            Name = "pub",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("a31fb443-a283-475e-afca-cef92f910379"),
                            Name = "ice_cream",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("832c8721-90f0-4bb5-a75e-dec6e695cc7b"),
                            Name = "biergarten",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        },
                        new
                        {
                            Id = new Guid("dc1f1ff9-b7bb-4b38-860f-cce3b5c4173e"),
                            Name = "taproom",
                            SuperCategoryId = new Guid("a8a1c66d-46fe-481e-901b-595e80ecd5b7")
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperConditionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SuperConditionId");

                    b.ToTable("PlaceConditions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a9ef5392-6f8f-44f8-8fbb-4da3f17f01c9"),
                            Name = "internet_access"
                        },
                        new
                        {
                            Id = new Guid("6446c1c2-4262-4ca4-90d5-68ba427832a6"),
                            Name = "free",
                            SuperConditionId = new Guid("a9ef5392-6f8f-44f8-8fbb-4da3f17f01c9")
                        },
                        new
                        {
                            Id = new Guid("9d2c7722-3103-429b-b13e-466612ce8f75"),
                            Name = "for_customers",
                            SuperConditionId = new Guid("a9ef5392-6f8f-44f8-8fbb-4da3f17f01c9")
                        },
                        new
                        {
                            Id = new Guid("1c6fccbe-58ac-4b3c-86c0-cc363cf9c40a"),
                            Name = "wheelchair"
                        },
                        new
                        {
                            Id = new Guid("e958746c-cd58-4a32-a0ae-dde91324c2de"),
                            Name = "yes",
                            SuperConditionId = new Guid("1c6fccbe-58ac-4b3c-86c0-cc363cf9c40a")
                        },
                        new
                        {
                            Id = new Guid("7f1b4cda-fafc-40cc-95fd-940ca8abe50d"),
                            Name = "limited",
                            SuperConditionId = new Guid("1c6fccbe-58ac-4b3c-86c0-cc363cf9c40a")
                        },
                        new
                        {
                            Id = new Guid("d4341c00-702c-4175-b4c3-78d1a6ceb52f"),
                            Name = "dogs"
                        },
                        new
                        {
                            Id = new Guid("d111d07b-f9b9-4f24-8563-9920e8ebe448"),
                            Name = "yes",
                            SuperConditionId = new Guid("d4341c00-702c-4175-b4c3-78d1a6ceb52f")
                        },
                        new
                        {
                            Id = new Guid("8981efa4-c8b0-40ca-8060-761f101f3019"),
                            Name = "leashed",
                            SuperConditionId = new Guid("d4341c00-702c-4175-b4c3-78d1a6ceb52f")
                        },
                        new
                        {
                            Id = new Guid("7b836cf0-a6b9-44b5-a635-7f8f77d0509a"),
                            Name = "no-dogs"
                        },
                        new
                        {
                            Id = new Guid("302aadc6-a941-4369-897c-00d2cfb9b1e2"),
                            Name = "access"
                        },
                        new
                        {
                            Id = new Guid("240eea33-ff6f-47b9-9f33-9ffbc61302f6"),
                            Description = "Places that are available for public",
                            Name = "yes",
                            SuperConditionId = new Guid("302aadc6-a941-4369-897c-00d2cfb9b1e2")
                        },
                        new
                        {
                            Id = new Guid("86a1f0b1-85e0-44f2-8e1c-2ab19b4ecf5a"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("302aadc6-a941-4369-897c-00d2cfb9b1e2")
                        },
                        new
                        {
                            Id = new Guid("d36dc7f9-e13a-4f41-8524-4fa0253f0f2c"),
                            Name = "access_limited"
                        },
                        new
                        {
                            Id = new Guid("cdffdc43-bb78-41c9-9ec3-f9e0258b244e"),
                            Name = "customers",
                            SuperConditionId = new Guid("d36dc7f9-e13a-4f41-8524-4fa0253f0f2c")
                        },
                        new
                        {
                            Id = new Guid("1ffd0bd7-10a9-4d60-8a3a-a014e04b4778"),
                            Name = "fee"
                        },
                        new
                        {
                            Id = new Guid("8eb2f7b3-eeff-4efd-be28-87bf3b780942"),
                            Description = "There is no fee or it's not specified",
                            Name = "no_fee"
                        },
                        new
                        {
                            Id = new Guid("d5e44992-5875-4d24-a5e2-34aaf9ec28a6"),
                            Name = "no",
                            SuperConditionId = new Guid("8eb2f7b3-eeff-4efd-be28-87bf3b780942")
                        },
                        new
                        {
                            Id = new Guid("aef8c6fa-622a-45d3-bf0a-7b226f7ef272"),
                            Name = "not_specified",
                            SuperConditionId = new Guid("8eb2f7b3-eeff-4efd-be28-87bf3b780942")
                        },
                        new
                        {
                            Id = new Guid("732530ea-2d44-43bc-9d69-777f97434727"),
                            Description = "Name property defined for the place",
                            Name = "named"
                        },
                        new
                        {
                            Id = new Guid("3997e4ba-ebc0-4a23-81c5-87534df7007c"),
                            Description = "Places where you can buy or eat vegetarian food",
                            Name = "vegetarian"
                        },
                        new
                        {
                            Id = new Guid("71fbbf9d-4f9d-4bfa-a82a-a9182d4d4968"),
                            Name = "only",
                            SuperConditionId = new Guid("3997e4ba-ebc0-4a23-81c5-87534df7007c")
                        },
                        new
                        {
                            Id = new Guid("086d43ab-7b86-4a52-972c-4cc907dfcca7"),
                            Description = "Places where you can buy or eat vegan food",
                            Name = "vegan"
                        },
                        new
                        {
                            Id = new Guid("e33deea8-eefc-4c3f-8052-13a64dfe938d"),
                            Name = "only",
                            SuperConditionId = new Guid("086d43ab-7b86-4a52-972c-4cc907dfcca7")
                        },
                        new
                        {
                            Id = new Guid("4dc45197-72a3-44d8-93ee-29a1d9b8b910"),
                            Description = "Places where you can buy or eat halal food",
                            Name = "halal"
                        },
                        new
                        {
                            Id = new Guid("a0cd62c4-bfce-4fa3-bf11-c9a7160c2ecf"),
                            Name = "only",
                            SuperConditionId = new Guid("4dc45197-72a3-44d8-93ee-29a1d9b8b910")
                        },
                        new
                        {
                            Id = new Guid("89bd7bed-19e6-4efe-a27f-d0ef027412cc"),
                            Description = "Places where you can buy or eat kosher food",
                            Name = "kosher"
                        },
                        new
                        {
                            Id = new Guid("96836d53-ba9a-4984-ac0c-da26990a1f35"),
                            Name = "only",
                            SuperConditionId = new Guid("89bd7bed-19e6-4efe-a27f-d0ef027412cc")
                        },
                        new
                        {
                            Id = new Guid("e49942e1-f9bf-4611-a179-5a1ded01eb5c"),
                            Description = "Places where you can buy or eat organic food",
                            Name = "organic"
                        },
                        new
                        {
                            Id = new Guid("c214ef2c-04e4-4426-b408-44a44c9968ae"),
                            Name = "only",
                            SuperConditionId = new Guid("e49942e1-f9bf-4611-a179-5a1ded01eb5c")
                        },
                        new
                        {
                            Id = new Guid("69a4acb9-74db-4d71-a284-46402b01dfa4"),
                            Description = "Places where you can buy or eat gluten free food",
                            Name = "gluten_free"
                        },
                        new
                        {
                            Id = new Guid("42a49c09-ee25-4da6-9b26-1a83d2bf3ada"),
                            Description = "Places where you can buy or eat sugar free food",
                            Name = "sugar_free"
                        },
                        new
                        {
                            Id = new Guid("b9cea2a9-4d40-412f-813b-32eca31a1f3e"),
                            Description = "Places where you can buy or eat egg free food",
                            Name = "egg_free"
                        },
                        new
                        {
                            Id = new Guid("9c8c602c-0644-4218-97b3-76c9ed4feef0"),
                            Description = "Places where you can buy or eat soy free food",
                            Name = "soy_free"
                        });
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("FromTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Mode")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<Guid?>("ToTripPointId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("TransferTime")
                        .HasColumnType("time");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FromTripPointId");

                    b.HasIndex("ToTripPointId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TransferPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Budget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CategoryProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProfileId");

                    b.HasIndex("ConditionProfileId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("TripId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TripId");

                    b.ToTable("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeOnly>("ClosingTime")
                        .HasColumnType("time");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("OpeningTime")
                        .HasColumnType("time");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PredictedCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("TripDayId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripDayId");

                    b.ToTable("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ActualCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<TimeSpan?>("ActualTimeSpent")
                        .HasColumnType("time");

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PlaceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("TripPointId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlaceId");

                    b.HasIndex("TripPointId")
                        .IsUnique();

                    b.ToTable("TripPointReviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<Guid?>("PlaceCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("PlaceCategoryId");

                    b.HasDiscriminator().HasValue("CustomPlace");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.ProviderPlace", b =>
                {
                    b.HasBaseType("TravelBuddyAPI.Models.Place");

                    b.Property<string>("OpenningHours")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ProviderPlace");
                });

            modelBuilder.Entity("CategoryProfilePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", null)
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CategoryProfilePlaceCategory_PlaceCategoryId");
                });

            modelBuilder.Entity("ConditionProfilePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", null)
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_ConditionProfileId");

                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ConditionProfilePlaceCondition_PlaceConditionId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", null)
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_PlaceCategoryId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCategory_ProviderPlaceId");
                });

            modelBuilder.Entity("ProviderPlacePlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", null)
                        .WithMany()
                        .HasForeignKey("PlaceConditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_PlaceConditionId");

                    b.HasOne("TravelBuddyAPI.Models.ProviderPlace", null)
                        .WithMany()
                        .HasForeignKey("ProviderPlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ProviderPlacePlaceCondition_ProviderPlaceId");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.FavouriteProfiles", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId");

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId");

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "SuperCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("SuperCategoryId");

                    b.Navigation("SuperCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCondition", "SuperCondition")
                        .WithMany("SubConditions")
                        .HasForeignKey("SuperConditionId");

                    b.Navigation("SuperCondition");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TransferPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "FromTripPoint")
                        .WithMany()
                        .HasForeignKey("FromTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "ToTripPoint")
                        .WithMany()
                        .HasForeignKey("ToTripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TransferPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromTripPoint");

                    b.Navigation("ToTripPoint");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.CategoryProfile", "CategoryProfile")
                        .WithMany()
                        .HasForeignKey("CategoryProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.ConditionProfile", "ConditionProfile")
                        .WithMany()
                        .HasForeignKey("ConditionProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.Place", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProfile");

                    b.Navigation("ConditionProfile");

                    b.Navigation("Destination");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Trip", "Trip")
                        .WithMany("TripDays")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripDay", "TripDay")
                        .WithMany("TripPoints")
                        .HasForeignKey("TripDayId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripDay");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPointReview", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.Place", "Place")
                        .WithMany("Reviews")
                        .HasForeignKey("PlaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TravelBuddyAPI.Models.TripPoint", "TripPoint")
                        .WithOne("Review")
                        .HasForeignKey("TravelBuddyAPI.Models.TripPointReview", "TripPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");

                    b.Navigation("TripPoint");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.CustomPlace", b =>
                {
                    b.HasOne("TravelBuddyAPI.Models.PlaceCategory", "PlaceCategory")
                        .WithMany()
                        .HasForeignKey("PlaceCategoryId");

                    b.Navigation("PlaceCategory");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Place", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.PlaceCondition", b =>
                {
                    b.Navigation("SubConditions");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.Trip", b =>
                {
                    b.Navigation("TripDays");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripDay", b =>
                {
                    b.Navigation("TransferPoints");

                    b.Navigation("TripPoints");
                });

            modelBuilder.Entity("TravelBuddyAPI.Models.TripPoint", b =>
                {
                    b.Navigation("Review");
                });
#pragma warning restore 612, 618
        }
    }
}
