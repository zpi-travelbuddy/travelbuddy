name: Build, Test, Deploy to Azure Container Instance

on:
  workflow_dispatch:
  push:
    branches:
      - ZPI-86-create-ci-cd-pipeline

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Setup .NET SDK
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.403'

    # Step 3: Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Step 4: Build the project
    - name: Build project
      run: dotnet build --no-restore --configuration Release

    # Step 5: Run tests
    - name: Run tests
      run: dotnet test --no-build --verbosity normal

  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/TravelBuddyAPI

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 3: Build and push Docker image
    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/travelbuddyapi:${{ github.sha }} -f Dockerfile.api .
        docker push ${{ secrets.DOCKER_USERNAME }}/travelbuddyapi:${{ github.sha }}

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
    # Step 1: Login to Azure
    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Step 2: Restart or update Azure Container Instance
    - name: Restart Azure Container Instance
      run: |
        az container restart --name travelbuddyapi-container --resource-group TravelBuddy || \
        az container create --name travelbuddyapi-container --resource-group TravelBuddy --image ${{ secrets.DOCKER_USERNAME }}/travelbuddyapi:${{ github.sha }} --dns-name-label travelbuddy --ports 8080
